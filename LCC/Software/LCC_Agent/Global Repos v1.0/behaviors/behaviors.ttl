# @base <http://localhost:8090/rdf4j/repositories/behaviors#> .

@prefix agents: <http://localhost:8090/rdf4j/repositories/agents#> .
@prefix : <http://localhost:8090/rdf4j/repositories/behaviors#> .
@prefix domain: <http://localhost:8090/rdf4j/repositories/domain#> .
@prefix localServices: <http://localhost:8090/rdf4j/repositories/localServices#> .
@prefix localAgents: <http://localhost:8090/rdf4j/repositories/localAgents#> .
@prefix services: <http://localhost:8090/rdf4j/repositories/services#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix ajan: <http://www.ajan.de/ajan-ns#> .
@prefix bt: <http://www.ajan.de/behavior/bt-ns#> .
@prefix actn: <http://www.ajan.de/actn#> .
@prefix http-headers: <http://www.w3.org/2008/http-headers#> .
@prefix http-methods: <http://www.w3.org/2008/http-methods#> .
@prefix http-core: <http://www.w3.org/2006/http#> .
@prefix ssc: <http://welcome/ajan/servicecomputing#> .
@prefix welcomePlugin: <http://welcome/ajan/plugin#> .

# ----------------------------------------------
# ------------- WelcomeBehaviorTree ------------
# ----------------------------------------------

# ----------- Endpoint ------------

# localhost:8080/welcome/integration/coordination/ajan/agents/<agentName>?capability=receiveSpeechAct | POST | text/turtle
# Body: "<http://test/Subject> <http://test/predicate> "Hallo! I come from the KMS" ."
# localhost:8080/welcome/integration/coordination/ajan/agents/<agentName>?capability=populateRepo | POST | text/turtle
# Body: "<http://test/Subject> <http://test/predicate> "Hallo! I come from the WPM" ."

# -------------------------------------------	
# ---------------- Behaviors ----------------
# -------------------------------------------	

# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ LCC Related BTs ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

:StartLccAssessmentBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Start LCC Assessment Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleStartLccAssessmentEvent
						:MessageToAppToStartLccAssessment
						:SaveLccAssessmentConfig
						:ClearExecutionKnowledge
						)
					]			
				] .
				
:LccAssessmentCompleteBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "LCC Assessment Completed Behavior Tree" ;
	bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleLccAssessmentCompleteEvent
						:SaveLccAssessmentScores
						:ComputeLccCpl
						:WriteLccAttributesToExec
						:WriteAgentId2Execution
						:MessageToTpToSubmitLccAssessmentInfo
						:ClearExecutionKnowledge
						)
				] .

:SubmitFinalLccResultBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Submit LCC Final Result Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleLccFinalResultEvent
						:SaveLccFinalResult
						:ClearExecutionKnowledge
						)
					]			
				] .


:StartLccProcessBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "LCC Protocol Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleStartLccProcessEvent
						:WriteAgentId2Execution
						#:WriteRootAddress2Exec
						:UpdateLccProblem
						[
							a bt:Priority ;
							bt:hasChildren (
									[
										a bt:Sequence ;
										bt:hasChildren (
												:ConditionDedicatedAgent
												:ProduceLccDedicatedAgentBehaviorEvent
														)
									]
									[
										a bt:Sequence ;
										bt:hasChildren (
												:WriteLccPersonalInfo2Exec
												:WriteAgentAddresses2Exec
												:Message2DedicatedLccPersonalInfo
												:InsertLccPersonalInfo2LakrWithLccId
														)
									]
									[
										a bt:Sequence ;
										bt:hasChildren (
												:ClearExecutionKnowledge
												:JustFail
														)
									]									
										)
						]
						:WriteLccProblem2Lakr
						:ClearExecutionKnowledge
							)
					]			
				] .
				
:LccDedicatedAgentBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "LCC Dedicated Agent Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
					a bt:Sequence ;
					bt:hasChildren (
							:HandleLccDedicatedAgentEvent
							[	
								a bt:Priority ;
								bt:hasChildren (
										[
											a bt:Sequence ;
											bt:hasChildren (
													:WriteLccPersonalInfo2Exec
													:InsertLccPersonalInfo2LakrWithLccId
													:Wait4LccPersonalInfo
													:WriteCompleteLccPersonalInfo2Exec
													[
														a bt:Priority ;
														bt:hasChildren (
																:ConditionAllReturnedLccPersonalInfo
													#			[
													#				a bt:Sequence ;
													#				bt:hasChildren (
													#						:MessageRequestLccPersonalInfo
													#						:Wait4LccPersonalInfo
													#						:ConditionAllReturnedLccPersonalInfo
													#								)
													#			]
																		)
													]
													:ProduceComputeCoalitionsEvent
													:ClearExecutionKnowledge
															)
										]
										:ProduceLccFailedEvent
												)
							]
									)
						]
				] .
				
	
:ReceiveLccPersonalInfoBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Receive LCC Personal Info Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleReceiveLccPersonalInfoEvent
						:InsertLccPersonalInfoOfSender2Lakr
						:ClearExecutionKnowledge
								)
					]
				] .

:ComputeLccCoalitionStructuresBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Compute LCC Coalition Structures Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleComputeCoalitionsEvent
						[
							a bt:Priority ;
							bt:hasChildren (
									[
										a bt:Sequence ;
										bt:hasChildren (
												#:ComputeLccCannotLinkConnections
												:GenerateFeasibleCoalitions4Lcc
												:ComputeLccCoalitionInfo_addingAttendanceInfo
												[
													a bt:Priority ;
													bt:hasChildren (
														:RemoveAttendanceViolatedCoalitions
														:SimpleSuccess
													)
												]
												:UpdateLccCoalitionInfoWrt
											#	[
											#		a bt:Priority ;
											#		bt:hasChildren (
															:ConditionAnyFeasibleCoalitionExists
											#				:ProduceFinalizeLccEvent
											#						)
											#	]
												:WriteAgentAddresses2Exec
												:BroadcastCoalitions2ReceiveUtilities
												:WriteLccPreferences2Exec
												:ComputeSdOfLccCoalitions
												:ComputeUtilityValuesInLccWrite
												:InsertLccUtilities2Lakr
												:Wait4UtilityValues
												:ComputeLccCoalitionValues
												:ProduceSolveLccEvent
												:ClearExecutionKnowledge
														)
									]
									:ProduceLccFailedEvent
											)
						]
								)
					]
				] .

:ComputeLccUtilityValuesBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Compute LCC Utility Values Behavior Tree" ;
	bt:hasChild	[
		a bt:UntilFail ;
		bt:hasChild [		
				a bt:Sequence ;
				bt:hasChildren (
						:HandleComputeLccUtilitiesEvent
						:WriteLccPreferences2Exec
						:WriteAgentId2Execution
						:ComputeUtilityValuesInLccWrite
						#:WriteRootAddress2Exec
						:WriteAgentAddresses2Exec
						:MessageLccUtilities2Dedicated
						:InsertLccUtilities2Lakr
						:ClearExecutionKnowledge
								)
					]
				].

:ReceiveLccUtilityValuesBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Receive LCC Utility Values BT" ;
	bt:hasChild [
#		a bt:Sequence ;
#		bt:hasChildren (
#				[
					a bt:UntilFail ;
					bt:hasChild [
							a bt:Sequence ;
							bt:hasChildren (
								:HandleReceiveLccUtilitiesEvent
						#		:ReplaceLccProcessType
						#		:WriteAllIncompleteLccProcess2Ek
						#		:RemoveUnmatchingLccProcesses
						#		:ConditionAgentInAnyMAC
						#		:RetrieveLccProcessInfoSbt
						#		:WriteLccUtilitiesOfSender2Lakr
								:InsertLccUtilitiesOfSender2Lakr
								:ClearExecutionKnowledge
											)
			
								]
#				]
#						)
				] .


:SolveLccBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Solve LCC Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleSolveLccEvent
						[
							a bt:Priority ;
							bt:hasChildren (
									[
										a bt:Sequence ;
										bt:hasChildren (
												:WriteAgentId2Execution
												:WriteCoalitionValues2Ek
												#:JustFail
												:SolveLcc_BOSS
												:WriteAgentAddresses2Exec
												:BroadcastLccResult
												:Message2TeacherLccResult
												:ProduceFinalizeLccEvent
												:ClearExecutionKnowledge
														)
									]
									:ProduceLccFailedEvent
											)
						]
							)
					]
				] .

:FinalizeLccProcessBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Finalize LCC Process Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
				a bt:Sequence ;
				bt:hasChildren (
						:HandleFinalizeLccEvent
						:WriteLccResult
						:ComputeLccRuntime
						[
							a bt:Priority ;
							bt:hasChildren (
									:ConditionAgentInAnyCoordination
									:Message2WPMUpdateStatus2Active
							)
						]
								)
					]
				] .

:LccFailureBt
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "LCC Failure Behavior Tree" ;
	bt:hasChild [
		a bt:UntilFail ;
		bt:hasChild [
			a bt:Sequence ;
			bt:hasChildren (
						:HandleLccFailedEvent
						:Message2TeacherLccFailed
						:BroadcastLccFailed
						:ProduceFinalizeLccEvent
							)
					]
				] .

# ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ LCC Related BTs ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑


# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ LCC Related BT Nodes ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

:HandleStartLccAssessmentEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: start LCC Assessment Event" ;
	bt:event agents:StartLccAssessmentEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						#?s ?p ?o .
						
						?subjectIri    rdf:type    welcome:LCCLesson ;
											welcome:hasLessonId		?lessonId ;
											welcome:hasAssessmentDeadline     ?assessmentDeadline .
					}
					WHERE { 
						#?s ?p ?o .	
						?subjectIri	rdf:type    welcome:LCCLesson ;
								welcome:hasLessonId		?lessonId ;
								welcome:hasAssessmentDeadline     ?assessmentDeadline .
					}"""^^xsd:string ;
				] .


:MessageToAppToStartLccAssessment
	a bt:Message ;
	rdfs:label "Message: Start LCC Assessment"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "application/ld+json"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
						?subjectIri    rdf:type    welcome:LCCLesson ;
											welcome:hasLessonId		?lessonId ;
											welcome:hasAssessmentDeadline     ?assessmentDeadline .
						}
						WHERE {
						?subjectIri    rdf:type    welcome:LCCLesson ;
											welcome:hasLessonId		?lessonId ;
											welcome:hasAssessmentDeadline     ?assessmentDeadline .
							}						
				"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					SELECT DISTINCT ?requestURI
					WHERE {
						VALUES ?requestURI { "http://localhost:8092/app/inform"}
						#welcome:dispatcher welcome:hasAddress ?partialAddress .
						#BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/agentNotification") AS ?requestURI )

					}"""^^xsd:string
	] .
	
:SaveLccAssessmentConfig
	a bt:Write ;
	rdfs:label "Write: LCC Assessment Config info to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {
						?subjectIri    rdf:type    welcome:LCCLesson ;
											welcome:hasLessonId		?lessonId ;
											welcome:hasAssessmentDeadline     ?assessmentDeadline .
					}
					WHERE {
						?subjectIri    rdf:type    welcome:LCCLesson ;
											welcome:hasLessonId		?lessonId ;
											welcome:hasAssessmentDeadline     ?assessmentDeadline .	
					}

		
		"""^^xsd:string ;
	] .


:HandleLccAssessmentCompleteEvent
	a bt:HandleEvent ;
	rdfs:label "EventHandler: LCC Assessment Complete Event" ;
	bt:event agents:LccAssessmentCompleteEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						#?s ?p ?o .
						?subjectIri	rdf:type	welcome:LCCLesson ;
								welcome:hasLessonId    ?lessonId ;
                    	        welcome:hasAssessmentScore  ?assessmentScore ;
                    	        welcome:hasReadingScore     ?readingScore ;
                                welcome:hasWritingScore     ?writingScore ;
                                welcome:hasListeningScore   ?listeningScore ;
                                welcome:hasVocabularyScore  ?vocabularyScore . 
					}
					WHERE { 
						#?s ?p ?o .	
						?subjectIri	rdf:type	welcome:LCCLesson ;
								welcome:hasLessonId    ?lessonId ;
                    	        welcome:hasAssessmentScore  ?assessmentScore ;
                    	        welcome:hasReadingScore     ?readingScore ;
                                welcome:hasWritingScore     ?writingScore ;
                                welcome:hasListeningScore   ?listeningScore ;
                                welcome:hasVocabularyScore  ?vocabularyScore . 
					}"""^^xsd:string ;
				] .

:SaveLccAssessmentScores
	a bt:Write ;
	rdfs:label "Write: LCC Assessment Scores to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {
						?subjectIri	rdf:type	welcome:LCCLesson ;
								welcome:hasLessonId    ?lessonId ;
                    	        welcome:hasAssessmentScore  ?assessmentScore ;
                    	        welcome:hasReadingScore     ?readingScore ;
                                welcome:hasWritingScore     ?writingScore ;
                                welcome:hasListeningScore   ?listeningScore ;
                                welcome:hasVocabularyScore  ?vocabularyScore . 
					}
					WHERE {
						?subjectIri	rdf:type	welcome:LCCLesson ;
								welcome:hasLessonId    ?lessonId ;
                    	        welcome:hasAssessmentScore  ?assessmentScore ;
                    	        welcome:hasReadingScore     ?readingScore ;
                                welcome:hasWritingScore     ?writingScore ;
                                welcome:hasListeningScore   ?listeningScore ;
                                welcome:hasVocabularyScore  ?vocabularyScore . 
					}

		
		"""^^xsd:string ;
	] .

:ComputeLccCpl
	a bt:Update ;
	rdfs:label "Update: Compute Course Progress Level of TCN" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					INSERT{
						welcome:DialogueUser	welcome:hasLccCpl	?cpl .
					}
					WHERE{
						welcome:DialogueUser	rdf:type	welcome:Registered .
						
						{
						SELECT (AVG(?asmScore) as ?cpl)
						WHERE {
						?subjectIri	rdf:type	welcome:LCCLesson ;
                    	        welcome:hasAssessmentScore  ?assessmentScore .
						BIND((xsd:integer(?assessmentScore)) AS ?asmScore)
						}
						}
					}
					"""^^xsd:string ;
		]) .



:WriteLccAttributesToExec
	a bt:Write ;
	rdfs:label "Write: LCC Attributes to Execution to be send to TP" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {
						welcome:DialogueUser
											welcome:hasGender	?gender ;
											welcome:hasNationality	?nation ;
											welcome:hasLccGenderPreference	?lccGenderPref ;
											welcome:hasLccNationPreference	?lccNationPref ;
											welcome:hasFirstName	?tcnName .
					}
					WHERE {
						welcome:DialogueUser
											welcome:hasGender	?gender ;
											welcome:hasNationality	?nation ;
											welcome:hasLccGenderPreference	?lccGenderPref ;
											welcome:hasLccNationPreference	?lccNationPref .
						OPTIONAL {
								welcome:DialogueUser welcome:hasFirstName	?tcnName .
						}
					}

		
		"""^^xsd:string ;
	] .

:MessageToTpToSubmitLccAssessmentInfo
	a bt:Message ;
	rdfs:label "Message: Submit Assessment Scores to Teacher Panel"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
						?agentUri	ajan:agentId	?agentId ;
									welcome:hasFirstName	?tcnName ;
									welcome:hasGender	?gender ;
									welcome:hasNationality	?nation ;
									welcome:hasLccGenderPreference	?lccGenderPref ;
									welcome:hasLccNationPreference	?lccNationPref .
									
						?subjectIri	rdf:type	welcome:LCCLesson ;
								welcome:hasLessonId    ?lessonId ;
                    	        welcome:hasAssessmentScore  ?assessmentScore ;
                    	        welcome:hasReadingScore     ?readingScore ;
                                welcome:hasWritingScore     ?writingScore ;
                                welcome:hasListeningScore   ?listeningScore ;
                                welcome:hasVocabularyScore  ?vocabularyScore . 
						}
						WHERE {
						
						?agentUri	rdf:type	ajan:Agent ;
									ajan:agentId	?agentId .
						welcome:DialogueUser
											welcome:hasGender	?gender ;
											welcome:hasNationality	?nation ;
											welcome:hasLccGenderPreference	?lccGenderPref ;
											welcome:hasLccNationPreference	?lccNationPref .
						OPTIONAL {
								welcome:DialogueUser welcome:hasFirstName	?tcnName .
						}
						?subjectIri	rdf:type	welcome:LCCLesson ;
								welcome:hasLessonId    ?lessonId ;
                    	        welcome:hasAssessmentScore  ?assessmentScore ;
                    	        welcome:hasReadingScore     ?readingScore ;
                                welcome:hasWritingScore     ?writingScore ;
                                welcome:hasListeningScore   ?listeningScore ;
                                welcome:hasVocabularyScore  ?vocabularyScore . 			
							}						
				"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					SELECT DISTINCT ?requestURI
					WHERE {
						VALUES ?requestURI { "http://localhost:8092/teacherPanel/inform"}
						
						#welcome:dispatcher welcome:hasAddress ?partialAddress .
						#BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/TP") AS ?requestURI )

					}"""^^xsd:string
	] .	
	
	
:HandleLccFinalResultEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: LCC Final Result Submission Event" ;
	bt:event agents:SubmitFinalLccResultEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						#?s ?p ?o .
						
						?lccSolutionSubjectIri	rdf:type    		welcome:LCCUseCase ;
                                            	welcome:hasId   	?lccId ;
                                            	welcome:hasFinalSolution   	?lccSolution .

						?lccSolution    		rdf:type    		welcome:Grouping ;
												welcome:hasMembers  	?group.

						?group             		rdf:type   		welcome:Group ;
												welcome:hasMembers  	?memberAgentId .
					}
					WHERE { 
						#?s ?p ?o .	
						?lccSolutionSubjectIri	rdf:type    		welcome:LCCUseCase ;
                                            	welcome:hasId   	?lccId ;
                                            	welcome:hasFinalSolution   	?lccSolution .

						?lccSolution    		rdf:type    		welcome:Grouping ;
												welcome:hasMembers  	?group.

						?group             		rdf:type   		welcome:Group ;
												welcome:hasMembers  	?memberAgentId .

					}"""^^xsd:string ;
				] .

:SaveLccFinalResult
	a bt:Write ;
	rdfs:label "Write: LCC Final Result Submission by TP to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {
						?lccSolutionSubjectIri	rdf:type    		welcome:LCCUseCase ;
                                            	welcome:hasId   	?lccId ;
                                            	welcome:hasFinalSolution   	?lccSolution .

						?lccSolution    		rdf:type    		welcome:Grouping ;
												welcome:hasMembers  	?group.

						?group             		rdf:type   		welcome:Group ;
												welcome:hasMembers  	?memberAgentId .
					}
					WHERE {
						?lccSolutionSubjectIri	rdf:type    		welcome:LCCUseCase ;
                                            	welcome:hasId   	?lccId ;
                                            	welcome:hasFinalSolution   	?lccSolution .

						?lccSolution    		rdf:type    		welcome:Grouping ;
												welcome:hasMembers  	?group.

						?group             		rdf:type   		welcome:Group ;
												welcome:hasMembers  	?memberAgentId .
					}

		
		"""^^xsd:string ;
	] .	


	
:HandleStartLccProcessEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: start LCC Process Event" ;
	bt:event agents:StartLccProcessEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						#?s ?p ?o .
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasParticipants	?pAgentId ;
								welcome:hasLessonId	?lessonId ;
								welcome:hasDedicatedAgent	?dAgentId ;
								mac:hasId	?lccId ;
								welcome:hasSdWeight	?cplWeight ;
								welcome:hasMinSize		 ?minSize ; 
								welcome:hasMaxSize		 ?maxSize ; 
								welcome:hasAbsenceAllowance	 ?allowedAbsence .
					}
					WHERE { 
						#?s ?p ?o .	
						?bnode	rdf:type	welcome:LCCUseCase ;
								welcome:hasParticipants	?pAgentId ;
								welcome:hasLessonId	?lessonId ;
								welcome:hasDedicatedAgent	?dAgentId ;
								welcome:hasId	?lccId ;
								welcome:hasCPLWeight	?cplWeight ;
								welcome:hasMinSize		 ?minSize ; 
								welcome:hasMaxSize		 ?maxSize ; 
								welcome:hasAbsenceAllowance	 ?allowedAbsence .

					}"""^^xsd:string ;
				] .


:WriteRootAddress2Exec
	a bt:Write ;
	rdfs:label "Write: Root Address of Agents to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {
						?agent	welcome:hasRootAddress	?rootAddress .								
					}
					WHERE {
						?agent	rdf:type ajan:Agent .								
						?du		rdf:type	welcome:Registered ;
								welcome:hasRootAddress	?rootAddress .					
					}

		
		"""^^xsd:string ;
	] .

:ConditionDedicatedAgent
	a bt:Condition ;
	rdfs:label "Condition: Is this Dedicated Agent?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					ASK
					WHERE {
						?agent	rdf:type	ajan:Agent ;
								ajan:agentId	?agentId .
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								welcome:hasDedicatedAgent	?agentId .
						}"""^^xsd:string ;
		]) .
		
:ProduceLccDedicatedAgentBehaviorEvent
	a bt:EventProducer ;
	rdfs:label "EventProducer: LCC Dedicated Agent Behavior Event" ;
	ajan:event agents:LccDedicatedAgentBehaviorEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:ExecutionKnowledge;
					bt:sparql """
						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}"""^^xsd:string ;
				] .


:WriteLccPersonalInfo2Exec
	a bt:Write ;
	rdfs:label "Write: LCC Personal Info to Exec for the particular LCC Process" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						?agent	welcome:hasLCCPersonalInfo	?bnode .
						
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId .
					}
					WHERE {
						?agent	rdf:type ajan:Agent .
						
						welcome:DialogueUser 
							welcome:hasGender	?gender ;
							welcome:hasNationality	?nationality ;
							welcome:hasLccCpl		?lccCpl ;
							welcome:hasAttendedLessonIDs 	?attendedLessonId .

							{BIND(BNODE() AS ?bnode)}
					}

		
		"""^^xsd:string ;
	] .
	

:WriteAgentAddresses2Exec
	a bt:Insert ;
	rdfs:label "Insert: Addresses of other agents from LAR to Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:LocalAgentsKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX welcome-sw: <http://www.semanticweb.org/welcome#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						?agentUri	ajan:agentId	?agentId ;
									welcome:hasAddress	?address .
					}
					WHERE {
						?agentUri	rdf:type	ajan:Agent ;
									ajan:agentId	?agentId ;
									welcome-sw:hasAddress	?address .
					}
		"""^^xsd:string ;
	] .
	

:Message2DedicatedLccPersonalInfo
	a bt:Message ;
	rdfs:label "Message: Return Personal Info to Dedicated agent for LCC"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						CONSTRUCT {
							?agent	ajan:agentId	?agentName ;
									welcome:hasLCCPersonalInfo	?bnode .
							
							?bnode	rdf:type	welcome:LCCPersonalInfo ;
									welcome:hasGender	?gender ;
									welcome:hasNationality	?nationality ;
									welcome:hasLccCpl		?lccCpl ;
									welcome:hasAttendedLessonIDs 	?attendedLessonId ;
									mac:hasId	?lccId .
						}
						WHERE {
							?agent	rdf:type ajan:Agent ;
									ajan:agentId	?agentName ;
									welcome:hasLCCPersonalInfo	?bnode .
						
							?bnode	rdf:type	welcome:LCCPersonalInfo ;
									welcome:hasGender	?gender ;
									welcome:hasNationality	?nationality ;
									welcome:hasLccCpl		?lccCpl ;
									welcome:hasAttendedLessonIDs 	?attendedLessonId .
						
							?bnode2	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId .	
									
				}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					SELECT DISTINCT ?requestURI
					WHERE {
					 
					#?agent	rdf:type	ajan:Agent ;
					#		welcome:hasRootAddress ?rootAddress .
							
					?bnode	rdf:type	welcome:LCCUseCase ;
							welcome:hasDedicatedAgent	?dAgentId ;
							mac:hasId	?lccId .	
					?agentUri	ajan:agentId	?dAgentId ;
								welcome:hasAddress	?address .
								
					BIND(CONCAT(?address, "?capability=receiveLccPersonalInfo") AS ?requestURI )
					}"""^^xsd:string
	] .	


:InsertLccPersonalInfo2LakrWithLccId
	a bt:Insert ;
	rdfs:label "Insert: LCC Personal Info to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
						?agent	welcome:hasLCCPersonalInfo	?bnode .
						
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
								
					}
					WHERE {
						?agent	rdf:type ajan:Agent ;
								welcome:hasLCCPersonalInfo ?bnode .
								
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId .		
								
						?bnode2	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccId .
					
					
					}

		
		"""^^xsd:string ;
	] .

:WriteLccPersonalInfo2LakrWithLccId
	a bt:Write ;
	rdfs:label "Write: LCC Personal Info to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
						?agent	welcome:hasLCCPersonalInfo	?bnode .
						
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
								
					}
					WHERE {
						?agent	rdf:type ajan:Agent ;
								welcome:hasLCCPersonalInfo ?bnode .
								
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId .		
								
						?bnode2	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccId .
					
					
					}

		
		"""^^xsd:string ;
	] .
	

:UpdateLccProblem
	a bt:Update ;
	rdfs:label "Update: Add necessary LCC Problem Instance Fields" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					DELETE{
							?bnode	rdf:type	welcome:LCCUseCase ;
									?p ?o .
					}
					INSERT{
							?lccSubject	rdf:type	welcome:LCCUseCase, mac:MACProblemInstance ;
										?p ?o ;
										welcome:hasSdWeight		?cplWeight ;
										mac:hasUseCase	"LCC"^^xsd:string ;
										mac:hasSolver	"BOSS"^^xsd:string ;
										mac:hasNumberOfAgents	?numOfAgents ;
										mac:hasMinCoalitionSize	?minSize ;
										mac:hasMaxCoalitionSize	?maxSize .
					}
					WHERE{
						{
							?bnode	rdf:type	welcome:LCCUseCase ;
									?p ?o ;
									welcome:hasSdWeight	?cplWeight ;
									#welcome:hasCPLWeight	?cplWeight ;
									welcome:hasMinSize	?minSize ;
									welcome:hasMaxSize	?maxSize ;
									mac:hasId	?lccId . 
						}
						{
							SELECT (count(?pAgentId) as ?numOfAgents)
							WHERE {
									?bnode	rdf:type	welcome:LCCUseCase ;
											mac:hasParticipants	?pAgentId .
							}
						}
						BIND( IRI(CONCAT(STR(welcome:LCC), STR(?lccId))) AS ?lccSubject )
					}
					"""^^xsd:string ;
		]) .

:WriteLccProblem2Lakr
	a bt:Write ;
	rdfs:label "Write: LCC Problem Instance to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
						?agent	welcome:hasInvolvedInMac	?macId .
						?macUseCaseSubject	rdf:type	welcome:LCCUseCase, mac:MACProblemInstance ;
											mac:hasId	?macId ;
											welcome:hasStatus	"Running" ;
											welcome:hasStartTime	?now ;
											?p	?o .
					}
					WHERE {
						?agent	rdf:type ajan:Agent .
						?macUseCaseSubject	rdf:type	welcome:LCCUseCase ;
											mac:hasId	?macId ;
											?p	?o .
						BIND(NOW() AS ?now)
					}		
		"""^^xsd:string ;
	] .
	


:ClearExecutionKnowledge
	a bt:Update ;
	rdfs:label "Update: Clear Execution Knowledge" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					DELETE{
						?s ?p ?o .
					}
					WHERE{
						?s ?p ?o .
					}
					"""^^xsd:string ;
		]) .	
		
:HandleLccDedicatedAgentEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: dedicated agent behavior Event" ;
	bt:event agents:LccDedicatedAgentBehaviorEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .				
					}"""^^xsd:string ;
				] .

:Wait4LccPersonalInfo 
	a bt:Wait ;
	rdfs:label "Wait: wait for agents to return their Personal Info for LCC" ;
	rdfs:comment "" ;
	bt:milliseconds "20000"^^xsd:int .


:WriteCompleteLccPersonalInfo2Exec
	a bt:Write ;
	rdfs:label "Write: LCC Personal Info of all participant agents to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						?agent	ajan:agentId	?agentId ;
								welcome:hasLCCPersonalInfo ?bnode .
								
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .

					}
					WHERE {
						?agent	ajan:agentId	?agentId ;
								welcome:hasLCCPersonalInfo ?bnode .
								
						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
					}

		
		"""^^xsd:string ;
	] .

:ConditionAllReturnedLccPersonalInfo
	a bt:Condition ;
	rdfs:label "Condition: did all LCC agents return their Personal Info?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX ajan: <http://www.ajan.de/ajan-ns#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
			ASK 
			WHERE
			{
				?bnode	rdf:type	welcome:LCCUseCase ;
						mac:hasParticipants	?pAgentId ;
						mac:hasId	?lccId .

				?agentUri	welcome:hasLCCPersonalInfo	?bnode2 ;
							ajan:agentId	?pAgentId .
				
				?bnode2		rdf:type	welcome:LCCPersonalInfo ;
							mac:hasId	?lccId .
			}
						"""^^xsd:string ;
		]) .


		
:HandleReceiveLccPersonalInfoEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Receive LCC Personal Info Event" ;
	bt:event agents:ReceiveLccPersonalInfoEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .				
					}"""^^xsd:string ;
				] .		

:WriteLccPersonalInfoOfSender2Lakr
	a bt:Write ;
	rdfs:label "Write: LCC Personal Info of the sender agent to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						?agent	ajan:agentId	?agentId ;
								welcome:hasLCCPersonalInfo ?bnode .	

						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
								
					}
					WHERE {
						?agent	ajan:agentId	?agentId ;
								welcome:hasLCCPersonalInfo ?bnode .	

						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
					
					}

		
		"""^^xsd:string ;
	] .



:InsertLccPersonalInfoOfSender2Lakr
	a bt:Insert ;
	rdfs:label "Insert: LCC Personal Info of the sender agent to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						?agent	ajan:agentId	?agentId ;
								welcome:hasLCCPersonalInfo ?bnode .	

						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
								
					}
					WHERE {
						?agent	ajan:agentId	?agentId ;
								welcome:hasLCCPersonalInfo ?bnode .	

						?bnode	rdf:type	welcome:LCCPersonalInfo ;
								welcome:hasGender	?gender ;
								welcome:hasNationality	?nationality ;
								welcome:hasLccCpl		?lccCpl ;
								welcome:hasAttendedLessonIDs 	?attendedLessonId ;
								mac:hasId	?lccId .
					
					}

		
		"""^^xsd:string ;
	] .

:ProduceComputeCoalitionsEvent
	a bt:EventProducer ;
	rdfs:label "EventProducer: Compute Possible Coalitions Event" ;
	ajan:event agents:ComputeLccCoalitionStructuresEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:ExecutionKnowledge;
					bt:sparql """

						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}"""^^xsd:string ;
				] .


:ProduceLccFailedEvent
	a bt:EventProducer ;
	rdfs:label "EventProducer: LCC Failed Event" ;
	ajan:event agents:LccFailureEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:ExecutionKnowledge;
					bt:sparql """
						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}"""^^xsd:string ;
				] .

:HandleComputeCoalitionsEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Compute Coalition Structures Event" ;
	bt:event agents:ComputeLccCoalitionStructuresEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .				
					}"""^^xsd:string ;
				] .	
				
:ComputeLccCannotLinkConnections
	a bt:Write ;
	rdfs:label "Write: Compute LCC Cannot Link Connections" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
						?bnode	mac:hasCannotLinkConnections	?cannotLinkBnode .
						
						?cannotLinkBnode	mac:hasCannotConnect	?pAgentId, ?pAgentId2 .

					}					
					WHERE {
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccId ;
								welcome:hasLessonId	?lessonId ;
								mac:hasParticipants	?pAgentId, ?pAgentId2 .
						
						FILTER(?pAgentId != ?pAgentId2)
						FILTER(?pAgentId < ?pAgentId2)

						FILTER(xsd:integer(?lessonId) != 1)
						
						?agentUri	ajan:agentId	?pAgentId ;
									welcome:hasLCCPersonalInfo	?bnode2 .
						?bnode2	rdf:type	welcome:LCCPersonalInfo ;
								mac:hasId	?lccId .
								
						?agentUri2	ajan:agentId	?pAgentId2 ;
									welcome:hasLCCPersonalInfo	?bnode3 .
						?bnode3	rdf:type	welcome:LCCPersonalInfo ;
								mac:hasId	?lccId .

						BIND((xsd:integer(?lessonId) - 1) AS ?previousLessonId)

						FILTER NOT EXISTS {
							?bnode2	welcome:hasAttendedLessonIDs	?previousLessonId .
						}
						FILTER NOT EXISTS {
							?bnode3	welcome:hasAttendedLessonIDs	?previousLessonId .
						}
						BIND(BNODE() AS ?cannotLinkBnode)
					}
		"""^^xsd:string ;
	] .				
				
:GenerateFeasibleCoalitions4Lcc
	a bt:CoalitionGenerator ;
	rdfs:label "CoalitionGenerator: Generate Feasible Coalitions for LCC" ;
	bt:query [
				a bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:targetBase ajan:ExecutionKnowledge ;
				bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					Construct {
						?bnode	rdf:type	mac:MACProblemInstance ;
								mac:hasId	?lccId ;
								mac:hasParticipants	?pAgentId ;
								mac:hasNumberOfAgents	?numOfAgents ;
								mac:hasMinCoalitionSize	?minSize ;
								mac:hasMaxCoalitionSize	?maxSize ;
								mac:hasCannotLinkConnections	?cannotLinkBnode ;
								mac:hasMustLinkConnections	?mustLinkBnode .
								
						?cannotLinkBnode	mac:hasCannotConnect	?clAgentId, ?clAgentId2 .
						?mustLinkBnode	mac:hasMustConnect	?mlAgentId, ?mlAgentId2 .
					}
					Where{
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccId ;
								mac:hasParticipants	?pAgentId ;
								mac:hasNumberOfAgents	?numOfAgents ;
								mac:hasMinCoalitionSize	?minSize ;
								mac:hasMaxCoalitionSize	?maxSize .
								
						OPTIONAL {
							?bnode mac:hasCannotLinkConnections	?cannotLinkBnode .
							
							?cannotLinkBnode	mac:hasCannotConnect	?clAgentId, ?clAgentId2 .
						}
						OPTIONAL {
							?bnode mac:hasMustLinkConnections	?mustLinkBnode .
							
							?mustLinkBnode	mac:hasMustConnect	?mlAgentId, ?mlAgentId2 .
						}
					}
					"""^^xsd:string ;
			] .

:ConditionAnyFeasibleCoalitionExists
	a bt:Condition ;
	rdfs:label "Condition: Is there any LCC Feasible Coalition?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX ajan: <http://www.ajan.de/ajan-ns#>
			PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			
			ASK 
			WHERE
			{
				?bnode	rdf:type	welcome:LCCUseCase ;
						mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
				
				?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
										mac:hasMembers	?cmAgentId .
				FILTER(BOUND(?cmAgentId))
			}
						"""^^xsd:string ;
		]) .
		
		
:ProduceFinalizeLccProcessEvent
	a bt:EventProducer ;
	rdfs:label "EventProducer: Finalize LCC Process either with Success or Failure" ;
	ajan:event agents:FinalizeLccProcessEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:ExecutionKnowledge;
					bt:sparql """

						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}"""^^xsd:string ;
				] .
				
				
:BroadcastCoalitions2ReceiveUtilities
	a bt:Broadcast ;
	rdfs:label "Broadcast: LCC Feasible Coalitions to Receive Utility Values"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode ;
									welcome:hasDedicatedAgent	?dAgentId .
									
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
													welcome:hasCommonGender ?cmnGender ;
													welcome:hasCommonNation	?cmnNation ;
													mac:hasMembers	?mAgentId .
							
							# Select Complete LCC Personal Info
							?pAgent	ajan:agentId	?pAgentId ;
									welcome:hasLCCPersonalInfo ?lccPsnlInfo .	

							?lccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											welcome:hasGender	?gender ;
											welcome:hasNationality	?nationality ;
											welcome:hasLccCpl		?lccCpl ;
											mac:hasId	?lccId .				
						}
						WHERE {
							# Select Feasible Coalitions
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode ;
									welcome:hasDedicatedAgent	?dAgentId .
									
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
													welcome:hasCommonGender ?cmnGender ;
													welcome:hasCommonNation	?cmnNation ;
													mac:hasMembers	?mAgentId .
							
							# Select Complete LCC Personal Info
							?pAgent	ajan:agentId	?pAgentId ;
									welcome:hasLCCPersonalInfo ?lccPsnlInfo .	

							?lccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											welcome:hasGender	?gender ;
											welcome:hasNationality	?nationality ;
											welcome:hasLccCpl		?lccCpl ;
											mac:hasId	?lccId .
							}
							"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					SELECT DISTINCT ?requestURI
					WHERE {

					?bnode	rdf:type	welcome:LCCUseCase ;
							mac:hasId	?lccId ;
							mac:hasParticipants	?pAgentId .
					
					?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
							ajan:agentId	?agentId .
					
					FILTER(?pAgentId != ?agentId)
					?agentUri	ajan:agentId	?pAgentId ;
								welcome:hasAddress	?address .
					BIND(CONCAT(?address, "?capability=computeLccUtilityValues") AS ?requestURI )
					}"""^^xsd:string
	] .	


:HandleComputeLccUtilitiesEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Compute LCC Utility Values Event" ;
	bt:event agents:ComputeLccUtilityValuesEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .
					}"""^^xsd:string ;
				] .		
				
				


					
					
:WriteDebug
	a bt:Write ;
	rdfs:label "Write: DEBUG " ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {
						ajan:bnode	ajan:pred	?bnode .
						ajan:lccId	ajan:pred	?lccId .
						ajan:pAgentId	ajan:pred	?pAgentId .
						ajan:agent	ajan:pred	?agent .
						ajan:agentId	ajan:pred	?agentId .
					}
					WHERE {

					?bnode	rdf:type	welcome:LCCUseCase ;
							mac:hasId	?lccId ;
							mac:hasParticipants	?pAgentId .
					
					?agent	rdf:type	ajan:Agent ;
							ajan:agentId	?agentId .
					
					FILTER(?pAgentId != ?agentId)
					BIND(CONCAT("http://localhost:8060/welcome/integration/coordination/ajan/agents/", ?pAgentId, "?capability=computeLccUtilityValues") AS ?requestURI )
					}"""^^xsd:string ;
	] .
				
:WriteAllLccInfo2Exec
	a bt:Write ;
	rdfs:label "Write: All LCC Problem Instances Info to Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
				CONSTRUCT  {
					?bnode	rdf:type	welcome:LCCUseCase ;
							welcome:hasGenderWeight		?gWeight ;
							welcome:hasNationalityWeight	?nWeight ;
							mac:hasId	?lccId .
				}
				WHERE {
					?bnode	rdf:type	welcome:LCCUseCase ;
							welcome:hasGenderWeight		?gWeight ;
							welcome:hasNationalityWeight	?nWeight ;
							mac:hasId	?lccId .
				} """^^xsd:string ;
	] .
	

:RemoveUnnecessaryLccInfoFromExec
	a bt:Update ;
	rdfs:label "Update: Remove Unnecessary LCC Problem Instances from Exec" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					
					DELETE {
						?bnode	rdf:type	welcome:TempLCCUseCase ;
								welcome:hasGenderWeight		?gWeight ;
								welcome:hasNationalityWeight	?nWeight ;
								mac:hasId ?lccId .
					}
					WHERE{
						# this is retrieved from LAKR of this agent. All LCCUseCase s are retrieved. 
						?bnode	rdf:type	welcome:TempLCCUseCase ;
								welcome:hasGenderWeight		?gWeight ;
								welcome:hasNationalityWeight	?nWeight .
								
						# this is received from Dedicated agent. It also sends the id of LCCUseCase. 
						?bnode2	rdf:type	welcome:LCCUseCase ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode ;
								mac:hasId ?lccId .
								
						FILTER(BOUND(?feasibleCoalitionNode))
						
						#		?p	?o .
						#		mac:hasId ?lccId .
						
						# here we select the LCCUseCases which have a different ID than the one which is sent by Dedicated Agent. 
						# We need to retrieve the correct LCC USE CASE specific to this agent from LAKR. Because the LCCUseCase problem instance contains 
						# the weights of preferences sent by Teacher. 
						FILTER NOT EXISTS {
							?bnode	mac:hasId ?lccId .
						}
					}
					"""^^xsd:string ;
		]) .	

:RemoveUnnecessaryCoalitions
	a bt:Update ;
	rdfs:label "Update: Remove Unnecessary Coalitions" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					
					DELETE {
						?bnode	mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												?p			?o .					
					}
					WHERE{
						?agent	rdf:type	ajan:Agent ;
								ajan:agentId	?agentId .
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												?p			?o .
						
						FILTER NOT EXISTS {
							?feasibleCoalitionNode	mac:hasMembers	?agentId .
						}
					}
					"""^^xsd:string ;
		]) .
		
:ComputeLccCoalitionInfo
	a bt:Insert ;
	rdfs:label "Insert: Compute LCC Coalition Information - common gender and nationality" ;
	bt:query ([
		a bt:ConstructQuery;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
							?feasibleCoalitionNode	welcome:hasCommonGender	?cG ;
													welcome:hasCommonNation	?cN .
					}
					WHERE {
						{
							SELECT ?feasibleCoalitionNode (COUNT(DISTINCT ?gender) AS ?gS) (COUNT(DISTINCT ?nation) AS ?nS)
							{
								?bnode		rdf:type	 welcome:LCCUseCase ;
											mac:hasId	?lccId ;
											mac:hasFeasibleCoalitions	 ?feasibleCoalitionNode .
								?feasibleCoalitionNode	rdf:type	 mac:CSGP-Coalition ;
														mac:hasMembers	?mAgentId.
								?mAgent	ajan:agentId	?mAgentId ;
										welcome:hasLCCPersonalInfo ?mLccPsnlInfo .	
								?mLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
												mac:hasId	?lccId ;
												welcome:hasGender	?gender ;
												welcome:hasNationality	?nation .
							} GROUP BY ?feasibleCoalitionNode
						}
						BIND(IF(?gS > 1, "Mixed", "Same") AS ?cG)
						BIND(IF(?nS > 1, "Mixed", "Same") AS ?cN)
					}
					"""^^xsd:string ;
		]) .

:ComputeLccCoalitionInfo_addingAttendanceInfo
	a bt:Insert ;
	rdfs:label "Insert: Compute LCC Coalition Information - common gender and nationality" ;
	bt:query ([
		a bt:ConstructQuery;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
							?feasibleCoalitionNode	welcome:hasCommonGender	?cG ;
													welcome:hasCommonNation	?cN ;
													welcome:hasTotalAttendanceAmount	?attnd .
					}
					WHERE {
					{
						SELECT ?feasibleCoalitionNode (COUNT(DISTINCT ?gender) AS ?gS) (COUNT(DISTINCT ?nation) AS ?nS) 
						(COUNT(DISTINCT ?attended) AS ?attnd) 
						{
							?bnode		rdf:type	 welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasLessonId	?lessonId ;
										mac:hasFeasibleCoalitions	 ?feasibleCoalitionNode .
							?feasibleCoalitionNode	rdf:type	 mac:CSGP-Coalition ;
													mac:hasMembers	?mAgentId.
							?mAgent	ajan:agentId	?mAgentId ;
									welcome:hasLCCPersonalInfo ?mLccPsnlInfo .	
							?mLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId ;
											welcome:hasGender	?gender ;
											welcome:hasNationality	?nation .
							BIND((xsd:integer(?lessonId) - 1) AS ?previousLessonId)
							OPTIONAL {
								FILTER EXISTS {
									?mLccPsnlInfo	welcome:hasAttendedLessonIDs	?previousLessonId .
								}
								BIND(?mAgentId AS ?attended)
							}
						} GROUP BY ?feasibleCoalitionNode
					}
					BIND(IF(?gS > 1, "Mixed", "Same") AS ?cG)
					BIND(IF(?nS > 1, "Mixed", "Same") AS ?cN)
				}
				"""^^xsd:string ;
		]) .


:RemoveAttendanceViolatedCoalitions
	a bt:Update ;
	rdfs:label "Remove Coalitions in which Attendance is Violated" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					DELETE {
						?bnode	mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												?p ?o.					
					}
					WHERE{
						?bnode	rdf:type	 welcome:LCCUseCase ;
								welcome:hasLessonId	?lessonId ;
								welcome:hasAbsenceAllowance		?allowedAttendanceLimit ;
								mac:hasFeasibleCoalitions	 ?feasibleCoalitionNode .
								
						?feasibleCoalitionNode	rdf:type	 mac:CSGP-Coalition ;
												mac:hasSize		?groupSize ;
												welcome:hasTotalAttendanceAmount	?attendedAmount ;
												?p ?o.
						FILTER((xsd:integer(?lessonId) != 1) && ((xsd:integer(?attendedAmount) + xsd:integer(?allowedAttendanceLimit)) < xsd:integer(?groupSize)))
						}															
				"""^^xsd:string ;
		]) .

:UpdateLccCoalitionInfoWrt
	a bt:Write ;
	rdfs:label "Write: LCC Coalition Info" ;
	bt:query ([
		a bt:ConstructQuery ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					#DELETE{
					#?feasibleCoalitionNode	welcome:hasCommonGender	?cG ;
					#						welcome:hasCommonNation	?cN .
					#}
					CONSTRUCT {
					?feasibleCoalitionNode	welcome:hasCommonGender	?commonGender ;
											welcome:hasCommonNation	?commonNation .
					}
					WHERE {
						?bnode		rdf:type	 welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	 ?feasibleCoalitionNode .
						?feasibleCoalitionNode	rdf:type	 mac:CSGP-Coalition ;
												welcome:hasCommonGender	?cG ;
												welcome:hasCommonNation	?cN .
														
						FILTER(LCASE(?cG) = "same" || LCASE(?cN) = "same")
						
						#{
						#	SELECT ?gender ?nation
						#	{
								?feasibleCoalitionNode	mac:hasMembers	?mAgentId.
								?mAgent	ajan:agentId	?mAgentId ;
										welcome:hasLCCPersonalInfo ?mLccPsnlInfo .	
								?mLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
												mac:hasId	?lccId ;
												welcome:hasGender	?gender ;
												welcome:hasNationality	?nation .
						#	} LIMIT 1
						#}
						BIND(IF(LCASE(?cG) = "same", ?gender, ?cG) AS ?commonGender)
						BIND(IF(LCASE(?cN) = "same", ?nation, ?cN) AS ?commonNation)							
					}
					"""^^xsd:string ;
		]) .

:UpdateLccCoalitionInfo
	a bt:Update ;
	rdfs:label "Update: LCC Coalition Info" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					DELETE{
					?feasibleCoalitionNode	welcome:hasCommonGender	?cG ;
											welcome:hasCommonNation	?cN .
					}
					INSERT{
					?feasibleCoalitionNode	welcome:hasCommonGender	?commonGender ;
											welcome:hasCommonNation	?commonNation .
					}
					WHERE {
						?bnode		rdf:type	 welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	 ?feasibleCoalitionNode .
						?feasibleCoalitionNode	rdf:type	 mac:CSGP-Coalition ;
												welcome:hasCommonGender	?cG ;
												welcome:hasCommonNation	?cN .
														
						FILTER(LCASE(?cG) = "same" || LCASE(?cN) = "same")
						
						#{
						#	SELECT ?gender ?nation
						#	{
								?feasibleCoalitionNode	mac:hasMembers	?mAgentId.
								?mAgent	ajan:agentId	?mAgentId ;
										welcome:hasLCCPersonalInfo ?mLccPsnlInfo .	
								?mLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
												mac:hasId	?lccId ;
												welcome:hasGender	?gender ;
												welcome:hasNationality	?nation .
						#	} LIMIT 1
						#}
						BIND(IF(LCASE(?cG) = "same", ?gender, ?cG) AS ?commonGender)
						BIND(IF(LCASE(?cN) = "same", ?nation, ?cN) AS ?commonNation)							
					}
					"""^^xsd:string ;
		]) .
		
:WriteLccPreferences2Exec
	a bt:Write ;
	rdfs:label "Write: LCC Individual Preferences to Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
				CONSTRUCT  {
						?agent	welcome:hasLCCPreferencesInfo	?bnode .
								
						?bnode	rdf:type	welcome:LCCPreferencesInfo ;
								welcome:hasLccGenderPreference ?genPref ;
								welcome:hasLccNationPreference ?natPref ;
								welcome:hasLccGenderPrefWeight	?gWeight ;
								welcome:hasLccNationPrefWeight	?nWeight .
				}
				WHERE {
					?agent	rdf:type ajan:Agent ;
							ajan:agentId	?subAgentId .
							
					?du		rdf:type	welcome:Registered ;
							welcome:hasLccGenderPreference ?genPref ;
							welcome:hasLccNationPreference ?natPref ;
							welcome:hasLccGenderPrefWeight	?gWeight ;
							welcome:hasLccNationPrefWeight	?nWeight .

					{BIND(BNODE() AS ?bnode)}
							
				} """^^xsd:string ;
	] .



:ComputeSdOfLccCoalitions
	a bt:SquareRoot ;
	rdfs:label "SquareRoot: Compute LCC SDs" ;
	bt:query [
				a bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:targetBase ajan:AgentKnowledge ;
				bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX ajan_math: <http://localhost:8090/rdf4j/repositories/ajan_math_ontology#>
					
					Construct {
						?feasibleCoalitionNode	rdf:type	ajan_math:AJAN_MathSubject ;
												ajan_math:hasValue	?unrootedSd ;
												ajan_math:hasResultPredicate	welcome:hasStandardDeviation .
						
						# This node creates triples in the following format: 
						# ?feasibleCoalitionNode welcome:hasStandardDeviation	?finalValue .
						
					}
					Where{
						SELECT ?feasibleCoalitionNode ((SUM(?sd)/?groupSize) AS ?unrootedSd)
						WHERE {
							{
								SELECT ?feasibleCoalitionNode (SUM(?lccCpl) AS ?totalCpl) (COUNT(?mAgentId) AS ?groupSize)
								WHERE {
									# Select Feasible Coalitions
									?bnode	rdf:type	welcome:LCCUseCase ;
											mac:hasId	?lccId ;
											mac:hasFeasibleCoalitions	?feasibleCoalitionNode .

									?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
											mac:hasMembers	?mAgentId .

									# Select Complete LCC Personal Info
									?mAgentUri ajan:agentId  ?mAgentId ;
											welcome:hasLCCPersonalInfo ?lccPsnlInfo .	
									?lccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											welcome:hasLccCpl		?lccCpl ;
											mac:hasId	?lccId .
								} GROUP BY ?feasibleCoalitionNode 
							}
							BIND((?totalCpl/?groupSize) AS ?mean)
							{
								SELECT ?feasibleCoalitionNode ?lccCpl 
								WHERE {
									?feasibleCoalitionNode	 mac:hasMembers	?mAgentId .
									# Select Complete LCC Personal Info
									?mAgentUri ajan:agentId  ?mAgentId ;
											welcome:hasLCCPersonalInfo ?lccPsnlInfo .	
									?lccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											welcome:hasLccCpl		?lccCpl .
								} GROUP BY ?feasibleCoalitionNode ?lccCpl ?mAgentId
							}
							BIND( ( (xsd:float(?mean) - xsd:float(?lccCpl)) * (xsd:float(?mean) - xsd:float(?lccCpl))) AS ?sd )
						}GROUP BY ?feasibleCoalitionNode ?groupSize
				  
					}
					"""^^xsd:string ;
			] .
			

:ComputeUtilityValuesInLcc
	a bt:Update ;
	rdfs:label "Update: Compute Utility Values in LCC" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
                INSERT {
					?bnode	rdf:type	welcome:LCCUseCase ;
							mac:hasId	?lccId ;
							mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
							
                    ?feasibleCoalitionNode  welcome:hasUtilityValue ?uVbnode .
                    ?uVbnode    rdf:type    welcome:UtilityValue ;
                                welcome:hasComputedBy   ?agentId ;    
                                mac:hasValue        ?ttlV .
                }
                WHERE {
			#		{
			#			SELECT DISTINCT ?feasibleCoalitionNode ?agentId ?bnode ?lccId (SUM(?uValue) AS ?ttlV)
			#			WHERE {
							# get This agent
			#				?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
							#?agent	rdf:type	ajan:Agent;
			#						ajan:agentId	 ?agentId .
									
							# get Feasible Coalitions which are sent by Dedicated agent
			#				?bnode	rdf:type	welcome:LCCUseCase ;
			#						mac:hasId	?lccId ;
			#						mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
							
							# make sure that coalition contains This agent
			#				FILTER EXISTS { ?feasibleCoalitionNode  mac:hasMembers	?agentId . }
					
							# get the coalition information
			#				?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
			#										welcome:hasCommonGender	?commonGender ;
			#										welcome:hasCommonNation	?commonNation .
							
							# get preferences of This agent
			#				?agent	welcome:hasLCCPreferencesInfo	?aLccPrfInfo .
			#				?aLccPrfInfo	rdf:type	welcome:LCCPreferencesInfo ;
			#								welcome:hasLccGenderPreference	?aGenderPref ;
			#								welcome:hasLccNationPreference	?aNationPref ;
			#								welcome:hasLccGenderPrefWeight	?gWeight ;
			#								welcome:hasLccNationPrefWeight	?nWeight .
							
							# get gender and nation of This agent
							?agent welcome:hasLCCPersonalInfo ?aLccPsnlInfo .
							?aLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId ;
											welcome:hasGender	 ?aGender ;
											welcome:hasNationality	?aNation .
							
							
							BIND(IF(LCASE(?aGenderPref) = "dont mind" || (LCASE(?aGenderPref) = "same" && ?aGender = ?commonGender) || (LCASE(?aGenderPref) = "mixed" && LCASE(?commonGender) = "mixed"), xsd:float(?gWeight), -xsd:float(?gWeight)) AS ?genderUValue)
							BIND(IF(LCASE(?aNationPref) = "dont mind" || (LCASE(?aNationPref) = "same" && ?aNation = ?commonNation) || (LCASE(?aNationPref) = "mixed" && LCASE(?commonNation) = "mixed"), xsd:float(?nWeight), -xsd:float(?nWeight)) AS ?nationUValue)
												
							BIND((?genderUValue + ?nationUValue) AS ?uValue)
		
						} GROUP BY ?feasibleCoalitionNode ?agentId ?bnode ?lccId
					}	
					BIND(BNODE() AS ?uVbnode)
                }
					"""^^xsd:string ;
		]) .			



:ComputeUtilityValuesInLccWrite
	a bt:Insert ;
	rdfs:label "Insert: Compute Utility Values in LCC" ;
	bt:query ([
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
                CONSTRUCT {
					?bnode	rdf:type	welcome:LCCUseCase ;
							mac:hasId	?lccId ;
							mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
							
                    ?feasibleCoalitionNode  welcome:hasUtilityValue ?uVbnode .
                    ?uVbnode    rdf:type    welcome:UtilityValue ;
                                welcome:hasComputedBy   ?agentId ;    
                                mac:hasValue        ?ttlV .
                }
                WHERE {
					{
						SELECT DISTINCT ?feasibleCoalitionNode ?agentId ?bnode ?lccId (SUM(?uValue) AS ?ttlV)
						WHERE {
							# get This agent
							?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
							#?agent	rdf:type	ajan:Agent;
									ajan:agentId	 ?agentId .
									
							# get Feasible Coalitions which are sent by Dedicated agent
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
							
							# make sure that coalition contains This agent
							FILTER EXISTS { ?feasibleCoalitionNode  mac:hasMembers	?agentId . }
					
							# get the coalition information
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
													welcome:hasCommonGender	?commonGender ;
													welcome:hasCommonNation	?commonNation .
							
							# get preferences of This agent
							?agent	welcome:hasLCCPreferencesInfo	?aLccPrfInfo .
							?aLccPrfInfo	rdf:type	welcome:LCCPreferencesInfo ;
											welcome:hasLccGenderPreference	?aGenderPref ;
											welcome:hasLccNationPreference	?aNationPref ;
											welcome:hasLccGenderPrefWeight	?gWeight ;
											welcome:hasLccNationPrefWeight	?nWeight .
							
							# get gender and nation of This agent
							?agent welcome:hasLCCPersonalInfo ?aLccPsnlInfo .
							?aLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId ;
											welcome:hasGender	 ?aGender ;
											welcome:hasNationality	?aNation .
							
							
							BIND(IF(LCASE(?aGenderPref) = "dont mind" || (LCASE(?aGenderPref) = "same" && ?aGender = ?commonGender) || (LCASE(?aGenderPref) = "mixed" && LCASE(?commonGender) = "mixed"), xsd:float(?gWeight), -xsd:float(?gWeight)) AS ?genderUValue)
							BIND(IF(LCASE(?aNationPref) = "dont mind" || (LCASE(?aNationPref) = "same" && ?aNation = ?commonNation) || (LCASE(?aNationPref) = "mixed" && LCASE(?commonNation) = "mixed"), xsd:float(?nWeight), -xsd:float(?nWeight)) AS ?nationUValue)
												
							BIND((?genderUValue + ?nationUValue) AS ?uValue)
		
						} GROUP BY ?feasibleCoalitionNode ?agentId ?bnode ?lccId
					}	
					BIND(BNODE() AS ?uVbnode)
                }
					"""^^xsd:string ;
		]) .	


:ComputeLccUtilities
	a bt:Write ;
	rdfs:label "Write: Compute LCC Utilities" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
                CONSTRUCT {
                    #?feasibleCoalitionNode  welcome:hasUtilityValue ?uVbnode .
                    #?uVbnode    rdf:type    welcome:UtilityValue ;
                     #           welcome:hasComputedBy   ?agentId ;    
                    #            mac:hasValue        ?ttlV .
					
					
					?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
                    ?feasibleCoalitionNode  welcome:hasUtilityValue ?uVbnode .
                    ?uVbnode    rdf:type    welcome:UtilityValue ;
                                welcome:hasComputedBy   ?agentId ;    
                                mac:hasValue        ?ttlV .
                }
                WHERE {
					{
						SELECT DISTINCT ?feasibleCoalitionNode ?agentId ?bnode ?lccId (SUM(?uValue) AS ?ttlV)
						WHERE {
							# get This agent
							?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
									ajan:agentId	 ?agentId .
									
							# get Feasible Coalitions which are sent by Dedicated agent
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
							
							
							# get Weights for Preferences from the LCC info which is written from LAKR to Exec as Temporary LCC Info
							#?tempLccInfo	rdf:type	welcome:LCCUseCase ;
							#				mac:hasId	?lccId ;
							#				welcome:hasGenderWeight		?gWeight ;
							#				welcome:hasNationalityWeight	?nWeight .
											
							# make sure that coalition contains This agent
							FILTER EXISTS { ?feasibleCoalitionNode  mac:hasMembers	?agentId . }
					
							# get a member of a coalition
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
													mac:hasMembers	?mAgentId .
											
							# make sure that the member is different than This agent
							FILTER(?mAgentId != ?agentId)
					
							# get gender of member agent
							?mAgent	ajan:agentId	 ?mAgentId ;
									welcome:hasLCCPersonalInfo ?mLccPsnlInfo .
							?mLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId2 ;
											welcome:hasGender	 ?mGender ;
											welcome:hasNationality	?mNation .
							FILTER(?lccId = ?lccId2)
							# get gender of This agent
							?agent welcome:hasLCCPersonalInfo ?aLccPsnlInfo .
							?aLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId3 ;
											welcome:hasGender	 ?aGender ;
											welcome:hasNationality	?aNation .
							FILTER(?lccId = ?lccId3)		
							# get gender preference of This agent
							?agent	welcome:hasLCCPreferencesInfo	?aLccPrfInfo .
							?aLccPrfInfo	rdf:type	welcome:LCCPreferencesInfo ;
											welcome:hasGenderPreference	?aGenderPref ;
											welcome:hasNationPreference	?aNationPref ;
											welcome:hasGenderWeight	?gWeight ;
											welcome:hasNationalityWeight	?nWeight .
							
							#?du		rdf:type	welcome:Registered ;
							#        welcome:hasGenderPreference ?aGenderPref ;
							#        welcome:hasNationPreference ?aNationPref ;
							#        welcome:hasGenderWeight	?gWeight ;
							#        welcome:hasNationalityWeight	?nWeight .
							
					
							BIND(IF(LCASE(?aGenderPref) = "dont mind" || (?aGenderPref = ?mGender), xsd:float(?gWeight), -xsd:float(?gWeight)) AS ?genderUValue)
					
							BIND(IF(LCASE(?aNationPref) = "dont mind" || (LCASE(?aNationPref) = "same" && ?aNation = ?mNation) || (LCASE(?aNationPref) = "mixed" && ?aNation != ?mNation), xsd:float(?nWeight), -xsd:float(?nWeight)) AS ?nationUValue)
																
							BIND((?genderUValue + ?nationUValue) AS ?uValue)
							
			#				BIND(IF(LCASE(?aGenderPref) = "dont mind" ||
			#				((LCASE(?aGenderPref) = "same") && ?aGender = ?mGender) ||
			#				((LCASE(?aGenderPref) = "mixed") && ?aGender != ?mGender),1 ,-1) AS ?uv)
			
						} GROUP BY ?feasibleCoalitionNode ?agentId ?bnode ?lccId
					}	
					#BIND(SHA1(xsd:string(NOW())) AS ?uniqueId)
					#BIND( IRI(CONCAT(STR(welcome:UtilityValue),STR(?lccId) , STR(?uniqueId))) AS ?uVbnode )
					BIND(BNODE() AS ?uVbnode)
                }"""^^xsd:string ;
	] .
	
:ComputeLccUtilityValues
	a bt:Update ;
	rdfs:label "Update: Compute Utility Values" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
                INSERT {
                    #?feasibleCoalitionNode  welcome:hasUtilityValue ?uVbnode .
                    #?uVbnode    rdf:type    welcome:UtilityValue ;
                     #           welcome:hasComputedBy   ?agentId ;    
                    #            mac:hasValue        ?ttlV .
					
					
					?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
                    ?feasibleCoalitionNode  welcome:hasUtilityValue ?uVbnode .
                    ?uVbnode    rdf:type    welcome:UtilityValue ;
                                welcome:hasComputedBy   ?agentId ;    
                                mac:hasValue        ?ttlV .
                }
                WHERE {
					{
						SELECT ?feasibleCoalitionNode ?agentId ?bnode ?lccId (SUM(?uValue) AS ?ttlV)
						WHERE {
							# get This agent
							?agent	rdf:type	ajan:Agent ;
									ajan:agentId	 ?agentId .
									
							# get Feasible Coalitions which are sent by Dedicated agent
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
							
							
							# get Weights for Preferences from the LCC info which is written from LAKR to Exec as Temporary LCC Info
							#?tempLccInfo	rdf:type	welcome:LCCUseCase ;
							#				mac:hasId	?lccId ;
							#				welcome:hasGenderWeight		?gWeight ;
							#				welcome:hasNationalityWeight	?nWeight .
											
							# make sure that coalition contains This agent
							FILTER EXISTS { ?feasibleCoalitionNode  mac:hasMembers	?agentId . }
					
							# get a member of a coalition
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
													mac:hasMembers	?mAgentId .
											
							# make sure that the member is different than This agent
							FILTER(?mAgentId != ?agentId)
					
							# get gender of member agent
							?mAgent	ajan:agentId	 ?mAgentId ;
									welcome:hasLCCPersonalInfo ?mLccPsnlInfo .
							?mLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId2 ;
											welcome:hasGender	 ?mGender ;
											welcome:hasNationality	?mNation .
							FILTER(?lccId = ?lccId2)
							# get gender of This agent
							?agent welcome:hasLCCPersonalInfo ?aLccPsnlInfo .
							?aLccPsnlInfo	rdf:type	welcome:LCCPersonalInfo ;
											mac:hasId	?lccId3 ;
											welcome:hasGender	 ?aGender ;
											welcome:hasNationality	?aNation .
							FILTER(?lccId = ?lccId3)		
							# get gender preference of This agent
							?agent	welcome:hasLCCPreferencesInfo	?aLccPrfInfo .
							?aLccPrfInfo	rdf:type	welcome:LCCPreferencesInfo ;
											welcome:hasGenderPreference	?aGenderPref ;
											welcome:hasNationPreference	?aNationPref ;
											welcome:hasGenderWeight	?gWeight ;
											welcome:hasNationalityWeight	?nWeight .
							
							#?du		rdf:type	welcome:Registered ;
							#        welcome:hasGenderPreference ?aGenderPref ;
							#        welcome:hasNationPreference ?aNationPref ;
							#        welcome:hasGenderWeight	?gWeight ;
							#        welcome:hasNationalityWeight	?nWeight .
							
					
							BIND(IF(LCASE(?aGenderPref) = "dont mind" || (?aGenderPref = ?mGender), xsd:float(?gWeight), -xsd:float(?gWeight)) AS ?genderUValue)
					
							BIND(IF(LCASE(?aNationPref) = "dont mind" || (LCASE(?aNationPref) = "same" && ?aNation = ?mNation) || (LCASE(?aNationPref) = "mixed" && ?aNation != ?mNation), xsd:float(?nWeight), -xsd:float(?nWeight)) AS ?nationUValue)
																
							BIND((?genderUValue + ?nationUValue) AS ?uValue)
							
			#				BIND(IF(LCASE(?aGenderPref) = "dont mind" ||
			#				((LCASE(?aGenderPref) = "same") && ?aGender = ?mGender) ||
			#				((LCASE(?aGenderPref) = "mixed") && ?aGender != ?mGender),1 ,-1) AS ?uv)
			
						} GROUP BY ?feasibleCoalitionNode ?agentId ?bnode ?lccId
					}	
					BIND(BNODE() AS ?uVbnode)
                }
					"""^^xsd:string ;
		]) .	

:MessageLccUtilities2Dedicated
	a bt:Message ;
	rdfs:label "Message: Return LCC Utility Values to Dedicated agent for LCC"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						CONSTRUCT {
							?agent	ajan:agentId	?agentId ;
									welcome:hasInvolvedInMac	?bnode .
									
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId ?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
													welcome:hasUtilityValue ?uVbnode .
													
							?uVbnode    rdf:type    welcome:UtilityValue ;
										welcome:hasComputedBy   ?agentId ;    
										mac:hasValue        ?utilityValue .					
						}
						WHERE {
							?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
									ajan:agentId	?agentId .
									
							?bnode	rdf:type	welcome:LCCUseCase ;
									mac:hasId ?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
							?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
							
							OPTIONAL {
								?feasibleCoalitionNode	welcome:hasUtilityValue ?uVbnode .
								?uVbnode    rdf:type    welcome:UtilityValue ;
											welcome:hasComputedBy   ?agentId ;    
											mac:hasValue        ?utilityValue .
							}	
				}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					SELECT DISTINCT ?requestURI
					WHERE {
					
					?bnode	rdf:type	welcome:LCCUseCase ;
							welcome:hasDedicatedAgent	?dAgentId ;
							mac:hasId	?lccId .
							
					?agentUri	ajan:agentId	?dAgentId ;
								welcome:hasAddress	?address .
								
					BIND(CONCAT(?address, "?capability=receiveLccUtilityValues") AS ?requestURI )
					}"""^^xsd:string
	] .	
	

	
:UpdateLccUseCaseInLakr
	a bt:Update ;
	rdfs:label "Update: LCC Info in LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
                DELETE{
					?bnode2	rdf:type	welcome:LCCUseCase ;
							?p2	?o2 ;
							mac:hasId	?lccId .
				}
				INSERT {
					?bnode	rdf:type	welcome:LCCUseCase ;
							?p ?o ;
							?p2 ?o2 .
                }
                WHERE {
					#OPTIONAL{
						?bnode	rdf:type	welcome:LCCUseCase ;
								?p ?o ;
								mac:hasId	?lccId .
					#}
					OPTIONAL {
						?bnode2	rdf:type	welcome:LCCUseCase ;
								?p2	?o2 ;
								mac:hasId	?lccId .	
						FILTER(?bnode != ?bnode2)								
					}
					
                }
					"""^^xsd:string ;
		]) .

:InsertLccUtilities2Lakr
	a bt:Insert ;
	rdfs:label "Insert: LCC Utility Values to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

				CONSTRUCT  {
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode ;
												welcome:hasCommonGender	?cmnGender ;
												welcome:hasCommonNation	?cmnNation ;
												mac:hasMembers	?mAgentId .
												
						?uVbnode	rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
				}
				WHERE {									
									
						#?agent	rdf:type	ajan:Agent ;
						#		ajan:agentId	?agentId .
								
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												mac:hasMembers	?mAgentId .

						OPTIONAL {
							?feasibleCoalitionNode	welcome:hasCommonGender	?cmnGender ;
													welcome:hasCommonNation	?cmnNation .
						}
						
						OPTIONAL {
							?feasibleCoalitionNode	welcome:hasUtilityValue ?uVbnode .
							?uVbnode    rdf:type    welcome:UtilityValue ;
										welcome:hasComputedBy   ?agentId ;    
										mac:hasValue        ?utilityValue .	
						}
						
						#OPTIONAL {
						#	?existingBnode	rdf:type	welcome:LCCUseCase ;
						#					mac:hasId	?lccId .
						#	FILTER(?existingBnode!=?bnode)
						#}
						#BIND(IF(BOUND(?existingBnode), ?existingBnode, ?bnode) AS ?finalBnode)
						
				} """^^xsd:string ;
	] .

:WriteLccUtilities2Lakr
	a bt:Write ;
	rdfs:label "Write: LCC Utility Values to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

				CONSTRUCT  {
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode ;
												mac:hasMembers	?mAgentId .
												
						?uVbnode	rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
				}
				WHERE {
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												mac:hasMembers	?mAgentId .
						
						OPTIONAL {
							?feasibleCoalitionNode	welcome:hasUtilityValue ?uVbnode .
							?uVbnode    rdf:type    welcome:UtilityValue ;
										welcome:hasComputedBy   ?agentId ;    
										mac:hasValue        ?utilityValue .	
						}
						
						#OPTIONAL {
						#	?existingBnode	rdf:type	welcome:LCCUseCase ;
						#					mac:hasId	?lccId .
						#	FILTER(?existingBnode!=?bnode)
						#}
						#BIND(IF(BOUND(?existingBnode), ?existingBnode, ?bnode) AS ?finalBnode)
						
				} """^^xsd:string ;
	] .


:InsertLccUseCaseAmount
	a bt:Insert ;
	rdfs:label "Insert: LCC Utility Values to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

				CONSTRUCT  {
						ajan:LccInstances	rdf:type	?totalInstances .
				}
				WHERE {
						{
							SELECT (COUNT(?bnode) AS ?totalInstances)
							WHERE{
								?bnode	rdf:type	welcome:LCCPreferencesInfo .
										#mac:hasId ?lccId .
								#FILTER EXISTS { ?bnode	mac:hasFeasibleCoalitions	?feasibleCoalitionNode . }
							} 
						
						}
				} """^^xsd:string ;
	] .
:Wait4UtilityValues 
	a bt:Wait ;
	rdfs:label "Wait: 4 LCC Utilities" ;
	rdfs:comment "Wait for participating agents to return their Utility Values for LCC" ;
	bt:milliseconds "100000"^^xsd:int .	



		
:ComputeLccCoalitionValues
	a bt:Update ;
	rdfs:label "Update: Compute LCC Coalition Values" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
				INSERT {
					?feasibleCoalition mac:hasValue ?coalitionValue .
				}
				WHERE{
					{
						SELECT ?feasibleCoalition ?sdValue	?sdWeight (SUM(?utilityValue) AS ?sumOfUtilities)
						WHERE {
							?lccUseCase	rdf:type	welcome:LCCUseCase ;
										welcome:hasStatus	?lccStatus ;
										mac:hasId	?lccId ;
										welcome:hasSdWeight	?sdWeight ;
										mac:hasFeasibleCoalitions	?feasibleCoalition .
							#FILTER NOT EXISTS { ?lccUseCase	welcome:hasStatus	"Complete" .}
							FILTER(LCASE(?lccStatus) = "running")
							
							?feasibleCoalition	rdf:type	mac:CSGP-Coalition .
							OPTIONAL {
							?feasibleCoalition	welcome:hasUtilityValue	?utilityValueNode .
							?utilityValueNode	rdf:type	welcome:UtilityValue ;
												mac:hasValue	?utilityValue .
							}
							OPTIONAL {
								?feasibleCoalition	welcome:hasStandardDeviation	?sdValue .
							}
						} GROUP BY ?feasibleCoalition ?sdValue	?sdWeight
					}
					#BIND(IF(BOUND(?sumOfUtilities), ((?sumOfUtilities * (1-?sdWeight)) - (?sdWeight * ?sdValue)), 0) AS ?coalitionValue)
                    BIND(IF(BOUND(?sumOfUtilities), ?sumOfUtilities, 0) AS ?boundSumOfUtils)
                    BIND(xsd:float(?sdValue) AS ?fSdValue)
                    BIND(xsd:float(?sdWeight) AS ?fSdWeight)
                    BIND(xsd:float(?boundSumOfUtils) AS ?fBoundSumOfUtils)
                    BIND( ((1-?fSdWeight) * ?fBoundSumOfUtils) - (?fSdWeight * ?fSdValue) AS ?coalitionValue)
				
				
					#{
					#	SELECT ?feasibleCoalition ?sdValue	?sdWeight (SUM(?utilityValue) AS ?sumOfUtilities)
					#	WHERE {
					#		?lccUseCase	rdf:type	welcome:LCCUseCase ;
					#					welcome:hasStatus	?lccStatus ;
					#					mac:hasId	?lccId ;
					#					welcome:hasSdWeight	?sdWeight ;
					#					mac:hasFeasibleCoalitions	?feasibleCoalition .
					#		#FILTER NOT EXISTS { ?lccUseCase	welcome:hasStatus	"Complete" .}
					#		FILTER(LCASE(?lccStatus) = "running")
							
					#		?feasibleCoalition	rdf:type	mac:CSGP-Coalition .
					#		OPTIONAL {
					#		?feasibleCoalition	welcome:hasUtilityValue	?utilityValueNode .
					#		?utilityValueNode	rdf:type	welcome:UtilityValue ;
					#							mac:hasValue	?utilityValue .
					#		}
					#		OPTIONAL {
					#			?feasibleCoalition	welcome:hasStandardDeviation	?sdValue .
					#		}
					#	} GROUP BY ?feasibleCoalition ?sdValue	?sdWeight
					#}
					#BIND(IF(BOUND(?sumOfUtilities), ?sumOfUtilities, 0) AS ?coalitionValue)
				}
					"""^^xsd:string ;
		]) .	


		
:ComputeLccRuntime
	a bt:Update ;
	rdfs:label "Update: Compute LCC Runtime" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
				INSERT {
					?lccUseCase	mac:hasRuntime	?lccRuntimeInSeconds .
				}
				WHERE{
					?lccUseCase	rdf:type	welcome:LCCUseCase ;
								welcome:hasStatus	?lccStatus ;
								mac:hasId	?lccId .
										
					FILTER(LCASE(?lccStatus) = "completed" || LCASE(?lccStatus) = "failed" || LCASE(?lccStatus) = "no solution found")
					OPTIONAL {
						?lccUseCase	welcome:hasStartTime	?startTime ;
									welcome:hasEndTime	?endTime .
					}
					FILTER(BOUND(?startTime) && BOUND(?endTime))
						
					BIND( (DAY(?startTime)*86400 + HOURS(?startTime)*3600 + MINUTES(?startTime)*60 + SECONDS(?startTime)) AS ?startTimeInSeconds)
					BIND( (DAY(?endTime)*86400 + HOURS(?endTime)*3600 + MINUTES(?endTime)*60 + SECONDS(?endTime)) AS ?endTimeInSeconds)
					BIND( ?endTimeInSeconds - ?startTimeInSeconds AS ?lccRuntimeInSeconds)
				}
					"""^^xsd:string ;
		]) .

:ProduceSolveLccEvent
	a bt:EventProducer ;
	rdfs:label "EventProducer: Solve LCC Event" ;
	ajan:event agents:SolveLccEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:ExecutionKnowledge;
					bt:sparql """

						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}"""^^xsd:string ;
				] .

:WriteCompleteUtilities2Exec
	a bt:Write ;
	rdfs:label "Write: Utilities to LAKR" ;
	rdfs:comment "Write LCC Utility Values of all participating agents to Execution Knowledge" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

				CONSTRUCT  {
						?newbnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode ;
												mac:hasMembers	?mAgentId .
												
						?uVbnode	rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
				}
				WHERE {
						
						{?bnode	rdf:type	welcome:LCCUseCase ;
								welcome:hasStatus	"completed" ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
												
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
						}
						BIND(BNODE() AS ?newbnode)
				} """^^xsd:string ;
	] .


:HandleReceiveLccUtilitiesEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Receive Utilities" ;
	rdfs:comment "Receive LCC Utility Values from Participants Event Handler" ;
	bt:event agents:ReceiveLccUtilityValuesEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .
					}"""^^xsd:string ;
				] .	

:ReplaceLccProcessTypeOLDDDD
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Receive Utilities" ;
	rdfs:comment "Receive LCC Utility Values from Participants Event Handler" ;
	bt:event agents: ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {	
						?bnode	rdf:type	welcome:CurrentlyRunningLCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
					}
					WHERE { 
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
		#				?s ?p ?o .							
									}"""^^xsd:string ;
				] .		



:ReplaceLccProcessType
	a bt:Update ;
	rdfs:label "Update: replace lccUseCase with Currentlyrunning..." ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					
					DELETE {
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .					}
					INSERT{
						?bnode	rdf:type	welcome:CurrentlyRunningLCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .
					}
					WHERE{
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .
					}
					"""^^xsd:string ;
		]) .

:WriteAllIncompleteLccProcess2Ek
	a bt:Write ;
	rdfs:label "Write: All Incomplete LCCs 2 LAKR" ;
	rdfs:comment "" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {
						?agent	rdf:type	ajan:Agent ;
								ajan:agentId	?agentId ;
								welcome:hasInvolvedInMac ?bnode .	

						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId .	
								
					}
					WHERE {
						?agent	rdf:type	ajan:Agent ;
								ajan:agentId	?agentId ;
								welcome:hasInvolvedInMac ?bnode .	

						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId ?lccId .
						
						FILTER NOT EXISTS {?bnode	welcome:hasStatus	"Completed" .}
					
					}

		
		"""^^xsd:string ;
	] .
	

:RemoveUnmatchingLccProcesses
	a bt:Update ;
	rdfs:label "Update: Remove Unmatching LCC Processes from EK" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					
					DELETE {
						?agent	welcome:hasInvolvedInMac ?bnode .
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccIdFromLakr .
					}
					WHERE{
						?agent	rdf:type	ajan:Agent ;
								welcome:hasInvolvedInMac	?bnode .
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccIdFromLakr .
								
						?bnode2	rdf:type	welcome:CurrentlyRunningLCCUseCase ;
								mac:hasId	?currentLccId .
						FILTER(?lccIdFromLakr != ?currentLccId)
					}
					"""^^xsd:string ;
		]) .

:InsertLccUtilitiesOfSender2Lakr
	a bt:Insert ;
	rdfs:label "Insert: LCC Utilities 2 LAKR" ;
	rdfs:comment "Insert LCC Utility Values of Participants to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
						
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					CONSTRUCT {

						?bnode	rdf:type	welcome:LCCUseCase ;
						#		mac:hasId	?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
								
					}
					WHERE {	
					#	?bnode	rdf:type	welcome:CurrentlyRunningLCCUseCase ;
					#			mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
					#	?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
					#							welcome:hasUtilityValue ?uVbnode .
													
					#	?uVbnode    rdf:type    welcome:UtilityValue ;
					#				welcome:hasComputedBy   ?agentId ;    
					#				mac:hasValue        ?utilityValue .
						
					#	?bnode2	rdf:type	welcome:LCCUseCase .
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .
									
						#BIND(BNODE() AS ?utValue)
					}

		
		"""^^xsd:string ;
	] .

:WriteLccUtilitiesOfSender2Lakr
	a bt:Write ;
	rdfs:label "Write: LCC Utilities 2 LAKR" ;
	rdfs:comment "Write LCC Utility Values of Participants to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					CONSTRUCT {

						#?bnode	rdf:type	welcome:LCCUseCase ;
						#		mac:hasId	?lccId ;
						#		mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?utValue .
													
						?utValue    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .	
								
					}
					WHERE {	
					#	?bnode	rdf:type	welcome:CurrentlyRunningLCCUseCase ;
					#			mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
					#	?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
					#							welcome:hasUtilityValue ?uVbnode .
													
					#	?uVbnode    rdf:type    welcome:UtilityValue ;
					#				welcome:hasComputedBy   ?agentId ;    
					#				mac:hasValue        ?utilityValue .
						
					#	?bnode2	rdf:type	welcome:LCCUseCase .
						
						?bnode	rdf:type	welcome:LCCUseCase ;
								mac:hasId	?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												welcome:hasUtilityValue ?uVbnode .
													
						?uVbnode    rdf:type    welcome:UtilityValue ;
									welcome:hasComputedBy   ?agentId ;    
									mac:hasValue        ?utilityValue .
									
						BIND(BNODE() AS ?utValue)
					}

		
		"""^^xsd:string ;
	] .
	
	

:HandleSolveLccEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Solve LCC Event" ;
	rdfs:comment "HandleEvent to Solve LCC Use Case with BOSS Algorithm" ;
	bt:event agents:SolveLccEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .
					}"""^^xsd:string ;
				] .	


:WriteCoalitionValues2Ek
	a bt:Write ;
	rdfs:label "Write: LCC Coalition Values" ;
	rdfs:comment "Write LCC Coalition Values to Execution Knowledge" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge  ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					CONSTRUCT {
						#?bnode	rdf:type	welcome:LCCUseCase ;
						#		mac:hasId	?lccId ;
						#		mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												mac:hasMembers	?memberAgent ;
												mac:hasValue ?coalitionValue .
								
					}
					WHERE {	
						?bnode	rdf:type	welcome:LCCUseCase ;
								welcome:hasStatus	?lccStatus ;
								mac:hasId	?lccId ;
								mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												mac:hasMembers	?memberAgent ;
												mac:hasValue ?coalitionValue .
												
						FILTER(LCASE(?lccStatus) = "running")
					}

		
		"""^^xsd:string ;
	] .		
	
:SolveLcc_BOSS
	a bt:BOSS ;
	rdfs:label "BOSS: Solve LCC Use Case" ;
	bt:query [
				a bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:targetBase ajan:ExecutionKnowledge ;
				bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					
					Construct {
						?lccSubject	rdf:type	mac:MACProblemInstance ;
									mac:hasNumberOfAgents	?numOfAgents ;
									mac:hasParticipants	?pAgentId ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
						?lccSubject	mac:hasNonExistentCoalitionValue	"-1000000" .
									
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												mac:hasMembers	?mAgentId ;
												mac:hasValue ?coalitionValue .	
						#?s ?p ?o .
					}
					Where{
						
						#?s ?p ?o .
						?lccSubject	rdf:type	welcome:LCCUseCase ;
									mac:hasNumberOfAgents	?numOfAgents ;
									mac:hasParticipants	?pAgentId ;
									mac:hasId	?lccId ;
									mac:hasFeasibleCoalitions	?feasibleCoalitionNode .
									
						?feasibleCoalitionNode	rdf:type	mac:CSGP-Coalition ;
												mac:hasMembers	?mAgentId ;
												mac:hasValue ?coalitionValue .						  
					}
					"""^^xsd:string ;
			] .

			
:BroadcastLccResult
	a bt:Broadcast ;
	rdfs:label "Broadcast: LCC Result"^^xsd:string ;
	rdfs:comment "Send the Result of LCC_CSGP to other participating agents"^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							#?agentUri	rdf:type	ajan:Agent ;
							#			ajan:agentId	?agentId .
							
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										mac:hasSolution	?lccSolution ;
										welcome:hasDedicatedAgent	?dAgentId ;
										welcome:hasStatus	?lccStatus .
							
							?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
											mac:hasValue	?csValue ;
											mac:hasRank		?csRank ;
											mac:hasSolutionOf	?lccSubject ;
											mac:hasMembers	?coalition .
											
							?coalition	rdf:type	mac:CSGP-Coalition ;
											mac:hasMembers	?memberAgent .
						}
						WHERE {
							#?agentUri	rdf:type	ajan:Agent  ;
							#			ajan:agentId	?agentId .
						
							# Select LCC Use Case Problem Info
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId .
										
							OPTIONAL {
								?lccSubject	mac:hasSolution	?lccSolution .
								# Select LCC Use Case Solutions
								?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
												mac:hasValue	?csValue ;
												mac:hasRank		?csRank ;
												mac:hasSolutionOf	?lccSubject ;
												mac:hasMembers	?coalition .											
							}
							
							OPTIONAL {
								?coalition	rdf:type	mac:CSGP-Coalition ;
											mac:hasMembers	?memberAgent .	
							}
#							BIND( IF( BOUND(?lccSolution) && BOUND(?csValue) && BOUND(?csRank) && BOUND(?coalition) && 
#										BOUND(?memberAgent), "Completed", "Failed") AS ?lccStatus) 
							BIND( IF( BOUND(?lccSolution) && BOUND(?csValue) && BOUND(?csRank), "Completed", "No Solution Found") AS ?lccStatus) 

							}
							"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					SELECT DISTINCT ?requestURI
					WHERE {
					
					?bnode	rdf:type	welcome:LCCUseCase ;
							mac:hasId	?lccId ;
							mac:hasParticipants	?pAgentId .
					
					?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
							ajan:agentId	?agentId .
					
					FILTER(?pAgentId != ?agentId)
					?agentUri	ajan:agentId	?pAgentId ;
								welcome:hasAddress	?address .
					
					BIND(CONCAT(?address, "?capability=finalizeLccProcess") AS ?requestURI )
					}"""^^xsd:string
	] .	

		
:BroadcastLccFailed
	a bt:Broadcast ;
	rdfs:label "Broadcast: LCC Failed"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId ;
										mac:hasStatus	?lccStatus .
						}
						WHERE {
							# Select LCC Use Case Problem Info
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId .
										
							
							BIND( "Failed" AS ?lccStatus) 

							}
							"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					SELECT DISTINCT ?requestURI
					WHERE {
					
					?bnode	rdf:type	welcome:LCCUseCase ;
							mac:hasId	?lccId ;
							mac:hasParticipants	?pAgentId .
					
					?agent	rdf:type	ajan:Agent, ajan:ThisAgent ;
							ajan:agentId	?agentId .
					
					FILTER(?pAgentId != ?agentId)
					?agentUri	ajan:agentId	?pAgentId ;
								welcome:hasAddress	?address .
					
					BIND(CONCAT(?address, "?capability=finalizeLccProcess") AS ?requestURI )
					}"""^^xsd:string
	] .	
	
	
:BroadcastTestToView
	a bt:Broadcast ;
	rdfs:label "Display Execution Knowledge"^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}
							"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					SELECT DISTINCT ?requestURI
					WHERE {
						VALUES ?requestURI { "http://localhost:8092/teacherPanel/inform"}
					}"""^^xsd:string
	] .	



:Message2TeacherLccResult
	a bt:Message ;
	rdfs:label "Message: LCC Result 2 Teacher"^^xsd:string ;
	rdfs:comment "Send Result of LCC Process to Teacher"^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							#?lccSubject	rdf:type	welcome:LCCUseCase ;
							#			mac:hasId	?lccId ;
							#			mac:hasSolution	?lccSolution ;
							#			welcome:hasDedicatedAgent	?dAgentId ;
							#			welcome:hasStatus	?lccStatus .
							
							#?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
							#				mac:hasValue	?csValue ;
							#				mac:hasRank		?csRank ;
							#				mac:hasSolutionOf	?lccSubject ;
							#				mac:hasMembers	?coalition .
											
							#?coalition	rdf:type	mac:CSGP-Coalition ;
							#				mac:hasMembers	?memberAgent .
												
												
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										welcome:hasId	?lccId ;
										welcome:hasSolution	?lccSolution ;
										welcome:hasDedicatedAgent	?dAgentId ;
										welcome:hasStatus	?lccStatus .
							
							?lccSolution	rdf:type	welcome:Grouping ;
											welcome:hasValue	?csValue ;
											welcome:hasRank		?csRank ;
											welcome:hasSolutionOf	?lccSubject ;
											welcome:hasMembers	?coalition .
											
							?coalition	rdf:type	welcome:Group ;
										welcome:hasMembers	?memberAgent .				
											
						}
						WHERE {
							# Select LCC Use Case Problem Info
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId .
										
							OPTIONAL {
								?lccSubject	mac:hasSolution	?lccSolution .
								# Select LCC Use Case Solutions
								?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
												mac:hasValue	?csValue ;
												mac:hasRank		?csRank ;
												mac:hasSolutionOf	?lccSubject ;
												mac:hasMembers	?coalition .
												
								?coalition	rdf:type	mac:CSGP-Coalition ;
											mac:hasMembers	?memberAgent .				
							}
							BIND( IF( BOUND(?lccSolution) && BOUND(?csValue) && BOUND(?csRank) && BOUND(?coalition) && 
										BOUND(?memberAgent), "Completed", "No Solution Found") AS ?lccStatus) 

							}						
				"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					SELECT DISTINCT ?requestURI
					WHERE {
						VALUES ?requestURI { "http://localhost:8092/teacherPanel/inform"}
					}"""^^xsd:string
	] .	
	

:Message2TeacherLccFailed
	a bt:Message ;
	rdfs:label "Message: LCC Failed 2 Teacher"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId ;
										welcome:hasStatus	?lccStatus .
						}
						WHERE {
							# Select LCC Use Case Problem Info
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId .
										
							BIND( "Failed" AS ?lccStatus) 

							}						
				"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>

					SELECT DISTINCT ?requestURI
					WHERE {
						VALUES ?requestURI { "http://localhost:8092/teacherPanel/inform"}
					}"""^^xsd:string
	] .
	
:ProduceFinalizeLccEvent
	a bt:EventProducer ;
	rdfs:label "EventProducer: Finalize LCC Event" ;
	ajan:event agents:FinalizeLccProcessEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:ExecutionKnowledge;
					bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
						CONSTRUCT {
							?agentUri	rdf:type	ajan:Agent ;
										ajan:agentId	?agentId .
							
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										mac:hasSolution	?lccSolution ;
										welcome:hasDedicatedAgent	?dAgentId ;
										welcome:hasStatus	?lccStatus .
							
							?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
											mac:hasValue	?csValue ;
											mac:hasRank		?csRank ;
											mac:hasSolutionOf	?lccSubject ;
											mac:hasMembers	?coalition .
											
							?coalition	rdf:type	mac:CSGP-Coalition ;
											mac:hasMembers	?memberAgent .
						}
						WHERE {
							?agentUri	rdf:type	ajan:Agent  ;
										ajan:agentId	?agentId .
						
							# Select LCC Use Case Problem Info
							?lccSubject	rdf:type	welcome:LCCUseCase ;
										mac:hasId	?lccId ;
										welcome:hasDedicatedAgent	?dAgentId .
										
							OPTIONAL {
								?lccSubject	mac:hasSolution	?lccSolution .
								# Select LCC Use Case Solutions
								?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
												mac:hasValue	?csValue ;
												mac:hasRank		?csRank ;
												mac:hasSolutionOf	?lccSubject ;
												mac:hasMembers	?coalition .											
							}
							
							OPTIONAL {
								?coalition	rdf:type	mac:CSGP-Coalition ;
											mac:hasMembers	?memberAgent .	
							}
#							BIND( IF( BOUND(?lccSolution) && BOUND(?csValue) && BOUND(?csRank) && BOUND(?coalition) && 
#										BOUND(?memberAgent), "Completed", "Failed") AS ?lccStatus) 
							BIND( IF( BOUND(?lccSolution) && BOUND(?csValue) && BOUND(?csRank), "Completed", "No Solution Found") AS ?lccStatus) 
							
							}	"""^^xsd:string ;
				] .
				

:HandleFinalizeLccEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Finalize LCC Event" ;
	rdfs:comment "Handle Finalize LCC Process Event" ;
	bt:event agents:FinalizeLccProcessEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """

					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .
					}"""^^xsd:string ;
				] .	
				
:HandleLccFailedEvent
	a bt:HandleQueueEvent ;
	rdfs:label "EventHandler: Lcc Failed Event" ;
	rdfs:comment "" ;
	bt:event agents:LccFailureEvent ;
	bt:validate [
			a bt:ConstructQuery ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """

					CONSTRUCT {
						?s ?p ?o .
					}
					WHERE { 
						?s ?p ?o .
					}"""^^xsd:string ;
				] .	
	


:WriteLccResult
	a bt:Insert ;
	rdfs:label "Write: LCC Result 2 LAKR" ;
	rdfs:comment "Write LCC Result to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge  ;
		bt:sparql """
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
						
					CONSTRUCT {
						?lccSubject	rdf:type	welcome:LCCUseCase ;
									welcome:hasEndTime	?now ;
									mac:hasId	?lccId ;
									mac:hasSolution	?lccSolution ;
									welcome:hasDedicatedAgent	?dAgentId ;
									welcome:hasStatus	?lccStatus .
							
						?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
										mac:hasValue	?csValue ;
										mac:hasRank		?csRank ;
										mac:hasSolutionOf	?lccSubject ;
										mac:hasMembers	?coalition .
											
						?coalition	rdf:type	mac:CSGP-Coalition ;
									mac:hasMembers	?memberAgent .
						#?s ?p ?o .

					}
					WHERE {
						# Select LCC Use Case Problem Info
						?lccSubject	rdf:type	welcome:LCCUseCase ;
									welcome:hasStatus	?lccStatus ;
									mac:hasId	?lccId ;
									welcome:hasDedicatedAgent	?dAgentId .
									
						OPTIONAL {
							?lccSubject	mac:hasSolution	?lccSolution .
							# Select LCC Use Case Solutions
							?lccSolution	rdf:type	mac:CSGP-CoalitionStructure ;
											mac:hasValue	?csValue ;
											mac:hasRank		?csRank ;
											mac:hasSolutionOf	?lccSubject ;
											mac:hasMembers	?coalition .
												
						#	?coalition	rdf:type	mac:CSGP-Coalition ;
						#				mac:hasMembers	?memberAgent .				
						}
						#?s ?p ?o .
						BIND(NOW() AS ?now)
					}

		
		"""^^xsd:string ;
	] .	
	

:WriteAgentId2Execution
	a bt:Write ;
	rdfs:label "Write: ID of agent to Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 	
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
			PREFIX ajan: <http://www.ajan.de/ajan-ns#>
			CONSTRUCT  {
				?agentUri	rdf:type	ajan:Agent, ajan:ThisAgent ;
							ajan:agentId	?agentName .
			}
			WHERE { 
				?agentUri	rdf:type	ajan:Agent ;
							ajan:agentId	?agentName .
			} """^^xsd:string ;
	] .
	

:Message2WPMUpdateStatus2InCoordination
	a bt:Message ;
	rdfs:label "Message: Update Agent status to In_Coordination in WAR"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "application/ld+json"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				][
					a http-core:Header ;
					http-core:hdrName http-headers:to ;
					http-core:fieldValue "WPM"
			]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX welcome-sw: <http://www.semanticweb.org/welcome#>
						CONSTRUCT {
							?agent	welcome:hasStatus welcome-sw:in_coordination ;
									ajan:agentId	?agentName .
						}
						WHERE {
							?agent	rdf:type ajan:Agent ;
									ajan:agentId	?agentName .
						}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					SELECT ?requestURI
					WHERE {
					  VALUES ?requestURI { "http://localhost:8092/wpm/updateAgentStatus" }
					}"""^^xsd:string
	] .

:Wait4LAR 
	a bt:Wait ;
	rdfs:label "Wait: wait for LAR to be populated" ;
	rdfs:comment "" ;
	bt:milliseconds "5000"^^xsd:int .
	
:Wait1Sec
	a bt:Wait ;
	rdfs:label "Wait: 1 second" ;
	rdfs:comment "" ;
	bt:milliseconds "1000"^^xsd:int .

:JustFail
	a bt:Fail ;
	rdfs:label "fail node"^^xsd:string .
	


:WriteAll2Lakr
	a bt:Write ;
	rdfs:label "Write: all to LAKR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
				CONSTRUCT  {
						?s ?p ?o .
				}
				WHERE {
						?s ?p ?o .	
				} """^^xsd:string ;
	] .


		

:ComputeLccDistancesInLakr
	a bt:Update ;
	rdfs:label "Update: Compute LCC Distances in LAKR" ;
	bt:query [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
				PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						CONSTRUCT {
								?dsnBnode	rdf:type	mac:DistanceScore ;
											mac:hasSubjectAgent ?pAgentId ;
											mac:hasObjectAgent ?oAgentId ;
											mac:isComputedForProblemId  ?chcId ;
											mac:hasDistanceScore	?distanceScore .	
						}
						WHERE {								
								?agent	rdf:type	ajan:Agent ;
										welcome:isRunningCHC ?chcId ;
										ajan:agentId	?dAgentId.	
							
								?bnode	rdf:type	welcome:CHCUseCase;
										mac:hasId		?chcId;
										mac:hasNumberOfAgents	?numOfAgents;
										mac:hasParticipants		?pAgentId ;
										welcome:hasAgeWeight ?ageWeight;
										welcome:hasGenderWeight ?genWeight;
										welcome:hasFamilyWeight	?famWeight;
										welcome:hasNationalityWeight	?natWeight;
										welcome:hasReligionWeight	?relWeight;
										welcome:hasEthnicityWeight	?ethWeight;
										welcome:hasLocationWeight	?locWeight;
										welcome:hasAccessibilityWeight	?accWeight;
										welcome:hasRentPeriodWeight	?rentWeight;
										welcome:hasShareWithWeight	?shareWeight.
							
										BIND(1 AS ?matchScore)
										BIND(0 AS ?unmatchScore)
										BIND(10 AS ?numberOfPreferences)
										BIND((?matchScore * (?ageWeight + ?genWeight + ?famWeight + ?natWeight + ?relWeight + ?ethWeight + ?locWeight + ?accWeight + ?rentWeight + ?shareWeight))/?numberOfPreferences AS ?perfectMatchScore)

								?rrsBnode	rdf:type	welcome:CHCReciprocalScore ;
											mac:hasSubjectAgent ?pAgentId ;
											mac:hasObjectAgent ?oAgentId ;
											mac:isComputedForProblemId  ?chcId ;
											ajan:hasReciprocalScore	?bReciprocalScore .
								
								BIND((?perfectMatchScore - ?bReciprocalScore) AS ?distanceScore)
								BIND(BNODE() AS ?dsnBnode)
				} """^^xsd:string ;
	] .


:ConditionAgentInAnyMAC
	a bt:Condition ;
	rdfs:label "Condition: is agent involved in or running any coordination use case?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					ASK
					WHERE {
						?agentUri	rdf:type	ajan:Agent ;
									ajan:agentId	?agentName .	
							
						OPTIONAL {
							?agentUri	welcome:isRunningCHC	?involvedInChcId .		
							#FILTER(?runningChcId = ?chcId)
						}
						
						OPTIONAL {
							?agentUri	welcome:isInvolvedInCHC	?runningChcId .	
							#FILTER(?involvedChcId = ?chcId)
						}		
						
						FILTER(BOUND(?involvedInChcId) || BOUND(?runningChcId))

						}"""^^xsd:string ;
		]) .
		
:ConditionAgentInAnyCoordination
	a bt:Condition ;
	rdfs:label "Condition: is agent involved in or running any coordination use case?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
					ASK
					WHERE {
						#?agentUri	rdf:type	ajan:Agent ;
						#			ajan:agentId	?agentName .	
							
						#OPTIONAL {
						#	?agentUri	welcome:isRunningCHC	?runningChcId .		
						#}
						
						#OPTIONAL {
						#	?agentUri	welcome:isInvolvedInCHC	?involvedInChcId .	
						#}	
						
						#OPTIONAL {
						#	?agentUri	welcome:hasRunningMac	?macId .
						#}
						
						#OPTIONAL {
						#	?agentUri	welcome:hasInvolvedInMac	?macId2 .
						#}		
						
						# Each agent must add the Id of the MAC use case with the "welcome:hasInvolvedInMac" predicate, 
						# every time it starts to participate in any coordination use case. This also helps to see in which use cases
						# the agent has participated so far. 
				
						# So first we take the MacIds in which this.agent has involved in so far. Then we select the use cases 
						# with these MacIds. Then we check if any of those Mac use cases are "Running". If not, then agent is not 
						# involved in any mac use case. (?macStatus can take "Running", "Completed" and "Failed" values) 
						
						?agentUri	rdf:type	ajan:Agent ;
									welcome:hasInvolvedInMac	?macId .

						?macUseCase	rdf:type	mac:MACProblemInstance ;
									mac:hasId	?macId ;
									welcome:hasStatus	?macStatus .
						
						FILTER( LCASE(?macStatus) = "running" )
						
						#FILTER( LCASE(?macStatus) != "completed" && LCASE(?macStatus) != "failed")

						}"""^^xsd:string ;
		]) .
		
		


:Message2WPMUpdateStatus2Active
	a bt:Message ;
	rdfs:label "Message: Update Agent status to Active in WAR"^^xsd:string ;
	rdfs:comment ""^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "application/ld+json"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				][
					a http-core:Header ;
					http-core:hdrName http-headers:to ;
					http-core:fieldValue "WPM"
			]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
						PREFIX mac: <http://localhost:8090/rdf4j/repositories/ajan_mac_ontology#>
						PREFIX welcome-sw: <http://www.semanticweb.org/welcome#>
						CONSTRUCT {
							?agent	welcome:hasStatus	welcome-sw:active ;
									ajan:agentId	?agentName .
						}
						WHERE {
							?agent	rdf:type	ajan:Agent ;
									ajan:agentId	?agentName .
						}
						"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					SELECT ?requestURI
					WHERE {
					  VALUES ?requestURI { "http://localhost:8092/wpm/updateAgentStatus" }
					}"""^^xsd:string
	] .
	
# ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ LCC Related BT Nodes ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑


# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ WELCOME Stuff by ELENA ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
	

:InitialWelcomeBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Initialization Behavior" ;
	bt:hasChild [
					a bt:Sequence ;
					bt:hasChildren (
										:UpdateBehaviorRunning
										[
											a bt:Priority ;
											bt:hasChildren (
																:ConditionLSRPopulated
																:EventProducerPopulateLSR
															)																														
										]
										[
											a bt:Priority ;
											bt:hasChildren (
																:ConditionLARPopulated
																:EventProducerPopulateLAR														
															)																														
										]
									)
				] .

:FinalWelcomeBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Final Behavior" ;
	bt:hasChild [
					a bt:Sequence ;
					bt:hasChildren (
										:DeleteTemporalFlagsinLAKR
										:DeleteTemporalFlagsinLSR
									)
				] .

:HeartbeatMonitoringBT
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Heartbeat behavior" ;
	bt:hasChild [
					a bt:Sequence ;
					bt:hasChildren (
										:AgentMonitoringHandleEvent
									)
				] .


:PopulateLSRRepos
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Populate Local LSR Repository" ;
	bt:hasChild [
					a bt:Priority ;
					bt:hasChildren (
										[
											a bt:Sequence ;
											bt:hasChildren (
																:EventHandlerRequestLSRTriples
																:UpdateBehaviorRunning
																:UpdateCreateHeaderDispatcherMessage
																:MessageSendLSRMessageWPM
																:DefaultFailed
															)																														
										]
										[
											a bt:Sequence ;
											bt:hasChildren (
																:EventHandlerReceiveLocalServices
																:UpdateBehaviorRunning
																#[
																#	a bt:Invert ;
																#	bt:hasChild 
																#				:ConditionNoAgentPopulation																													
																#]
																[
																	a bt:Priority ;
																	bt:hasChildren (
																						[
																							a bt:Invert ;
																							bt:hasChild 
																										:ConditionLSRPopulated																														
																						]
																						:RemoveLSRContent
																						:UpdateLSRAgentKnowledge
																					)																															
																]
																:WriteTriplesLSRC1
																:WriteTriplesLSRC2
																:PluginOWL2PDDL
																:UpdateAgentKnowsLSR
																:UpdateLSRExecutionKnowledge
																:UpdateDeleteBehaviorRunning
															)																															
										]
								   )
				] .

:PopulateLARRepos
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Populate Local LAR Repository" ;
	bt:hasChild [
					a bt:Priority ;
					bt:hasChildren (
										[
											a bt:Sequence ;
											bt:hasChildren (
																:EventHandlerRequestLARTriples
																:UpdateBehaviorRunning
																:UpdateCreateHeaderDispatcherMessage
																:MessageSendLARMessageWPM
																:DefaultFailed
															)																															
										]
										[
											a bt:Sequence ;
											bt:hasChildren (
																:EventHandlerReceiveLocalAgents
																:UpdateBehaviorRunning
																[
																	a bt:Priority ;
																	bt:hasChildren (
																						[
																							a bt:Invert ;
																							bt:hasChild 
																										:ConditionLARPopulated																														
																						]
																						:RemoveLARContent
																						:UpdateLARAgentKnowledge
																					)																															
																]
																:WriteTriplesLAR
																:UpdateAgentKnowsLAR
																:UpdateLARExecutionKnowledge
																:UpdateDeleteBehaviorRunning
															)																															
										]
								   )
				] .
				
:HandshakeBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Handhshake BT" ;
	bt:hasChild [
					a bt:Priority ;
					bt:hasChildren (
										[
											a bt:Invert ;
											bt:hasChild 
														:EventHandlerHandshake
										]
										[
											a bt:Sequence ;
											bt:hasChildren (
																:UpdateBehaviorRunning
																:ConditionLSRPopulated
																[
																	a bt:Priority ;
																	bt:hasChildren ([
																						a bt:Sequence ;
																						bt:hasChildren (
																										:ConditionLARPopulated	
																										:UpdateCreateHeaderDispatcherMessage
																										:MessageSendAgentReadiness
																										:UpdateDeleteBehaviorRunning
																										#:DeleteHeaderDispatcherMessageinLAKR
																										)																															
																					]
																					:EventProducerPopulateLAR
																					)																												
																]
															)
										]
										:EventProducerPopulateLSR									
									)																														
	] .
			
:ProcessSpeechActsBehavior
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Process Speech Acts BT" ;
	bt:hasChild [
					a bt:Sequence ;
					bt:hasChildren (
										[
											a bt:Priority ;
											bt:hasChildren (
																[
																	a bt:Invert ;
																	bt:hasChild 
																				:EventSpeaktoavatar
																]
																[
																	a bt:Sequence ;
																	bt:hasChildren (
																						:UpdateBehaviorRunning
																						:WriteAgentNameinExecution
																						[
																							a bt:IsSucceeding ;
																							bt:hasChild 	
																										:DeletePreviousDIPinExecution
																						]
																						:UpdateCreateOpeningDIPPart1
																						:UpdateCreateOpeningDIPPart2
																						:UpdateCreateOpeningDIPPart3
																						:SendDIPtoKMS
																						:UpdateExecutionDeleteDIP
																					)
																]
															)																														
										]
										[
											a bt:Priority ;
											bt:hasChildren (
																[
																	a bt:Invert ;
																	bt:hasChild 
																				:EventDIP_OR_ServiceRequest
																]
																[
																	a bt:Priority ;
																	bt:hasChildren (
																						[
																							a bt:Priority ;
																							bt:hasChildren (
																												[
																													a bt:Sequence ;
																													bt:hasChildren (
																																		:UpdateBehaviorRunning																																		
																																		[
																																			a bt:IsSucceeding ;
																																			bt:hasChild 	
																																						:DeletePreviousDIPinExecution
																																						
																																		]
																																		:WriteActiveDIPinExecution
																																		:ConditionDIPIncomplete
																																		:UpdateIncompleteDIP
																																		:EventProducerSpecificBTDIPIncomplete
																																	)
																												]
																												[
																													a bt:Sequence ;
																													bt:hasChildren (
																																		:ConditionDIPComplete
																																		:UpdateCompleteDIP
																																		[
																																			a bt:Priority ;
																																			bt:hasChildren (
																																								[
																																									a bt:Sequence ;
																																									bt:hasChildren (
																																														:ConditionDIPIsNotOpening
																																														:EventProducerSpecificBTDIPComplete
																																													)
																																								]
																																								[
																																									a bt:Sequence ;
																																									bt:hasChildren (
																																														:ConditionalNoServiceRequest
																																														:DeleteActiveDIPinAgentKB
																																														:WriteAgentNameinExecution
																																														[
																																															a bt:IsSucceeding ;
																																															bt:hasChild 	
																																																		:DeletePreviousDIPinExecution
																																														]
																																														:CreateClosingUponFailureNoRequest
																																														:SendDIPtoKMS
																																													)
																																								]
																																							)
																																		]
																																	)
																												]
																											)
																						]
																						[
																							a bt:Priority ;
																							bt:hasChildren (
																												[
																													a bt:Sequence ;
																													bt:hasChildren (
																																		:ConditionServiceRequest
																																		[
																																			a bt:IsSucceeding ;
																																			bt:hasChild 	
																																					:DeletePreviousServiceRequestinExecution
																																		]																																		
																																		:WriteServiceRequestinExecution
																																		[
																																			a bt:Priority ;
																																			bt:hasChildren (
																																								[
																																									a bt:Sequence ;
																																									bt:hasChildren (
																																														:InvokeMatchmaker
																																														:ConditionMatchmakerOutput
																																														:PDDL2SPARQLPlugin
																																														[
																																															a bt:Priority ;
																																															bt:hasChildren (
																																																				[
																																																					a bt:Sequence ;
																																																					bt:hasChildren (
																																																										:ConditionPreconditionHolds	
																																																										[
																																																											a bt:Priority ;
																																																											bt:hasChildren (
																																																																[
																																																																	a bt:Sequence ;
																																																																	bt:hasChildren (
																																																																						:ConditionAtomicService
																																																																						:CreateAtomicServiceDIP
																																																																					)																														
																																																																]	
																																																																[
																																																																	a bt:Sequence ;
																																																																	bt:hasChildren (
																																																																						:ConditionComposedService
																																																																						:CreateComposedServiceDIP
																																																																					)																														
																																																																]	
																																																															)																														
																																																										]																						
																																																										:WriteSSCResultinAgentKB
																																																										:EventProducerFirstInteractionMove
																																																									)																														
																																																				]
																																																				:EventProducerAlternativeFirstInteractionMove																																		
																																																			)																														
																																														]
																																													)
																																								]																					
																																								[
																																									a bt:Sequence ;
																																									bt:hasChildren (
																																														:InvokePlanner
																																														:ConditionPlannerOutput
																																														:SendPlanDIPKMS	
																																													)																														
																																								]
																																							)
																																		]
																																	)																														
																												]
																												[
																													a bt:Sequence ;
																													bt:hasChildren (
																																		:WriteAgentNameinExecution
																																		:DeleteActiveDIPinAgentKB
																																		[
																																			a bt:IsSucceeding ;
																																			bt:hasChild 	
																																						:DeletePreviousDIPinExecution
																																		]
																																		:CreateClosingUponFailureNoRequest
																																		:SendDIPtoKMS
																																	)																														
																												]																					
																											)																														
																						]
																					)
																]
															)																														
										]										
										[
											a bt:Priority ;
											bt:hasChildren (
																[
																	a bt:Invert ;
																	bt:hasChild 
																				:EventDefaultStatementNoOpinion
																]
																[
																	a bt:Sequence ;
																	bt:hasChildren (
																						:UpdateBehaviorRunning
																						:DeleteActiveDIPinAgentKB
																						:WriteAgentNameinExecution
																						[
																							a bt:IsSucceeding ;
																							bt:hasChild 	
																										:DeletePreviousDIPinExecution
																						]
																						:CreateClosingUponFailureInternalErrorPart1
																						:CreateClosingUponFailureInternalErrorPart2
																						:SendDIPtoKMS
																					)
																]
															)																														
										]
									)
				] .

:SpecificFirstReceptionBT
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Specific First Reception Behavior Tree" ;
	bt:hasChild [
		a bt:Priority ;
		bt:hasChildren (							
							[
								a bt:Sequence ;
								bt:hasChildren (
													:EventHandlerGenericFirstInteractionMove
													:UpdateBehaviorRunning
													:DeletePrecondition
													[
														a bt:IsSucceeding ;
														bt:hasChild 	
																	:DeleteActiveDIPinExecution
													]
													:WriteFirstInteractionFlaginExecution
													:DeleteFirstInteractionFlaginLAKR
													:DeleteActiveDIPinAgentKB
													[
														a bt:Priority ;
														bt:hasChildren (
																			[
																				a bt:Sequence ;
																				bt:hasChildren (
																									:ConditionalServiceFirstInteraction
																									:WriteObtainRegistrationStatus2Execution
																									#:DeleteObtainRegistrationStatusinLAKR
																									:SendDIPtoKMS
																								)																														
																			]
																			[
																				a bt:Sequence ;
																				bt:hasChildren (
																									:WriteAgentNameinExecution
																									[
																										a bt:IsSucceeding ;
																										bt:hasChild 	
																													:DeletePreviousDIPinExecution
																									]
																									:UpdateCreateInformContactNGO																									
																									:SendDIPtoKMS
																								)																														
																			]																																		
																		)																														
													]
													:DeleteFirstInteractionFlaginExecution													
												)																														
							]
							[
								a bt:Priority ;
								bt:hasChildren (
													[
														a bt:Invert ;
														bt:hasChild [
																		a bt:Sequence ;
																		bt:hasChildren (
																					:EventHandlerSpecificBT
																					:UpdateBehaviorRunning
																					:DeletePreviousFlaginExecution
																					:WriteSpecificBTFlaginExecution
																					:DeleteSpecificBTFlag																					
																					[
																						a bt:IsSucceeding ;
																						bt:hasChild 	
																									:DeleteActiveDIPinExecution
																					]
																					:WriteActiveDIPinExecution
																					:DeleteActiveDIPinAgentKB																																				
																		)																														
																	]
													]
													[
														a bt:Priority ;
														bt:hasChildren (
																			[
																				a bt:Sequence ;
																				bt:hasChildren (
																									:ConditionalFlagIncomplete
																									:ConditionalDIPIncompleteOrMultiple
																									:UpdateCreateHeaderDMSMessage
																									:SendIncompleteOrMultipleDIPDMS
																									:DeleteHeaderDMSMessage
																									:UpdateDeleteBehaviorRunning
																								)																														
																			]			
																			[
																				a bt:Priority ;
																				bt:hasChildren (
																									[
																										a bt:Sequence ;
																										bt:hasChildren (
																															:ConditionalInformRegistrationServiceComplete
																															:EventProducerNormalClosingScenario
																														)																														
																									]
																									[
																										a bt:Sequence ;
																										bt:hasChildren (
																														:ConditionalFillFormCourseDIPComplete
																														:UpdateCreateHeaderAppNotificationMessage
																														:SendNotification2App
																														:DeleteHeaderAppNotificationMessage
																														)																														
																									]
																									[
																										a bt:Sequence ;
																										bt:hasChildren (
																															:ConditionalNormalClosingComplete
																															:SucessFinishScenario
																														)																														
																									]
																									[
																										a bt:Sequence ;
																										bt:hasChildren (
																															[
																																a bt:Priority ;
																																bt:hasChildren (
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalObtainRegistrationStatusCompleteAndYesAnswer	
																																											:WriteProposeService2Execution																			
																																											:WriteSSCResultinExecution
																																											:UpdateProposeService
																																											:DeleteSSCResultinAgentKB
																																											:DeleteSSCResultinLSR
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalObtainRegistrationStatusCompleteAndNotAnswer
																																											:WriteObtainRegistrationServiceInfo2Execution
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalProposeServiceCompleteAndYes
																																											:WriteInformFirstReception2Execution
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalProposeServiceCompleteAndNot
																																											:WriteAgentNameinExecution
																																											:UpdateCreateInformContactNGO	
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalObtainRegistrationServiceInfoComplete
																																											:WriteInformRegistrationService2Execution
																																											:DeletePreviousRegistrationOfficesinExecution
																																											[
																																												a bt:Priority ;
																																												bt:hasChildren (
																																																	[
																																																		a bt:Sequence ;
																																																		bt:hasChildren (
																																																							:ConditionalCoordinateExists
																																																							:WriteCoordinatesinExecution
																																																							:InvokeClosestDistancePlugin
																																																						)																														
																																																	]
																																																	:WriteDefaultOfficeinExecution
																																																)																														
																																											]
																																											:UpdateInformRegistrationServiceDIP
																																										)																														
																																					]																															
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalInformFirstReceptionServiceCompleteAndYesAnswer
																																											:WritePersonalInfoDIP2Execution
																																										)																														
																																					]							
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalPersonalInfoComplete
																																											:WriteAddressInfoDIP2Execution
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalAddressInfoDIPComplete
																																											:WriteFillFormOtherDIP2Execution
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalFillFormOtherDIPComplete
																																											:WriteFillFormModulesDIP2Execution
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:ConditionalFillFormModulesDIPComplete
																																											:WriteFillFormCourseDIP2Execution
																																										)																														
																																					]
																																					[
																																						a bt:Sequence ;
																																						bt:hasChildren (
																																											:WriteAgentNameinExecution
																																											[
																																												a bt:IsSucceeding ;
																																												bt:hasChild 	
																																															:DeletePreviousDIPinExecution
																																															
																																											]
																																											:CreateClosingUponFailureInternalErrorPart1
																																											:CreateClosingUponFailureInternalErrorPart2
																																										)																														
																																					]
																																				)																														
																															]
																															:SendDIPtoKMS
																														)																														
																									]
																								)
																			]																	
																		)																														
													]													
												)																														
							]
						)
				] .	

:CloseScenarioBT
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Specific First Reception Closing Behavior Tree" ;
	bt:hasChild [
		a bt:Sequence ;
		bt:hasChildren (
							[
								a bt:Priority ;
								bt:hasChildren (
													:EventHandlerNormalClosingScenario
													:EventHandlerAlternativeClosingScenario
												)
							]												
							:UpdateBehaviorRunning
							[
								a bt:IsSucceeding ;
								bt:hasChild 	
											:DeleteActiveDIPinExecution
							]
							:DeleteActiveDIPinAgentKB	
							:WriteAgentNameinExecution
							:UpdateCreateNormalClosingPart1
							:UpdateCreateNormalClosingPart2
							:SendDIPtoKMS
						)	
	].
	
:AgentShutdown
	a bt:BehaviorTree ;
	a bt:Root ;
	rdfs:label "Agent Shutdown Behavior Tree" ;
	bt:hasChild [
		a bt:Sequence ;
		bt:hasChildren (
							:EventHandlerShutdown
							[
								a bt:Priority ;
								bt:hasChildren (
													[
														a bt:Sequence ;
														bt:hasChildren (
																			:ConditionAgentRunningBT
																			:UpdateAgentRunningYes																			
																		)																														
													]
													:UpdateAgentRunningNot
												)																														
							]
							:MessageSendShutdownNotification
						)
				] .
			
# -------------------------------------------	
# ----------- Standard Primitives -----------
# -------------------------------------------	

#=============================================================================================
# InitialBT

:UpdateBehaviorRunning
	a bt:Update ;
	rdfs:label "Update: Write agentRunning Flag in the LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>									

					INSERT {
						?agent welcome:hasBTRunning "true"^^xsd:boolean .
					}
					 WHERE {
						?agent rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .

:UpdateDeleteBehaviorRunning
	a bt:Update ;
	rdfs:label "Update: Delete agentRunning Flag in the LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	

					DELETE {
						?agent welcome:hasBTRunning ?val .
					}
					 WHERE {
						?agent rdf:type ajan:Agent .
						?agent welcome:hasBTRunning ?val .
					}"""^^xsd:string ;
		]) .
		
:ConditionLARPopulated
	a bt:Condition ;
	rdfs:label "Condition: LAR initialized?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:LocalAgentsKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					ASK
					WHERE {
						?agent rdf:type ajan:Agent .
						?agent ?p ?o .	
					}"""^^xsd:string ;
		]) .

:EventProducerPopulateLAR
	a bt:EventProducer ;
	rdfs:label "EventProducer: Request Populate LAR" ;
	ajan:event agents:PopulateLAREvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:needsPopulateLAR "localRepo" .
						}
						WHERE {
							?s rdf:type ajan:Agent .
						}"""^^xsd:string ;
				] .	

:ConditionLSRPopulated
	a bt:Condition ;
	rdfs:label "Condition: LSR initialized?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
					ASK
					WHERE {
						?service rdf:type service:Service.	
					}"""^^xsd:string ;
		]) .
		
:EventProducerPopulateLSR
	a bt:EventProducer ;
	rdfs:label "EventProducer: Request Populate LSR" ;
	ajan:event agents:PopulateLSREvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:needsPopulateLSR "localRepo" .
							<http://mycontext> <http://www.ajan.de/behavior/bt-ns#rdfContext> <http://localhost:8090/rdf4j/repositories/agents#PopulateLSREvent> .
						}
						WHERE {
							?s rdf:type ajan:Agent .
						}"""^^xsd:string ;
				] .	

#=============================================================================================
# FinalBT

:DeleteTemporalFlagsinLAKR
	a bt:Update ;
	rdfs:label "Update: Delete Flags in LAKR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					DELETE {
						?MatchmakerOffer welcome:hasPrecondition ?precondition .
						?MatchmakerResult ssc:hasServiceName ?servName .	
						?agent welcome:hasBTRunning ?val .
						?query welcome:hasPreconditionResult ?preconVal .
						welcome:myWelcomeAgent welcome:hasFirstMove ?result .
						?bt welcome:hasActiveDIP ?id .	
						?dip welcome:hasNamedGraph ?dipGraph .
					}
					 WHERE {
						?s ?o ?p .
						OPTIONAL {
							{?MatchmakerOffer welcome:hasPrecondition ?precondition .}
							UNION
							{?MatchmakerResult ssc:hasServiceName ?servName .}	
							UNION
							{?agent welcome:hasBTRunning ?val .}
							UNION
							{?query welcome:hasPreconditionResult ?preconVal .}
							UNION
							{welcome:myWelcomeAgent welcome:hasFirstMove ?result .}
							UNION
							{?bt welcome:hasActiveDIP ?id .}
							UNION
							{?dip welcome:hasNamedGraph ?dipGraph .}
						}
					}					
					"""^^xsd:string ;
		]) .
		
:DeleteTemporalFlagsinLSR
	a bt:Update ;
	rdfs:label "Update: Delete Flags in LSR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					DELETE {
						?ssc ssc:hasResultOffer ?MatchmakerOffer .	
					}
					WHERE {
						?s ?o ?p .
						OPTIONAL {
							?ssc ssc:hasResultOffer ?MatchmakerOffer .	
						}
					}					
					"""^^xsd:string ;
		]) .

#=============================================================================================
# HeartbeatMonitoringBT

:AgentMonitoringHandleEvent
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Heartbeat Monitoring" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#AgentMonitoringEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:ExecutionKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>	
						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE { 
							?s ?p ?o .				
						}"""^^xsd:string ;
				] .
				
#=============================================================================================
# PopulateReposBT
																
:EventHandlerRequestLSRTriples
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Request Populate LSR" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#PopulateLSREvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:needsPopulateLSR "localRepo" .
						}
						WHERE { 
							welcome:myWelcomeAgent welcome:needsPopulateLSR "localRepo" .				
						}"""^^xsd:string ;
				] .

:MessageSendLSRMessageWPM
	a bt:Message ;
	rdfs:label "Message: Request KBS populate LSR" ;
	rdfs:comment "Message: Request KBS populate LSR" ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?fieldValue
				WHERE {
						?headerName welcome:hasHeaderName ?hdrName .
						?headerName welcome:hasHeaderValue ?fieldValue .
				}"""^^xsd:string
		] ;	
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "application/trig"
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;			
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:AgentKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>	
						CONSTRUCT {					
							?agent rdf:type ajan:Agent .
						}
						WHERE {
							?agent rdf:type ajan:Agent .					
						}"""^^xsd:string
		  ]
		] ;    
	] ;
	bt:queryUri [
	a bt:SelectQuery ;
	a bt:QueryUri ;
	bt:originBase ajan:AgentKnowledge ;
	bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
				SELECT ?requestURI 
				WHERE
				{
				  welcome:dispatcher welcome:hasAddress ?partialAddress .
				  BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/globalRepository?repository=wsr") AS ?requestURI )
				}"""^^xsd:string
	] . 
#	bt:queryUri [
#	a bt:SelectQuery ;
#	a bt:QueryUri ;
#	bt:originBase ajan:AgentKnowledge ;  
#	bt:sparql """
#				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#				SELECT ?requestURI 
#				WHERE
#				{
#				  welcome:dispatcher welcome:hasAddress ?partialAddress .
#				  BIND(CONCAT(STR(?partialAddress), "/kms/receiveDIP") AS ?requestURI )
#				}"""^^xsd:string
#	] .

:DefaultFailed
	a bt:Fail ;
	rdfs:label "Default Fail - Successful Request to KBS"^^xsd:string .
	
:EventHandlerRequestLARTriples
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Request Populate LAR" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#PopulateLAREvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """						
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:needsPopulateLAR "localRepo" .
						}
						WHERE { 
							welcome:myWelcomeAgent welcome:needsPopulateLAR "localRepo" .
						}"""^^xsd:string ;
				] .

:MessageSendLARMessageWPM
	a bt:Message ;
	rdfs:label "Message: Request KBS populate LAR" ;
	rdfs:comment "Message: Request KBS populate LAR" ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?fieldValue
				WHERE {
						?headerName welcome:hasHeaderName ?hdrName .
						?headerName welcome:hasHeaderValue ?fieldValue .
				}"""^^xsd:string
		] ;	
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/turtle"
				]
		) ;			
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:AgentKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>	
						CONSTRUCT {					
							?agent rdf:type ajan:Agent .
						}
						WHERE {
							?agent rdf:type ajan:Agent .					
						}"""^^xsd:string
		  ]
		] ;    
	] ;
	bt:queryUri [
	a bt:SelectQuery ;
	a bt:QueryUri ;
	bt:originBase ajan:AgentKnowledge ;
	bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
				SELECT ?requestURI 
				WHERE
				{
				  welcome:dispatcher welcome:hasAddress ?partialAddress .
				  BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/globalRepository?repository=war") AS ?requestURI )
				}"""^^xsd:string
	] . 
#	bt:queryUri [
#	a bt:SelectQuery ;
#	a bt:QueryUri ;
#	bt:originBase ajan:AgentKnowledge ;  
#	bt:sparql """
#				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#				SELECT ?requestURI 
#				WHERE
#				{
#				  welcome:dispatcher welcome:hasAddress ?partialAddress .
#				  BIND(CONCAT(STR(?partialAddress), "/kms/receiveDIP") AS ?requestURI )
#				}"""^^xsd:string
#	] .

:EventHandlerReceiveLocalServices
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Receive Local Services" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#ReceiveLocalServicesEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:ExecutionKnowledge ;
					bt:sparql """"""^^xsd:string ;
				] .

#:ConditionNoAgentPopulation
#	a bt:Condition ;
#	rdfs:label "Condition: Agent Population?" ;
#	bt:query ( [
#		a bt:AskQuery ;
#		bt:originBase ajan:ExecutionKnowledge ;
#		bt:sparql """
#					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
#					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
#					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#					PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
#					ASK
#					WHERE {
#						?agentName rdf:type ajan:Agent .
#					}"""^^xsd:string ;
#		]) .
		
:RemoveLSRContent
	a bt:Update ;
	rdfs:label "Update: Remove LSR Content" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					DELETE {
						?s ?o ?p .
					}
					 WHERE {
						?s ?o ?p .
					}					
					"""^^xsd:string ;
		]) .

:UpdateLSRAgentKnowledge
	a bt:Update ;
	rdfs:label "Delete LSR Agent Knowledge" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				DELETE {
					?agent welcome:knowsLocalServices ajan:LocalServicesKnowledge .	
				}
				INSERT {
					?agent welcome:needsPopulateLSR "localRepo" .
				}
				WHERE {
					?agent rdf:type ajan:Agent .
				}		"""^^xsd:string ;
		]) .
		
#:WriteTriplesLSR
#	a bt:Write ;
#	rdfs:label "Write Triples in LSR" ;
#	bt:query [
#		a bt:ConstructQuery ;
#		bt:originBase ajan:ExecutionKnowledge ;
#		bt:targetBase ajan:LocalServicesKnowledge ;
#		bt:sparql """
#			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
#			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
#			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
#			PREFIX owl: <http://www.w3.org/2002/07/owl#>
#			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
#			CONSTRUCT  {
#			  ?s ?o ?p .
#			}
#			WHERE { 
#			  SELECT DISTINCT ?s ?o ?p 
#			  WHERE {
#				?s ?o ?p .
#				?a rdf:type service:Service .
#			  }
#			} """^^xsd:string ;
#	] .

:PluginOWL2PDDL
	a ssc:PDDLConverter ;
	rdfs:label "Plugin: Create PDDL Domain File" ;
	ssc:LocalServicesTriples [
				a bt:SelectQuery ;
				bt:originBase ajan:LocalServicesKnowledge ;
				bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				SELECT ?s ?o ?p ?g
				WHERE {
					{ GRAPH ?g { ?s ?o ?p } }
				}"""^^xsd:string ;
			] .	

:UpdateAgentKnowsLSR
	a bt:Update ;
	rdfs:label "Update: Agent Knows LSR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>					
					DELETE {
						welcome:myWelcomeAgent welcome:needsPopulateLSR "localRepo" .
					}
					INSERT {
						?agent welcome:knowsLocalServices ajan:LocalServicesKnowledge .	
					}
					WHERE {
						?agent rdf:type ajan:Agent .
					}					
					"""^^xsd:string ;
		]) .

:WriteTriplesLSRC1
	a bt:Write ;
	rdfs:label "Write Triples in LSR for C1" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:LocalServicesKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
                    CONSTRUCT {
                        ?s ?p ?o .
            <http://mycontext1> <http://www.ajan.de/behavior/bt-ns#rdfContext> <file://C:/fakepath/FirstReceptionService.owl> .
                    }

                        WHERE { GRAPH <file://C:/fakepath/FirstReceptionService.owl> {?s ?p ?o .} } """^^xsd:string ;
	] .

:WriteTriplesLSRC2
	a bt:Write ;
	rdfs:label "Write Triples in LSR for C2" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:LocalServicesKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
                    CONSTRUCT {
                        ?s ?p ?o .
            <http://mycontext2> <http://www.ajan.de/behavior/bt-ns#rdfContext> <file://C:/fakepath/RegistrationService.owl> .
                    }

                        WHERE { GRAPH <file://C:/fakepath/RegistrationService.owl> {?s ?p ?o .} } """^^xsd:string ;
	] .

:UpdateLSRExecutionKnowledge
	a bt:Update ;
	rdfs:label "Update: LSR in Execution Knowledge" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 	
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
			PREFIX owl: <http://www.w3.org/2002/07/owl#>
			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
			DELETE {
				?s ?p ?o .
			}WHERE {
				?s ?p ?o .
			}"""^^xsd:string ;
		]) .
		
:EventHandlerReceiveLocalAgents
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Receive Local Agents" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#ReceiveLocalAgentsEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:ExecutionKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>	
						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE {
							?s ?p ?o .
						}"""^^xsd:string ;
				] .
				
:RemoveLARContent
	a bt:Update ;
	rdfs:label "Update: Remove LAR Content" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:LocalAgentsKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					DELETE {
						?s ?o ?p .
					}
					WHERE {
						?s ?o ?p .
					}					
					"""^^xsd:string ;
		]) .

:UpdateLARAgentKnowledge
	a bt:Update ;
	rdfs:label "Delete LAR Agent Knowledge" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
				PREFIX ajan: <http://www.ajan.de/ajan-ns#>
				DELETE {
					?agent welcome:knowsLocalAgents ?repoName .	
				}
				INSERT {
					?agent welcome:needsPopulateLAR "localRepo" .
				}				
				WHERE {
					?agent rdf:type ajan:Agent .
				}"""^^xsd:string ;
		]) .

:WriteTriplesLAR
	a bt:Write ;
	rdfs:label "Write Triples in LAR" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:targetBase ajan:LocalAgentsKnowledge ;
		bt:sparql """
			PREFIX ajan: <http://www.ajan.de/ajan-ns#>
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			CONSTRUCT { 
				?s ?p ?o .
				?s rdf:type ajan:Agent .
			} WHERE  {
				?s ?p ?o .
				?s rdf:type ajan:Agent .
			}"""^^xsd:string ;
	] .
	
:UpdateAgentKnowsLAR
	a bt:Update ;
	rdfs:label "Update: Agent Knows LAR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>					
					DELETE {
						welcome:myWelcomeAgent welcome:needsPopulateLAR "localRepo" .
					}
					INSERT {
						?agent welcome:knowsLocalAgents ajan:LocalAgentsKnowledge .	
					}
					 WHERE {
						?agent rdf:type ajan:Agent .
					}					
					"""^^xsd:string ;
		]) .
		
:UpdateLARExecutionKnowledge
	a bt:Update ;
	rdfs:label "Update: LAR in Execution Knowledge" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>	
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 					
					DELETE {
						?s ?p ?o .
						?s rdf:type ajan:Agent.
					} WHERE { 						
						?s ?p ?o .
						?s rdf:type ajan:Agent .
						
					}"""^^xsd:string ;
		]) .
		
#=============================================================================================
# HandshakeBT

:EventHandlerHandshake
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Handshake" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#ReceiveHandshakeEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
						CONSTRUCT {
							?sub rdf:type welcome:Handshaking .
						}
						WHERE { 
							?sub rdf:type welcome:Handshaking .
							?s ?p ?o .
						} """^^xsd:string ;
				] .

:UpdateCreateHeaderDispatcherMessage
	a bt:Update ;
	rdfs:label "Update: Header Dispatcher Message" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE{
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?id .
					}
					INSERT {
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?id .						
					} 
					WHERE { 
						?msg welcome:hasCorrelationID ?correlationID .
						?du rdf:type welcome:DialogueUser .
						?du welcome:hasUserId ?id .
					}
					"""^^xsd:string ;
		]) .
		
:MessageSendAgentReadiness
	a bt:Message ;
	rdfs:label "Message: Send Agent Readiness to App - Handshake"^^xsd:string ;
	rdfs:comment "Message: Send Agent Readiness to App - Handshake"^^xsd:string ;
	bt:targetBase ajan:AgentKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?fieldValue
				WHERE {
						?headerName welcome:hasHeaderName ?hdrName .
						?headerName welcome:hasHeaderValue ?fieldValue .
				}"""^^xsd:string
		] ;	
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle"
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				]
		) ;			
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:AgentKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>		
						CONSTRUCT {
							?agent welcome:hasMessage "is ready" .
						}
						WHERE {
							?agent rdf:type ajan:Agent .
						}"""^^xsd:string
		  ]
		] ;    
	] ;
	bt:queryUri [
	a bt:SelectQuery ;
	a bt:QueryUri ;
	bt:originBase ajan:AgentKnowledge ;
	bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
				SELECT ?requestURI 
				WHERE
				{
			  welcome:dispatcher welcome:hasAddress ?partialAddress .
				  BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/handshake") AS ?requestURI )
				}"""^^xsd:string
	] . 
#	bt:queryUri [
#	a bt:SelectQuery ;
#	a bt:QueryUri ;
#	bt:originBase ajan:AgentKnowledge ;  
#	bt:sparql """
#				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#				SELECT ?requestURI 
#				WHERE
#				{
#				  welcome:dispatcher welcome:hasAddress ?partialAddress .
#				  BIND(CONCAT(STR(?partialAddress), "/dms/receiveDIP") AS ?requestURI )
#				}"""^^xsd:string
#	] .
  
:DeleteHeaderDispatcherMessageinLAKR
	a bt:Update ;
	rdfs:label "Update: Delete Header Dispatcher Message in LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?userID .						
					} 
					WHERE { 
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?userID .
					}
					"""^^xsd:string ;
		]) .
#=============================================================================================
# ProcessSpeechActsBehavior

:EventSpeaktoavatar
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Speak to Avatar" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#SpeakAvatarEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:ExecutionKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
						CONSTRUCT {						    
							welcome:TCN_SpeakToAvatar rdf:type welcome:speakToAvatar .
						}
						WHERE { 
							welcome:TCN_SpeakToAvatar rdf:type welcome:speakToAvatar .
						}"""^^xsd:string ;
				] .

:WriteAgentNameinExecution
	a bt:Write ;
	rdfs:label "Write: Agent Name in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 	
			PREFIX ajan: <http://www.ajan.de/ajan-ns#>
			CONSTRUCT  {
				?agentName rdf:type ajan:Agent .
			}
			WHERE { 
				?agentName rdf:type ajan:Agent .
			} """^^xsd:string ;
	] .
	
:UpdateCreateOpeningDIPPart1
	a bt:Update ;
	rdfs:label "Update: Create Opening DIP 1" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 					
					INSERT {
						welcome:Opening rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .	
						welcome:Opening welcome:hasDIPStatus welcome:Unknown .
						welcome:Opening welcome:isCurrentDIP "true"^^xsd:boolean . 
						welcome:Opening welcome:hasSlot welcome:confirmCommunication .
						welcome:confirmCommunication rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#SystemDemand"^^xsd:anyURI .
						welcome:confirmCommunication welcome:hasOntologyType xsd:boolean .
						welcome:confirmCommunication welcome:hasTemplateId "TConfirmCommunication"^^xsd:string .
						welcome:confirmCommunication welcome:hasInputRDFContents welcome:Unknown .
						welcome:confirmCommunication welcome:hasTCNAnswer welcome:Unknown .
						welcome:confirmCommunication welcome:hasStatus welcome:Pending .
						welcome:confirmCommunication welcome:hasNumberAttempts 0 .
						welcome:confirmCommunication welcome:confidenceScore "0.0"^^xsd:float .
						welcome:confirmCommunication welcome:isOptional "false"^^xsd:boolean .
					} 
					WHERE { 
						?agentName rdf:type ajan:Agent .
					}
					"""^^xsd:string ;
		]) .

:UpdateCreateOpeningDIPPart2
	a bt:Update ;
	rdfs:label "Update: Create Opening DIP Part 2" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					INSERT {
						welcome:Opening welcome:hasSlot welcome:confirmLanguage .
						welcome:confirmLanguage rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#SystemDemand"^^xsd:anyURI .
						welcome:confirmLanguage	welcome:hasOntologyType "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#Language"^^xsd:anyURI .
						welcome:confirmLanguage welcome:hasTemplateId "TConfirmLanguage"^^xsd:string .
						welcome:confirmLanguage	welcome:hasInputRDFContents welcome:Unknown .
						welcome:confirmLanguage welcome:hasTCNAnswer welcome:Unknown .
						welcome:confirmLanguage	welcome:hasStatus welcome:Pending .
						welcome:confirmLanguage	welcome:hasNumberAttempts 0 .
						welcome:confirmLanguage	welcome:confidenceScore "0.0"^^xsd:float .
						welcome:confirmLanguage	welcome:isOptional "false"^^xsd:boolean .			
					} 
					WHERE { 
						?agentName rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .

:UpdateCreateOpeningDIPPart3
	a bt:Update ;
	rdfs:label "Update: Create Opening DIP Part 3" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					INSERT {
						welcome:Opening welcome:hasSlot welcome:obtainRequest .
						welcome:obtainRequest rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#SystemDemand"^^xsd:anyURI .
						welcome:obtainRequest welcome:hasOntologyType "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#ServiceRequest"^^xsd:anyURI .
						welcome:obtainRequest welcome:hasTemplateId "TObtainMatterConcern"^^xsd:string .
						welcome:obtainRequest welcome:hasStatus welcome:Pending .
						welcome:obtainRequest welcome:hasNumberAttempts 0 .
						welcome:obtainRequest welcome:confidenceScore "0.0"^^xsd:float .	
						welcome:obtainRequest welcome:hasInputRDFContents welcome:Unknown .
						welcome:obtainRequest welcome:hasTCNAnswer welcome:Unknown .
						welcome:obtainRequest welcome:isOptional "false"^^xsd:boolean .					
					} 
					WHERE { 
						?agentName rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .
		
:SendDIPtoKMS
	a bt:Message ;
	rdfs:label "Message: Send DIP to KMS"^^xsd:string ;
	rdfs:comment "Message: Send DIP to KMS"^^xsd:string ;
	bt:targetBase ajan:ExecutionKnowledge ;  
	bt:headers [
		  a bt:SelectQuery;
		  a bt:QueryUri ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					SELECT ?hdrName ?fieldValue
					WHERE {
						VALUES (?hdrName ?fieldValue) {							
								("content-type" "text/plain")							
								("accept" "text/turtle;charset=UTF-8")
						}
					}"""^^xsd:string
		] ;
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle;charset=UTF-8"
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "text/plain"
				]
	   ) ;	
	  http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>
						CONSTRUCT {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .	
							?dip welcome:hasDIPStatus ?status .
							?dip welcome:isCurrentDIP ?isCurrentValue .
							?dip welcome:belongsTo ?someService . 
							?dip welcome:hasSlot ?slotDIP .
							?slotDIP rdf:type ?slotType .
							?slotDIP welcome:hasOntologyType ?slotOntoType .
							?slotDIP welcome:hasInputRDFContents ?slotRDFContents .
							?slotRDFContents ?reifiRDFContentsPred ?reifiRDFContentsObj .
							?slotDIP welcome:hasStatus ?slotStatus .
							?slotDIP welcome:hasNumberAttempts ?NbAttempts .
							?slotDIP welcome:confidenceScore ?confScore .
							?slotDIP welcome:isOptional ?opt .
							?slotDIP welcome:hasTemplateId ?templateID .
							?slotDIP welcome:hasTCNAnswer welcome:Unknown .
						}
						WHERE {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .	
							?dip welcome:hasDIPStatus ?status .
							?dip welcome:isCurrentDIP ?isCurrentValue .
							OPTIONAL { ?dip welcome:belongsTo ?someService . }
							?dip welcome:hasSlot ?slotDIP .
							?slotDIP rdf:type ?slotType .
							?slotDIP welcome:hasOntologyType ?slotOntoType .							
							OPTIONAL { 
								{
									?slotDIP welcome:hasInputRDFContents ?slotRDFContents .
									?slotRDFContents ?reifiRDFContentsPred ?reifiRDFContentsObj .
								}
								UNION
								{
									?slotDIP welcome:hasInputRDFContents ?slotRDFContents .
								}
							}
							?slotDIP welcome:hasStatus ?slotStatus .
							?slotDIP welcome:hasNumberAttempts ?NbAttempts .
							?slotDIP welcome:confidenceScore ?confScore .
							?slotDIP welcome:isOptional ?opt .
							OPTIONAL { ?slotDIP welcome:hasTemplateId ?templateID . }
							OPTIONAL {?slotDIP welcome:hasTCNAnswer ?tcnAnswer .}
						}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
		a bt:SelectQuery ;
		a bt:QueryUri ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					SELECT ?requestURI
					WHERE {
					  welcome:KMS welcome:hasURI ?requestURI .
					}"""^^xsd:string
	] .

:UpdateExecutionDeleteDIP
	a bt:Update ;
	rdfs:label "Update: Delete DIP from Execution" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>								
					DELETE {
						?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						?dip welcome:hasDIPStatus ?status .
						?dip welcome:isCurrentDIP "true"^^xsd:boolean .
						?dip welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .
						?slots welcome:hasTCNAnswer ?tcnAnswer .						
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						?slots welcome:hasTemplateId ?templateID .				
					} WHERE { 
						?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						?dip welcome:hasDIPStatus ?status .
						?dip welcome:isCurrentDIP "true"^^xsd:boolean .
						?dip welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {?slots welcome:hasTemplateId ?templateID .}
						OPTIONAL {?slots welcome:hasTCNAnswer ?tcnAnswer .}
					}"""^^xsd:string ;
		]) .

:EventDIP_OR_ServiceRequest
	a bt:HandleEvent ;
	rdfs:label "EventHandler: DIP OR Service Request" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#EventDIPORServiceRequest> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
						CONSTRUCT {								
							?dip welcome:hasNamedGraph ?dipGraph .
							welcome:BT welcome:hasActiveDIP ?dipId .					
						}
						WHERE { 
								?dip welcome:hasNamedGraph ?dipGraph .
								?dip welcome:DIPId ?dipId .
						}"""^^xsd:string ;
				] .

:DeletePreviousDIPinExecution
	a bt:Update ;
	rdfs:label "Update: Delete Previous DIP in Execution" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>
					DELETE {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							?dip welcome:hasSlot ?slot .
							?dip welcome:DIPId ?dipid .
							?dip welcome:isCurrentDIP ?current .							
							?slot rdf:type ?slottype .
							?slot welcome:hasInputRDFContents ?rdfcontents .
							?slot welcome:hasOntologyType ?ontotype .
							?slot welcome:hasStatus ?statusslot . 
							?slot welcome:confidenceScore ?scoreslot .
							?slot welcome:hasNumberAttempts ?attp .
							?slot welcome:isOptional ?opt .
							?slot welcome:hasTemplateId ?slottemplate . 
							?slot welcome:hasTCNAnswer ?tcnAnswer . 
							?dip welcome:hasDIPStatus ?statusdip .
							?dipName welcome:hasNamedGraph ?dipGraph . 
							?bt welcome:hasActiveDIP ?dipIdVal .
							?dip welcome:belongsTo ?someService .							
					}
					WHERE {		
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							?dip welcome:hasSlot ?slot .
							?dip welcome:DIPId ?dipid .
							?dip welcome:isCurrentDIP ?current .							
							?slot rdf:type ?slottype .
							?slot welcome:hasInputRDFContents ?rdfcontents .
							?slot welcome:hasOntologyType ?ontotype .
							?slot welcome:hasStatus ?statusslot . 
							?slot welcome:confidenceScore ?scoreslot .
							?slot welcome:hasNumberAttempts ?attp .
							?slot welcome:isOptional ?opt .
							OPTIONAL { ?slot welcome:hasTemplateId ?slottemplate . }
							OPTIONAL { ?slot welcome:hasTCNAnswer ?tcnAnswer . }
							OPTIONAL { ?dip welcome:hasDIPStatus ?statusdip .}
							OPTIONAL { ?dipName welcome:hasNamedGraph ?dipGraph . }
							OPTIONAL { ?bt welcome:hasActiveDIP ?dipIdVal . }
							OPTIONAL { ?dip welcome:belongsTo ?someService .}
					}"""^^xsd:string ;
		]) .

:WriteActiveDIPinExecution
	a bt:Write ;
	rdfs:label "Write: Active DIP in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>			
			CONSTRUCT  {
				?bt welcome:hasActiveDIP ?dipId . 
				?dip welcome:hasNamedGraph ?dipGraph .
				?s ?p ?o .
			}
			WHERE { 
				?bt welcome:hasActiveDIP ?dipId . 
				?dip welcome:hasNamedGraph ?dipGraph .
				{	GRAPH ?dipGraph {?s ?p ?o . }}
			} """^^xsd:string ;
	] .

:ConditionDIPIncomplete
	a bt:Condition ;
	rdfs:label "Condition: DIP Incomplete?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX fn: <http://www.w3.org/2005/xpath-functions#>
					ASK
					WHERE { 
							{
								?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
								?dip welcome:hasSlot ?slot .
								?dip welcome:DIPId ?id .
								?slot welcome:hasStatus ?status .
								?slot welcome:hasNumberAttempts ?NbAtt .
							}
							FILTER (regex(str(?status), "Pending") || regex(str(?status), "FailedAnalysis") || regex(str(?status), "PendingAgreement") || regex(str(?status), "TCNElaborateRequest") || regex(str(?status), "TCNClarifyRequest") || regex(str(?status), "TopicSwitch") || regex(str(?status), "UnclearAnalysis"))
					}"""^^xsd:string ;
		]) .

:UpdateIncompleteDIP
	a bt:Update ;
	rdfs:label "Update: DIP Incomplete" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					DELETE {
						?dip welcome:hasDIPStatus ?statusDIP .	
					} INSERT {
						?dip welcome:hasDIPStatus welcome:Incomplete .
					}
					WHERE {
						?dip welcome:hasNamedGraph ?dipGraph .
						welcome:BT welcome:hasActiveDIP ?dipId .
						GRAPH ?dipGraph {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							OPTIONAL { ?dip welcome:hasDIPStatus ?status . }
							?dip welcome:DIPId ?dipId .
						}					
					}"""^^xsd:string ;
		]) .

:EventProducerSpecificBTDIPIncomplete
	a bt:EventProducer ;
	rdfs:label "EventProducer: Trigger Specific BT - Incomplete DIP" ;
	ajan:event agents:SpecificBTEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:execute "IncompleteDIP" .							
						}
						WHERE {
							?s rdf:type ajan:Agent .
						}"""^^xsd:string ;
				] .	
				
:ConditionDIPComplete
	a bt:Condition ;
	rdfs:label "Condition: DIP Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX fn: <http://www.w3.org/2005/xpath-functions#>
					ASK
					WHERE { 
						{
						?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						?dip welcome:hasSlot ?slot .
						?dip welcome:DIPId ?id .
						?slot welcome:hasStatus ?status .
						?slot welcome:hasNumberAttempts ?NbAtt .
						}
						FILTER (
								  !regex(str(?status), "Pending") && 
								  !regex(str(?status), "FailedAnalysis") && 
								  !regex(str(?status), "PendingAgreement") && 
								  !regex(str(?status), "TCNElaborateRequest") && 
								  !regex(str(?status), "TCNClarifyRequest") && 
								  !regex(str(?status), "TopicSwitch") && 
								  !regex(str(?status), "UnclearAnalysis")
							)
					}"""^^xsd:string ;
		]) .

:UpdateCompleteDIP
	a bt:Update ;
	rdfs:label "Update: DIP Complete" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					DELETE { 
						?dip welcome:hasDIPStatus ?status . 
					} INSERT {
						?dip welcome:hasDIPStatus welcome:Complete .
					}
					WHERE {		
							?dip welcome:hasNamedGraph ?dipGraph .
							welcome:BT welcome:hasActiveDIP ?dipId .
							GRAPH ?dipGraph {
								?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
								OPTIONAL {?dip welcome:hasDIPStatus ?status }.
								?dip welcome:DIPId ?dipId .
							}
					}"""^^xsd:string ;
		]) .

:ConditionDIPIsNotOpening
	a bt:Condition ;
	rdfs:label "Condition: Active DIP is not Opening?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>
					ASK
					WHERE { 
						?dip welcome:hasNamedGraph ?dipGraph .
						?dip welcome:DIPId ?id .  
						?stg welcome:hasActiveDIP ?id . 
						?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						FILTER (
							!(  STRENDS(str(?dip), "#Opening") ||
							    STRENDS(str(?dip), ":Opening") )
						) 
						
					} """^^xsd:string ;
		]) .
		
:EventProducerSpecificBTDIPComplete
	a bt:EventProducer ;
	rdfs:label "EventProducer: Trigger Specific BT - Complete DIP" ;
	ajan:event agents:SpecificBTEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:execute "CompleteDIP" .
						}
						WHERE {
							?s rdf:type ajan:Agent .
						}"""^^xsd:string ;
				] .	

:ConditionalNoServiceRequest
	a bt:Condition ;
	rdfs:label "Condition: No Service Request?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK 
					WHERE { 
							?dip welcome:hasNamedGraph ?dipGraph .
							GRAPH ?dipGraph 
							{
								FILTER NOT EXISTS {
													?container rdf:type welcome:SpeechActContainer .
													?container welcome:hasSpeechActType welcome:Commit .
												  }
							}							
					}"""^^xsd:string ;
		]) .

:CreateClosingUponFailureNoRequest
	a bt:Update ;
	rdfs:label "Update: Create Closing Upon Failure DIP - No Service Request or No SSC output" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 										
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#> 
					INSERT {
						welcome:ClosingUponFailure rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcome:ClosingUponFailure welcome:hasDIPStatus welcome:Unknown .
						welcome:ClosingUponFailure welcome:isCurrentDIP "true"^^xsd:boolean .
						welcome:ClosingUponFailure welcome:hasSlot welcome:informMessage .
						welcome:informMessage rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#SystemInfo"^^xsd:anyURI .
						welcome:informMessage welcome:hasOntologyType "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#Template"^^xsd:anyURI .
						welcome:informMessage welcome:hasTemplateId "TInformMessage"^^xsd:string . 
						welcome:informMessage welcome:hasInputRDFContents welcome:reifiedReason2  .
						welcome:informMessage welcome:hasStatus welcome:Pending .
						welcome:informMessage welcome:hasNumberAttempts 0 .
						welcome:informMessage welcome:confidenceScore "0.0"^^xsd:float .
						welcome:informMessage welcome:isOptional "false"^^xsd:boolean .				
						welcome:reifiedReason2 rdf:type rdf:Statement .
						welcome:reifiedReason2 rdf:subject welcome:subTemplate .
						welcome:reifiedReason2 rdf:predicate welcome:isReason .
						welcome:reifiedReason2 rdf:object "STReasonNoFoundService"^^xsd:string .
					} WHERE { 
						?s rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .

:ConditionServiceRequest
	a bt:Condition ;
	rdfs:label "Condition: Commit exists?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK 
					WHERE { 
							?dip welcome:hasNamedGraph ?dipGraph .
							GRAPH ?dipGraph 
							{
								?container rdf:type welcome:SpeechActContainer .
								?container welcome:hasSpeechActType welcome:Commit .
							}							
					}"""^^xsd:string ;
		]) .

:DeletePreviousServiceRequestinExecution
	a bt:Update ;
	rdfs:label "Update: Delete Previous Service Request from Execution" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>					
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					DELETE {
						?container rdf:type welcome:SpeechActContainer .
						?container welcome:hasSpeechActObject ?containerObject .
						?container welcome:hasSpeechActType welcome:Commit .
						?containerObject rdf:type ?type .
						?containerObject ?property ?PropertyVal .
					} WHERE { 
							?container rdf:type welcome:SpeechActContainer .
							?container welcome:hasSpeechActObject ?containerObject .
							?container welcome:hasSpeechActType welcome:Commit .
							?containerObject rdf:type ?type .
							?containerObject ?property ?PropertyVal .
					}"""^^xsd:string ;
		]) .
		
:WriteServiceRequestinExecution
	a bt:Write ;
	rdfs:label "Write: Service Request in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#> 
			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
			CONSTRUCT  {
				?container rdf:type welcome:SpeechActContainer .
				?container welcome:hasSpeechActType welcome:Commit .
				?container welcome:hasSpeechActObject ?o .
				?o rdf:type service:Service . 
				?o service:describedBy ?process .
				?o service:presents ?profile .
				?process ?rel ?objprocess .
				?profile ?relprofile ?objprof .	
			}
			WHERE { 
				?bt welcome:hasActiveDIP ?dipId . 
				?dip welcome:hasNamedGraph ?dipGraph .
				GRAPH ?dipGraph { 
					?container rdf:type welcome:SpeechActContainer .
					?container welcome:hasSpeechActType welcome:Commit .
					?container welcome:hasSpeechActObject ?o .
					?o rdf:type service:Service . 
					?o service:describedBy ?process .
					?o service:presents ?profile .
					?process ?rel ?objprocess .
					?profile ?relprofile ?objprof .	
				}
			}"""^^xsd:string ;
	] .

:InvokeMatchmaker
	a ssc:ServiceComputing ;
	rdfs:label "SSC Plugin: Matchmaker" ;
	ssc:serviceRequest [
				a bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:targetBase ajan:LocalServicesKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
						PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
						CONSTRUCT {
							?o rdf:type service:Service . 
							?o service:describedBy ?process .
							?o service:presents ?profile .
							?process ?rel ?objprocess .
							?profile ?relprofile ?objprof .
						}
						WHERE { 
							?s rdf:type welcome:SpeechActContainer .
							?s welcome:hasSpeechActType welcome:Commit .
							?s welcome:hasSpeechActObject ?o .
							?o rdf:type service:Service . 
							?o service:describedBy ?process .
							?o service:presents ?profile .
							?process ?rel ?objprocess .
							?profile ?relprofile ?objprof .							
						} """^^xsd:string ;
			] ;
	ssc:serviceOffer [
				a bt:SelectQuery ;
				bt:originBase ajan:LocalServicesKnowledge ;
				bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					SELECT ?s ?o ?p ?g
					WHERE {
						{ GRAPH ?g { ?s ?o ?p } }
					}"""^^xsd:string ;
			] ;
	ssc:filterModel "text-similarity.filter"^^xsd:string .

:ConditionMatchmakerOutput
	a bt:Condition ;
	rdfs:label "Condition: MatchmakerOutput?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					ASK
					WHERE {
						?ssc ssc:hasResultOffer ?MatchmakerOffer .	
					}"""^^xsd:string ;
		]) .
		
:PDDL2SPARQLPlugin
	a ssc:PDDL2SPARQL ;
	rdfs:label "PDDL2SPARQL Plugin: Map Precondition" ;
	ssc:servicePrecondition [
				a bt:ConstructQuery ;
				bt:originBase ajan:LocalServicesKnowledge ;
				bt:targetBase ajan:AgentKnowledge ;
				bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
					PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>	
					PREFIX pddlexpr: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/PDDLExpression.owl#>	
					PREFIX expr: <http://www.daml.org/services/owl-s/1.1/generic/Expression.owl#>
					CONSTRUCT {
						?MatchmakerOffer welcome:hasPrecondition ?precondition .
					}
					WHERE { 
						?ssc ssc:hasResultOffer ?MatchmakerOffer .
						GRAPH ?g {
							?MatchmakerOffer service:describedBy ?process .
							?process process:hasPrecondition ?precondClass .
							?precondClass expr:expressionBody ?precondition .
						}
					}"""^^xsd:string ;
			] .

:ConditionPreconditionHolds
	a bt:Condition ;
	rdfs:label "Condition: Precondition holds?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					ASK
					WHERE {
						?query welcome:hasPreconditionResult "true"^^<http://www.w3.org/2001/XMLSchema#boolean> .	
					}"""^^xsd:string ;
		]) .

:ConditionAtomicService	
	a bt:Condition ;
	rdfs:label "Condition: Atomic Service?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
					PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
					ASK
					WHERE {
						?ssc ssc:hasResultOffer ?MatchmakerOffer .
						?MatchmakerOffer rdf:type service:Service .
						?MatchmakerOffer service:describedBy ?process .
						?process rdf:type process:AtomicProcess .
					}"""^^xsd:string ;
		]) .

:CreateAtomicServiceDIP
	a bt:Write ;
	rdfs:label "Write: Create DIP from Atomic" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
			PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
			CONSTRUCT  {
						?process rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						?process welcome:belongsTo ?matchmakerOffer .
						?process welcome:isCurrentDIP "true"^^xsd:boolean .
						?process welcome:hasDIPStatus welcome:Unknown .
						?process welcome:hasSlot ?input .
						?input rdf:type ?slotType .
						?input welcome:hasOntologyType ?paramTypeInput .
						?input welcome:hasTemplateId ?templateIdInput .						
						?input welcome:isOptional ?optionalInput .
						?input welcome:hasInputRDFContents welcome:Unknown .
						?input welcome:hasTCNAnswer welcome:Unknown .
						?input welcome:hasStatus welcome:Pending .
						?input welcome:hasNumberAttempts 0 .
						?input welcome:confidenceScore "0.0"^^xsd:float .					
			}
			WHERE { 
					?ssc ssc:hasResultOffer ?matchmakerOffer .
					?matchmakerOffer rdf:type service:Service .
					?service service:describedBy ?process . 
					?process process:hasInput ?input .
					?input process:parameterType ?paramTypeInput .
					?input welcome:hasSlotType ?slotType .
					?input welcome:isOptional ?optionalInput .					
					OPTIONAL { 
						?input welcome:hasTemplateId ?templateIdInput .
					}			  
			} """^^xsd:string ;
	] .
	
:ConditionComposedService
	a bt:Condition ;
	rdfs:label "Condition: Composed Service?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
					PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
					ASK
					WHERE {
						?ssc ssc:hasResultOffer ?MatchmakerOffer .
						?MatchmakerOffer rdf:type service:Service .
						?MatchmakerOffer service:describedBy ?process .
						?process rdf:type process:CompositeProcess .
					}"""^^xsd:string ;
		]) .

:CreateComposedServiceDIP
	a bt:Write ;
	rdfs:label "Write: Create DIP from Composite" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			PREFIX process: <http://www.daml.org/services/owl-s/1.1/Process.owl#>
			PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
			CONSTRUCT  {
						?atomicProcess rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						?atomicProcess welcome:belongsTo ?matchmakerOffer .
						?atomicProcess welcome:isCurrentDIP "true"^^xsd:boolean .
						?atomicProcess welcome:hasDIPStatus welcome:Unknown .
						?atomicProcess welcome:hasSlot ?inputAtomic .
						?inputAtomic rdf:type ?slotType .
						?inputAtomic welcome:hasOntologyType ?paramTypeInput .
						?inputAtomic welcome:hasTemplateId ?templateInput .
						?inputAtomic welcome:isOptional ?optionalOutput .
						?inputAtomic welcome:hasInputRDFContents welcome:Unknown .
						?inputAtomic welcome:hasTCNAnswer welcome:Unknown .
						?inputAtomic welcome:hasStatus welcome:Pending .
						?inputAtomic welcome:hasNumberAttempts 0 .
						?inputAtomic welcome:confidenceScore "0.0"^^xsd:float .	
			}
			WHERE { 
					?ssc ssc:hasResultOffer ?matchmakerOffer .
					?matchmakerOffer service:describedBy ?Compositeprocess . 
					?Compositeprocess process:hasInput ?inputComposite .
					?perform process:process ?atomicProcess .
					?atomicProcess rdf:type process:AtomicProcess .	
					?atomicProcess process:hasInput ?inputAtomic .
					?inputAtomic rdf:type process:Input .					
					?perform process:hasDataFrom ?inputBinding .
					?inputBinding rdf:type process:InputBinding .
					?inputAtomic process:parameterType ?paramTypeInput .
					?inputAtomic welcome:hasSlotType ?slotType .
					OPTIONAL { 
						?inputAtomic welcome:hasTemplateId ?templateInput .
					}
					?inputAtomic welcome:isOptional ?optionalOutput .					
					?inputBinding process:toParam ?inputAtomic .
					?inputBinding process:valueSource ?valOf .
					?valOf rdf:type process:ValueOf .
					?valOf process:theVar ?inputComposite .						
			}"""^^xsd:string ;
	] .

:WriteSSCResultinAgentKB
	a bt:Write ;
	rdfs:label "Write: SSC Result in Agent KB" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:targetBase ajan:AgentKnowledge ;
		bt:sparql """
			PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>	
			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			CONSTRUCT { 
				?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
				?MatchmakerOffer ssc:hasServiceName ?servName .				
			} WHERE  {
				?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
				?MatchmakerOffer rdf:type service:Service .
				?MatchmakerOffer service:presents ?profile .
				?profile profile:serviceName ?servName .
			}"""^^xsd:string ;
	] .

:EventProducerFirstInteractionMove
	a bt:EventProducer ;
	rdfs:label "EventProducer: Trigger First Interaction Move" ;
	ajan:event agents:FirstInteractionBTEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:hasFirstMove "ServiceInteraction" .
						}
						WHERE {
							?s rdf:type ajan:Agent . 
						}"""^^xsd:string ;
				] .	

:EventProducerAlternativeFirstInteractionMove
	a bt:EventProducer ;
	rdfs:label "EventProducer: Trigger Alternative First Interaction Move" ;
	ajan:event agents:FirstInteractionBTEvent ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:hasFirstMove "FirstAlternativeMove" .
						}
						WHERE {
							?s rdf:type ajan:Agent .
						}"""^^xsd:string ;
				] .	

:InvokePlanner
	a ssc:ServiceComputing ;
	rdfs:label "SSC Plugin: Planner" ;
	ssc:domainDefinition [
		a bt:ConstructQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
				CONSTRUCT {
						?s welcome:hasPDDLDomain ?p .
				}
				WHERE { 
						?s welcome:hasPDDLDomain ?p .
				} """^^xsd:string ;
	] ;
	ssc:problemInit [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
					CONSTRUCT {
						?o welcome:hasInitState ?goal .
					}
					WHERE { 
						?s rdf:type welcome:SpeechActContainer .
						?s welcome:hasSpeechActType welcome:Commit .
						?s welcome:hasSpeechActObject ?o .
						?o welcome:hasInitState ?initialState .
					} """^^xsd:string ;
		] ;	
	ssc:problemGoal [
		a bt:ConstructQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
				CONSTRUCT {
					?o welcome:hasGoalState ?goal .
				}
				WHERE { 
					?s rdf:type welcome:SpeechActContainer .
					?s welcome:hasSpeechActType welcome:Commit .
					?s welcome:hasSpeechActObject ?o .
					?o welcome:hasGoalState?initialState .
				} """^^xsd:string ;
	] .	

:ConditionPlannerOutput
	a bt:Condition ;
	rdfs:label "Condition: PlannerOutput?" ;
	bt:query ( [
		a bt:AskQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					ASK
					WHERE {
						?ssc ssc:hasComposedService ?compositeService .	
					}"""^^xsd:string ;
		]) .
		
:SendPlanDIPKMS
	a bt:Action ;
    rdfs:label "Action: Send Service Plan to KMS" ;
    bt:inputs ( [
		a bt:Input ;
		a bt:ConstructQuery ;
        bt:originBase ajan:AgentKnowledge ;
        bt:sparql """
				PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				"""^^xsd:string ;
		]) ;
		bt:definition services:SendPreconditionServices .
		
:EventDefaultStatementNoOpinion
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Default Statement Non Opinion" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#EventStatementNonOpinion> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
						CONSTRUCT {						    
							?s rdf:type welcome:SpeechActContainer .
							?s welcome:hasSpeechActType welcome:Statement-non-opinion .
						}
						WHERE { 
							?s rdf:type welcome:SpeechActContainer .
							?s welcome:hasSpeechActType welcome:Statement-non-opinion .
						}"""^^xsd:string ;
				] .

:CreateClosingUponFailureInternalErrorPart1
	a bt:Update ;
	rdfs:label "Update: Create Closing Upon Failure DIP - Internal Error Part 1" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 										
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#> 
					INSERT {
						welcome:ClosingUponFailure rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcome:ClosingUponFailure welcome:hasDIPStatus welcome:Unknown .
						welcome:ClosingUponFailure welcome:isCurrentDIP "true"^^xsd:boolean .
						welcome:ClosingUponFailure welcome:hasSlot welcome:informMessage .
						welcome:informMessage rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#SystemInfo"^^xsd:anyURI .
						welcome:informMessage welcome:hasOntologyType "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#Template"^^xsd:anyURI .
						welcome:informMessage welcome:hasTemplateId "TInformMessage"^^xsd:string . 						
						welcome:informMessage welcome:hasStatus welcome:Pending .						
					} WHERE { 
						?a rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .

:CreateClosingUponFailureInternalErrorPart2
	a bt:Update ;
	rdfs:label "Update: Create Closing Upon Failure DIP - Internal Error Part 2" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 										
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#> 
					INSERT {
						welcome:informMessage welcome:hasNumberAttempts 0 .
						welcome:informMessage welcome:confidenceScore "0.0"^^xsd:float .
						welcome:informMessage welcome:isOptional "false"^^xsd:boolean .	
						welcome:informMessage welcome:hasInputRDFContents welcome:reifiedReason2  .
						welcome:reifiedReason2 rdf:type rdf:Statement .
						welcome:reifiedReason2 rdf:subject welcome:subTemplate .
						welcome:reifiedReason2 rdf:predicate welcome:isReason .
						welcome:reifiedReason2 rdf:object "STReasonInternalFailure"^^xsd:string .
					} WHERE { 
						welcome:ClosingUponFailure welcome:hasSlot welcome:informMessage .
					}"""^^xsd:string ;
		]) .
		
#=============================================================================================
# SpecificFirstReceptionBT

:EventHandlerGenericFirstInteractionMove
	a bt:HandleEvent ;
	rdfs:label "EventHandler: First Interaction Move" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#FirstInteractionBTEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 					
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:hasFirstMove ?val .
						}
						WHERE { 
							welcome:myWelcomeAgent welcome:hasFirstMove ?val .	
						}"""^^xsd:string ;
				] .

:DeletePrecondition
	a bt:Update ;
	rdfs:label "Update: Delete Service Precondition Result in LAKR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
					DELETE {
						?MatchmakerOffer welcome:hasPrecondition ?precondition .
						?query welcome:hasPreconditionResult ?preconVal .	
					}
					 WHERE {
						?s ?p ?o .
						OPTIONAL { ?MatchmakerOffer welcome:hasPrecondition ?precondition .}
						OPTIONAL { ?query welcome:hasPreconditionResult ?preconVal .}
					}					
					"""^^xsd:string ;
		]) .

:WriteFirstInteractionFlaginExecution
	a bt:Write ;
	rdfs:label "Write: First Interaction Flag in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 					
			CONSTRUCT {
					welcome:myWelcomeAgent welcome:hasFirstMove ?result .
			}
			WHERE { 
					welcome:myWelcomeAgent welcome:hasFirstMove ?result . 
			}"""^^xsd:string ;
	] .
	
:DeleteFirstInteractionFlaginLAKR
	a bt:Update ;
	rdfs:label "Update: Delete First Interaction Flag in LAKR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						welcome:myWelcomeAgent welcome:hasFirstMove ?val .		
					}
					WHERE { 
						welcome:myWelcomeAgent welcome:hasFirstMove ?val .	
					}					
					"""^^xsd:string ;
		]) .
		
:ConditionalServiceFirstInteraction
	a bt:Condition ;
	rdfs:label "Condition: First Move of a Found Service?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE { 
							welcome:myWelcomeAgent welcome:hasFirstMove "ServiceInteraction".							
					}"""^^xsd:string ;
		]) .

:WriteObtainRegistrationStatus2Execution
	a bt:Write ;
	rdfs:label "Write: Obtain Registration Status in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:ObtainRegistrationStatus rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:ObtainRegistrationStatus welcome:belongsTo ?service .
				welcomeServices:ObtainRegistrationStatus welcome:hasDIPStatus ?status .
				welcomeServices:ObtainRegistrationStatus welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:ObtainRegistrationStatus welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:ObtainRegistrationStatus rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:ObtainRegistrationStatus welcome:belongsTo ?service .
				welcomeServices:ObtainRegistrationStatus welcome:hasDIPStatus ?status .
				welcomeServices:ObtainRegistrationStatus welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:ObtainRegistrationStatus welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:ObtainRegistrationStatus rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:ObtainRegistrationStatus welcome:DIPId ?dipId .
						welcomeServices:ObtainRegistrationStatus welcome:belongsTo ?service .
						welcomeServices:ObtainRegistrationStatus welcome:hasDIPStatus ?status .
						welcomeServices:ObtainRegistrationStatus welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:ObtainRegistrationStatus welcome:hasSlot ?slots .
						welcomeServices:ObtainRegistrationStatus ?relDIP ?propDIP .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {?slots welcome:hasTemplateId ?templateID .}
						OPTIONAL {?slots welcome:hasTCNAnswer ?tcnAnswer .}	
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:DeleteObtainRegistrationStatusinLAKR
	a bt:Update ;
	rdfs:label "Update: Delete New Obtain Registration Status in LAKR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
					DELETE  {
						welcomeServices:ObtainRegistrationStatus ?rel ?obj .
						?obj ?relObj ?objObj .
						?objObj ?reifiRel ?reifiObj .
					}
					WHERE {
						welcomeServices:ObtainRegistrationStatus ?rel ?obj .
						?obj ?relObj ?objObj .
						FILTER NOT EXISTS
						{	
							GRAPH ?g {
								welcomeServices:ObtainRegistrationStatus ?rel ?obj .
								?obj ?relObj ?objObj .
								OPTIONAL{
								 ?objObj ?reifiRel ?reifiObj .
								}
							}
							FILTER regex(str(?g), "DIP") 
						}
					}"""^^xsd:string ;
		]) .
		
:DeleteFirstInteractionFlaginExecution
	a bt:Update ;
	rdfs:label "Update: Delete First Interaction Move Flag in Execution" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
							welcome:myWelcomeAgent welcome:hasFirstMove ?result.				
					} WHERE { 
						?s ?p ?o .
					}"""^^xsd:string ;
		]) .
		
:EventHandlerNormalClosingScenario
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Normal Closing Scenario" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#CloseScenarioEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 				
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:TCN_Profile welcome:updated "true" . 			
						}
						WHERE { 
							welcome:TCN_Profile welcome:updated "true" . 						
						}"""^^xsd:string ;
				] .

:EventHandlerAlternativeClosingScenario
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Alternative Normal Closing Scenario" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#AlternativeCloseScenarioEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 				
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:DTASF welcome:hasAlternativeClosing "true" . 			
						}
						WHERE { 
							welcome:DTASF welcome:hasAlternativeClosing "true" . 					
						}"""^^xsd:string ;
				] .
				
:UpdateCreateNormalClosingPart1
	a bt:Update ;
	rdfs:label "Update: Create Normal Closing DIP Part 1" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>					
					INSERT {
						welcome:NormalClosing rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcome:NormalClosing welcome:hasDIPStatus welcome:Unknown .
						welcome:NormalClosing welcome:hasSlot welcome:informEnd .
						welcome:NormalClosing welcome:isCurrentDIP "true"^^xsd:boolean . 
						welcome:informEnd rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#SystemInfo"^^xsd:anyURI .
						welcome:informEnd welcome:hasOntologyType "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#Template"^^xsd:anyURI . 
						welcome:informEnd welcome:hasTemplateId "TInformEnd"^^xsd:string .
						welcome:informEnd welcome:hasInputRDFContents welcome:Unknown .
						welcome:informEnd welcome:hasTCNAnswer welcome:Unknown .
						welcome:informEnd welcome:hasStatus welcome:Pending .
						welcome:informEnd welcome:hasNumberAttempts "0"^^xsd:int .
						welcome:informEnd welcome:confidenceScore "0.0"^^xsd:float .
						welcome:informEnd welcome:isOptional "false"^^xsd:boolean .			
					} 
					WHERE { 
						?s rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .

:UpdateCreateNormalClosingPart2
	a bt:Update ;
	rdfs:label "Update: Create Normal Closing DIP Part 2" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>					
					INSERT {
						welcome:NormalClosing welcome:hasSlot welcome:obtainConfirmation .
						welcome:obtainConfirmation rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#ConfirmationRequest"^^xsd:anyURI . 
						welcome:obtainConfirmation welcome:hasOntologyType "http://www.w3.org/2001/XMLSchema#boolean"^^xsd:anyURI .
						welcome:obtainConfirmation welcome:hasTemplateId "TObtainConfirmation"^^xsd:string .
						welcome:obtainConfirmation welcome:hasInputRDFContents welcome:Unknown .
						welcome:obtainConfirmation welcome:hasTCNAnswer welcome:Unknown .
						welcome:obtainConfirmation welcome:hasStatus welcome:Pending .
						welcome:obtainConfirmation welcome:hasNumberAttempts "0"^^xsd:int .
						welcome:obtainConfirmation welcome:confidenceScore "0.0"^^xsd:float .
						welcome:obtainConfirmation welcome:isOptional "false"^^xsd:boolean .					
					} 
					WHERE { 
						?s rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .
		
:EventHandlerSpecificBT
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Specific BT" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#SpecificBTEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 				
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							welcome:myWelcomeAgent welcome:execute ?val .			
						}
						WHERE { 
							welcome:myWelcomeAgent welcome:execute ?val .						
						}"""^^xsd:string ;
				] .

:DeletePreviousFlaginExecution
	a bt:Update ;
	rdfs:label "Update: Delete Previous Specific BT Flag in Execution" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						welcome:myWelcomeAgent welcome:execute ?val .		
					} WHERE { 
						OPTIONAL{
							welcome:myWelcomeAgent welcome:execute ?val . 
						}
					}"""^^xsd:string ;
		]) .

:WriteSpecificBTFlaginExecution
	a bt:Write ;
	rdfs:label "Write: Specific BT Flag in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcome:myWelcomeAgent welcome:execute ?val .	
			}
			WHERE {
				welcome:myWelcomeAgent welcome:execute ?val .	
			}"""^^xsd:string ;
	] .
	
:DeleteSpecificBTFlag
	a bt:Update ;
	rdfs:label "Update: Delete Specific BT Flag in LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						welcome:myWelcomeAgent welcome:execute ?val .		
					} WHERE { 
						welcome:myWelcomeAgent welcome:execute ?val . 
					}"""^^xsd:string ;
		]) .
		
:DeleteActiveDIPinExecution
	a bt:Update ;
	rdfs:label "Delete Previous Active DIP in Execution" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeService: <http://localhost:8080/services/FirstReceptionService.owl#>
					DELETE {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							?dip welcome:hasSlot ?slot .
							?dip welcome:DIPId ?dipid .
							?dip welcome:isCurrentDIP ?current .							
							?slot rdf:type ?slottype .
							?slot welcome:hasInputRDFContents ?rdfcontents .
							?slot welcome:hasOntologyType ?ontotype .
							?slot welcome:hasStatus ?statusslot . 
							?slot welcome:confidenceScore ?scoreslot .
							?slot welcome:hasNumberAttempts ?attp .
							?slot welcome:isOptional ?opt .
							?slot welcome:hasTemplateId ?slottemplate . 
							?slot welcome:hasTCNAnswer ?tcnAnswer . 
							?dip welcome:hasDIPStatus ?statusdip .
							?dipName welcome:hasNamedGraph ?dipGraph . 
							?bt welcome:hasActiveDIP ?activeId . 	
							?dip welcome:belongsTo ?someService .							
					}
					WHERE {		
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							?dip welcome:hasSlot ?slot .
							OPTIONAL { ?dip welcome:DIPId ?dipid .}
							?dip welcome:isCurrentDIP ?current .							
							?slot rdf:type ?slottype .
							?slot welcome:hasInputRDFContents ?rdfcontents .
							?slot welcome:hasOntologyType ?ontotype .
							?slot welcome:hasStatus ?statusslot . 
							?slot welcome:confidenceScore ?scoreslot .
							?slot welcome:hasNumberAttempts ?attp .
							?slot welcome:isOptional ?opt .
							OPTIONAL { ?slot welcome:hasTemplateId ?slottemplate . }
							OPTIONAL { ?slot welcome:hasTCNAnswer ?tcnAnswer . }
							OPTIONAL { ?dip welcome:hasDIPStatus ?statusdip .}
							OPTIONAL { ?dipName welcome:hasNamedGraph ?dipGraph . }
							OPTIONAL { ?bt welcome:hasActiveDIP ?activeId . }
							OPTIONAL { ?dip welcome:belongsTo ?someService .}
					}"""^^xsd:string ;
		]) .

:DeleteActiveDIPinAgentKB
	a bt:Update ;
	rdfs:label "Update: Remove Active DIPs in LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						?bt welcome:hasActiveDIP ?id .	
						?dip welcome:hasNamedGraph ?dipGraph .
					}
					 WHERE {
						OPTIONAL { ?bt welcome:hasActiveDIP ?id .}	
						OPTIONAL { ?dip welcome:hasNamedGraph ?dipGraph .}					
					}"""^^xsd:string ;
		]) .

:ConditionalFlagIncomplete
	a bt:Condition ;
	rdfs:label "Condition: Specific BT Flag Incomplete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE { 
							welcome:myWelcomeAgent welcome:execute "IncompleteDIP" .	
					}"""^^xsd:string ;
		]) .

:ConditionalDIPIncompleteOrMultiple
	a bt:Condition ;
	rdfs:label "Condition: DIP Incomplete? or Multiple DIP?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE { 
							{	?bt welcome:hasActiveDIP ?id . 
								?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
								?dip welcome:DIPId ?id .
							}
							UNION
							{ 
								{
									SELECT (COUNT(?id) as ?counter)
									WHERE {
										?bt welcome:hasActiveDIP ?id .
									}
								}
								FILTER(?counter > 1) 
							}							
					}"""^^xsd:string ;
		]) .

:UpdateCreateHeaderDMSMessage
	a bt:Update ;
	rdfs:label "Update: Header DMS Message" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					INSERT {
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?id .	
						welcome:headerAvatarGender welcome:hasHeaderName "X-Avatar-Gender" .
						welcome:headerAvatarGender welcome:hasHeaderValue ?value .
						welcome:headerLanguage welcome:hasHeaderName "X-Language" .
						welcome:headerLanguage welcome:hasHeaderValue ?preferedLang .
					} 
					WHERE { 
						?message welcome:hasCorrelationID ?correlationID .
						?du rdf:type welcome:DialogueUser .
						?du welcome:hasUserId ?id .
						?du welcome:hasLanguage ?lang .
						?lang rdf:type welcome:Language .
						?lang mac:hasValue ?preferedLang .
						OPTIONAL {
							welcome:Avatar welcome:hasGender welcome:Gender .
							welcome:Gender mac:hasValue ?value .
						}
					}
					"""^^xsd:string ;
		]) .
		
:SendIncompleteOrMultipleDIPDMS
	a bt:Message ;
	rdfs:label "Message: Send Multiple or Incomplete DIP to DMS"^^xsd:string ;
	rdfs:comment "Message: Send Multiple or Incomplete DIP to DMS"^^xsd:string ;
	bt:targetBase ajan:AgentKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
		  a bt:SelectQuery;
		  a bt:QueryUri ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					SELECT ?hdrName ?fieldValue
					WHERE {
						?headerName welcome:hasHeaderName ?hdrName .
						?headerName welcome:hasHeaderValue ?fieldValue .
					}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle;charset=UTF-8"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:ExecutionKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .					
							?dip welcome:DIPId ?id .
							?dip welcome:isCurrentDIP ?current .
							?dip welcome:hasSlot ?slots .
							?slots rdf:type ?slotType .
							?slots welcome:hasTemplateId ?templateID .	
							?slots welcome:hasInputRDFContents ?RDFContents .
							?slots welcome:hasTCNAnswer ?tcnAnswer .
							?slots welcome:hasOntologyType ?ontoType .
							?tcnAnswer ?reifiPredAnswer ?reifiedObjAnswer .
							?RDFContents ?ReifiPredi ?ReifiObj .					
							?slots welcome:hasStatus ?slotsStatus .		
							?slots welcome:hasNumberAttempts ?NbAttempts .
							?slots welcome:confidenceScore ?confScore .
							?slots welcome:isOptional ?optional .
						}
						WHERE {
							?dip rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .					
							?dip welcome:DIPId ?id .
							?dip welcome:isCurrentDIP ?current .
							?dip welcome:hasSlot ?slots .
							?slots rdf:type ?slotType .
							?slots welcome:hasOntologyType ?ontoType .							
							?slots welcome:hasStatus ?slotsStatus .		
							?slots welcome:hasNumberAttempts ?NbAttempts .
							?slots welcome:confidenceScore ?confScore .
							?slots welcome:isOptional ?optional .	
							OPTIONAL { ?slots welcome:hasTemplateId ?templateID . }
							OPTIONAL { 
								{?slots welcome:hasTCNAnswer ?tcnAnswer .}
								UNION
								{?slots welcome:hasTCNAnswer ?tcnAnswer .
								 ?tcnAnswer ?reifiPredAnswer ?reifiedObjAnswer .}
							}
							OPTIONAL { 
								{?slots welcome:hasInputRDFContents ?RDFContents . }
								UNION
								{?slots welcome:hasInputRDFContents ?RDFContents .
								?RDFContents ?ReifiPredi ?ReifiObj .}
							}
						}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
	a bt:SelectQuery ;
	a bt:QueryUri ;
	bt:originBase ajan:AgentKnowledge ;
	bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
				SELECT ?requestURI 
				WHERE
				{
				  welcome:dispatcher welcome:hasAddress ?partialAddress .
				  BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/toTcn?log=true") AS ?requestURI )
				}"""^^xsd:string
	] . 
#	bt:queryUri [
#	a bt:SelectQuery ;
#	a bt:QueryUri ;
#	bt:originBase ajan:AgentKnowledge ;  
#	bt:sparql """
#				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#				SELECT ?requestURI 
#				WHERE
#				{
#				  welcome:dispatcher welcome:hasAddress ?partialAddress .
#				  BIND(CONCAT(STR(?partialAddress), "/dms/receiveDIP") AS ?requestURI )
#				}"""^^xsd:string
#	] .

:DeleteHeaderDMSMessage 
	a bt:Update ;
	rdfs:label "Update: Delete Header DMS Message in LAKR" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?userID .	
						welcome:headerAvatarGender welcome:hasHeaderName "X-Avatar-Gender" .
						welcome:headerAvatarGender welcome:hasHeaderValue ?value .
						welcome:headerLanguage welcome:hasHeaderName "X-Language" .
						welcome:headerLanguage welcome:hasHeaderValue ?preferedLang .					
					} 
					WHERE { 
						OPTIONAL{ welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" . }
						OPTIONAL{ welcome:headerCorrelation welcome:hasHeaderValue ?correlationID . }
						OPTIONAL{ welcome:headerUserID welcome:hasHeaderName "X-User-ID" . }
						OPTIONAL{ welcome:headerUserID welcome:hasHeaderValue ?userID . }	
						OPTIONAL{ welcome:headerAvatarGender welcome:hasHeaderName "X-Avatar-Gender" . }
						OPTIONAL{ welcome:headerAvatarGender welcome:hasHeaderValue ?value . }
						OPTIONAL{ welcome:headerLanguage welcome:hasHeaderName "X-Language" . }
						OPTIONAL{ welcome:headerLanguage welcome:hasHeaderValue ?preferedLang . }
					}
					"""^^xsd:string ;
		]) .

:ConditionalObtainRegistrationStatusCompleteAndYesAnswer
	a bt:Condition ;
	rdfs:label "Condition: Obtain Registration Status Complete and Yes Answer?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:ObtainRegistrationStatus rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:ObtainRegistrationStatus welcome:DIPId ?id .
							welcomeServices:ObtainRegistrationStatus welcome:hasSlot welcomeServices:obtainStatus .	
							welcomeServices:obtainStatus welcome:hasInputRDFContents ?RDFContents .
							welcomeServices:obtainStatus welcome:hasTCNAnswer ?reifiedAnswer .
							?reifiedAnswer rdf:type rdf:Statement .
							?reifiedAnswer rdf:subject ?ReifiSub .
							?reifiedAnswer rdf:predicate ?ReifiPredi .
							?reifiedAnswer rdf:object ?answer .
							FILTER (STRENDS(str(?answer), "Yes") || STRENDS(str(?answer), "yes") || STRENDS(str(?answer), "True") || STRENDS(str(?answer), "true"))
					}"""^^xsd:string ;
		]) .

:WriteProposeService2Execution	
	a bt:Write ;
	rdfs:label "Write: Propose Service in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:ProposeService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:ProposeService welcome:belongsTo ?service .
				welcomeServices:ProposeService welcome:hasDIPStatus ?status .
				welcomeServices:ProposeService welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:ProposeService welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:ProposeService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:ProposeService welcome:belongsTo ?service .
				welcomeServices:ProposeService welcome:hasDIPStatus ?status .
				welcomeServices:ProposeService welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:ProposeService welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:ProposeService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:ProposeService welcome:DIPId ?dipId .
						welcomeServices:ProposeService welcome:belongsTo ?service .
						welcomeServices:ProposeService welcome:hasDIPStatus ?status .
						welcomeServices:ProposeService welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:ProposeService welcome:hasSlot ?slots .
						welcomeServices:ProposeService ?relDIP ?propDIP .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:WriteSSCResultinExecution
	a bt:Write ;
	rdfs:label "Write: SSC Result in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>
			PREFIX profile: <http://www.daml.org/services/owl-s/1.1/Profile.owl#>
			PREFIX service: <http://www.daml.org/services/owl-s/1.1/Service.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			CONSTRUCT { 
				?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
				?MatchmakerOffer ssc:hasServiceName ?servName .				
			} WHERE  {
				?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
				?MatchmakerOffer rdf:type service:Service .
				?MatchmakerOffer service:presents ?profile .
				?profile profile:serviceName ?servName .
			}"""^^xsd:string ;		
	] .
	
:UpdateProposeService
	a bt:Update ;
	rdfs:label "Update: Propose Service with SSC Result" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>	
					DELETE {
						welcomeServices:obtainInterest welcome:hasInputRDFContents ?RDFContents .
						?RDFContents ?ReifiPredi ?ReifiObj .
					}
					INSERT {
						welcomeServices:obtainInterest welcome:hasInputRDFContents welcome:reifiedInterest .
						welcome:reifiedInterest rdf:type rdf:Statement .						
						welcome:reifiedInterest rdf:subject welcome:ServiceName .
						welcome:reifiedInterest rdf:predicate mac:hasValue .
						welcome:reifiedInterest rdf:object ?servName .
					}
					WHERE {		
						welcomeServices:ProposeService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:ProposeService ?rel ?val .
						welcomeServices:ProposeService welcome:hasSlot welcomeServices:obtainInterest .
						welcomeServices:obtainInterest welcome:hasInputRDFContents ?RDFContents .
						?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
						?MatchmakerOffer ssc:hasServiceName ?servName .	
						OPTIONAL {
							?RDFContents ?ReifiPredi ?ReifiObj .
						}					
					}"""^^xsd:string ;
		]) .
		
:DeleteSSCResultinAgentKB
	a bt:Update ;
	rdfs:label "Update: Delete SSC Result in Agent KB" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>		
					DELETE {
						?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
						?MatchmakerOffer ssc:hasServiceName ?servName .	
					}
					WHERE {		
						OPTIONAL {
							?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
							?MatchmakerOffer ssc:hasServiceName ?servName .
						}
					}"""^^xsd:string ;
		]) .
		
:DeleteSSCResultinLSR
	a bt:Update ;
	rdfs:label "Update: Delete SSC Result in LSR" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:LocalServicesKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ssc: <http://www.ajan.de/behavior/scs-ns#>	
					DELETE {
						?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
					}
					WHERE {		
						?sscSubj ssc:hasResultOffer ?MatchmakerOffer .
					}"""^^xsd:string ;
		]) .
		
:ConditionalObtainRegistrationStatusCompleteAndNotAnswer
	a bt:Condition ;
	rdfs:label "Condition: Obtain Registration Status Complete and Not Answer?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:ObtainRegistrationStatus rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:ObtainRegistrationStatus welcome:DIPId ?id .
							welcomeServices:ObtainRegistrationStatus welcome:hasSlot welcomeServices:obtainStatus .	
							welcomeServices:obtainStatus welcome:hasInputRDFContents ?RDFContents .
							welcomeServices:obtainStatus welcome:hasTCNAnswer ?reifiedAnswer .
							?reifiedAnswer rdf:type rdf:Statement .
							?reifiedAnswer rdf:subject ?ReifiSub .
							?reifiedAnswer rdf:predicate ?ReifiPredi .
							?reifiedAnswer rdf:object ?answer .
							FILTER (STRENDS(str(?answer), "Not") || STRENDS(str(?answer), "not") || STRENDS(str(?answer), "False") || STRENDS(str(?answer), "false") || STRENDS(str(?answer), "No") || STRENDS(str(?answer), "no"))
					}"""^^xsd:string ;
		]) .

:WriteObtainRegistrationServiceInfo2Execution
	a bt:Write ;
	rdfs:label "Write: Obtain Registration Service Info in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:ObtainRegistrationServiceInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:ObtainRegistrationServiceInfo welcome:belongsTo ?service .
				welcomeServices:ObtainRegistrationServiceInfo welcome:hasDIPStatus ?status .
				welcomeServices:ObtainRegistrationServiceInfo welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:ObtainRegistrationServiceInfo welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:ObtainRegistrationServiceInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:ObtainRegistrationServiceInfo welcome:belongsTo ?service .
				welcomeServices:ObtainRegistrationServiceInfo welcome:hasDIPStatus ?status .
				welcomeServices:ObtainRegistrationServiceInfo welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:ObtainRegistrationServiceInfo welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:ObtainRegistrationServiceInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:ObtainRegistrationServiceInfo welcome:DIPId ?dipId .
						welcomeServices:ObtainRegistrationServiceInfo welcome:belongsTo ?service .
						welcomeServices:ObtainRegistrationServiceInfo welcome:hasDIPStatus ?status .
						welcomeServices:ObtainRegistrationServiceInfo welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:ObtainRegistrationServiceInfo welcome:hasSlot ?slots .
						welcomeServices:ObtainRegistrationServiceInfo ?relDIP ?propDIP .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:ConditionalProposeServiceCompleteAndYes
	a bt:Condition ;
	rdfs:label "Condition: Propose Service DIP Complete? and Yes Answer" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:ProposeService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:ProposeService welcome:DIPId ?id .
							welcomeServices:ProposeService welcome:hasSlot welcomeServices:obtainInterest .	
							welcomeServices:obtainInterest welcome:hasInputRDFContents ?RDFContents .
							welcomeServices:obtainInterest welcome:hasTCNAnswer ?reifiedAnswer .
							?reifiedAnswer rdf:type rdf:Statement .
							?reifiedAnswer rdf:subject ?ReifiSub .
							?reifiedAnswer rdf:predicate ?ReifiPredi .
							?reifiedAnswer rdf:object ?answer .
							FILTER (STRENDS(str(?answer), "Yes") || STRENDS(str(?answer), "yes") || STRENDS(str(?answer), "True") || STRENDS(str(?answer), "true"))
					}"""^^xsd:string ;
		]) .

:WriteInformFirstReception2Execution
	a bt:Write ;
	rdfs:label "Write: Inform First Reception in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:InformFirstReceptionService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:InformFirstReceptionService welcome:belongsTo ?service .
				welcomeServices:InformFirstReceptionService welcome:hasDIPStatus ?status .
				welcomeServices:InformFirstReceptionService welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:InformFirstReceptionService welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:InformFirstReceptionService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:InformFirstReceptionService welcome:belongsTo ?service .
				welcomeServices:InformFirstReceptionService welcome:hasDIPStatus ?status .
				welcomeServices:InformFirstReceptionService welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:InformFirstReceptionService welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:InformFirstReceptionService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:InformFirstReceptionService welcome:DIPId ?dipId .
						welcomeServices:InformFirstReceptionService welcome:belongsTo ?service .
						welcomeServices:InformFirstReceptionService welcome:hasDIPStatus ?status .
						welcomeServices:InformFirstReceptionService welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:InformFirstReceptionService welcome:hasSlot ?slots .
						welcomeServices:InformFirstReceptionService ?relDIP ?propDIP .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:ConditionalProposeServiceCompleteAndNot
	a bt:Condition ;
	rdfs:label "Condition: Propose Service DIP Complete? and Not Answer" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:ProposeService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:ProposeService welcome:DIPId ?id .
							welcomeServices:ProposeService welcome:hasSlot welcomeServices:obtainInterest .	
							welcomeServices:obtainInterest welcome:hasInputRDFContents ?RDFContents .
							welcomeServices:obtainInterest welcome:hasTCNAnswer ?reifiedAnswer .
							?reifiedAnswer rdf:type rdf:Statement .
							?reifiedAnswer rdf:subject ?ReifiSub .
							?reifiedAnswer rdf:predicate ?ReifiPredi .
							?reifiedAnswer rdf:object ?answer .
							FILTER (STRENDS(str(?answer), "Not") || STRENDS(str(?answer), "not") || STRENDS(str(?answer), "False") || STRENDS(str(?answer), "false") || STRENDS(str(?answer), "No") || STRENDS(str(?answer), "no"))
					}"""^^xsd:string ;
		]) .

:UpdateCreateInformContactNGO
	a bt:Update ;
	rdfs:label "Update: Create Inform Contact NGO DIP" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 	
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					INSERT {
						welcome:InformContactNGO rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcome:InformContactNGO welcome:hasDIPStatus welcome:Unknown .
						welcome:InformContactNGO welcome:hasSlot welcome:informGenericDTASFContact .
						welcome:InformContactNGO welcome:hasSlot welcome:obtainConfirmation .
						welcome:InformContactNGO welcome:isCurrentDIP "true"^^xsd:boolean . 
						welcome:informGenericDTASFContact rdf:type welcome:SystemInfo .
						welcome:informGenericDTASFContact welcome:hasOntologyType welcome:Template .
						welcome:informGenericDTASFContact welcome:hasTemplateId "TInformGenericContact"^^xsd:string .
						welcome:informGenericDTASFContact welcome:hasInputRDFContents welcome:Unknown .
						welcome:informGenericDTASFContact welcome:hasTCNAnswer welcome:Unknown .
						welcome:informGenericDTASFContact welcome:hasStatus welcome:Pending .
						welcome:informGenericDTASFContact welcome:hasNumberAttempts 0 .
						welcome:informGenericDTASFContact welcome:confidenceScore "0.0"^^xsd:float .
						welcome:informGenericDTASFContact welcome:isOptional "false"^^xsd:boolean .
						welcome:obtainConfirmation rdf:type welcome:ConfirmationRequest .
						welcome:obtainConfirmation welcome:hasOntologyType xsd:boolean .
						welcome:obtainConfirmation welcome:hasTemplateId "TObtainConfirmation"^^xsd:string .
						welcome:obtainConfirmation welcome:hasInputRDFContents welcome:Unknown .
						welcome:obtainConfirmation welcome:hasTCNAnswer welcome:Unknown .
						welcome:obtainConfirmation welcome:hasStatus welcome:Pending .
						welcome:obtainConfirmation welcome:hasNumberAttempts 0 .
						welcome:obtainConfirmation welcome:confidenceScore "0.0"^^xsd:float .
						welcome:obtainConfirmation welcome:isOptional "false"^^xsd:boolean .					
					} WHERE {
						?s rdf:type ajan:Agent .
					}"""^^xsd:string ;
		]) .

:ConditionalObtainRegistrationServiceInfoComplete
	a bt:Condition ;
	rdfs:label "Condition: Obtain Registration Service Info Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:ObtainRegistrationServiceInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:ObtainRegistrationServiceInfo welcome:DIPId ?id .
					}"""^^xsd:string ;
		]) .

:WriteInformRegistrationService2Execution
	a bt:Write ;
	rdfs:label "Write: Inform Registration Service in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:InformRegistrationService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:InformRegistrationService welcome:belongsTo ?service .
				welcomeServices:InformRegistrationService welcome:hasDIPStatus ?status .
				welcomeServices:InformRegistrationService welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:InformRegistrationService welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:InformRegistrationService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:InformRegistrationService welcome:belongsTo ?service .
				welcomeServices:InformRegistrationService welcome:hasDIPStatus ?status .
				welcomeServices:InformRegistrationService welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:InformRegistrationService welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {?slots welcome:hasTemplateId ?templateID .}
				OPTIONAL {?slots welcome:hasTCNAnswer ?tcnAnswer .}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:InformRegistrationService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:InformRegistrationService welcome:DIPId ?dipId .
						welcomeServices:InformRegistrationService welcome:belongsTo ?service .
						welcomeServices:InformRegistrationService welcome:hasDIPStatus ?status .
						welcomeServices:InformRegistrationService welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:InformRegistrationService welcome:hasSlot ?slots .
						welcomeServices:InformRegistrationService ?relDIP ?propDIP .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {?slots welcome:hasTemplateId ?templateID .}
						OPTIONAL {?slots welcome:hasTCNAnswer ?tcnAnswer .}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:DeletePreviousRegistrationOfficesinExecution
	a bt:Update ;
	rdfs:label "Update: Delete Previous Address Coordinates in Execution" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					DELETE {
						?tcnIRI welcome:hasClosestRegistrationOffice ?officeIRI . 
						?tcn rdf:type welcome:DialogueUser . 
						?tcn welcome:long ?longvalue . 
						?tcn welcome:lat ?latvalue . 
						?office rdf:type welcome:RegistrationOffice . 
						?office ?proOffice ?valOffice . 
					}
					WHERE {	
						OPTIONAL { ?tcnIRI welcome:hasClosestRegistrationOffice ?officeIRI . }
						OPTIONAL { ?tcn rdf:type welcome:DialogueUser . }
						OPTIONAL { ?tcn welcome:long ?longvalue . }
						OPTIONAL { ?tcn welcome:lat ?latvalue . }
						OPTIONAL { 
							?office rdf:type welcome:RegistrationOffice . 
							?office ?proOffice ?valOffice .
						}
					}"""^^xsd:string ;
		]) .

:ConditionalCoordinateExists
	a bt:Condition ;
	rdfs:label "Condition: Coordinates of TCN and Registration Offices Exist?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
					PREFIX locn: <http://www.w3.org/ns/locn#>
					PREFIX daml: <http://www.daml.org/services/owl-s/1.1/ActorDefault.owl#>
					ASK
					WHERE {
						?tcn rdf:type welcome:DialogueUser .
						?tcn welcome:hasCity ?city .
						?city welcome:lat ?lat .
						?city welcome:long ?long .
						?office rdf:type welcome:RegistrationOffice .
						?office locn:address ?address .
						?address daml:physicalAddress ?value .
						?address welcome:lat ?latOffice .
						?address welcome:long ?longOffice .
					}"""^^xsd:string ;
		]) .
		
:WriteCoordinatesinExecution
	a bt:Write ;
	rdfs:label "Write: TCN Address and Registration Office Coordinates in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			PREFIX locn: <http://www.w3.org/ns/locn#>
			PREFIX daml: <http://www.daml.org/services/owl-s/1.1/ActorDefault.owl#>
			CONSTRUCT  {
				?tcn rdf:type welcome:DialogueUser .
				?tcn welcome:long ?long .
				?tcn welcome:lat ?lat .
				?office rdf:type welcome:RegistrationOffice .
				?office locn:address ?address .
				?office daml:physicalAddress ?value .
				?office welcome:lat ?latOffice .
				?office welcome:long ?longOffice .		
			}
			WHERE {
				?tcn rdf:type welcome:DialogueUser .
				?tcn welcome:hasCity ?city .
				?city welcome:lat ?lat .
				?city welcome:long ?long .
				?office rdf:type welcome:RegistrationOffice .
				?office locn:address ?address .
				?address daml:physicalAddress ?value .
				?address welcome:lat ?latOffice .
				?address welcome:long ?longOffice .
			}"""^^xsd:string ;
	] .

:InvokeClosestDistancePlugin
	a welcomePlugin:ClosestLocation ;
	rdfs:label "Welcome Plugin:Calculate Closest Registration Office" ;
	welcomePlugin:tcnLocation [
			a bt:ConstructQuery ;
			bt:originBase ajan:ExecutionKnowledge ;
			bt:targetBase ajan:ExecutionKnowledge ;
			bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 						
					CONSTRUCT {
						?tcn rdf:type welcome:DialogueUser .
						?tcn welcome:long ?longvalue .
						?tcn welcome:lat ?latvalue .
					}
					WHERE { 
						?tcn rdf:type welcome:DialogueUser .
						?tcn welcome:long ?longvalue .
						?tcn welcome:lat ?latvalue .		
					}"""^^xsd:string ;
	] ;
	welcomePlugin:registrationOfficeLocation [
			a bt:ConstructQuery ;
			bt:originBase ajan:ExecutionKnowledge ;
			bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX locn: <http://www.w3.org/ns/locn#> 
					PREFIX actor: <http://www.daml.org/services/owl-s/1.1/ActorDefault.owl#> 
					CONSTRUCT {
						?office rdf:type welcome:RegistrationOffice .
						?office locn:address ?address .
						?office actor:physicalAddress ?value .
						?office welcome:lat ?latval .
						?office welcome:long ?longval .	
					}
					WHERE { 
						?office rdf:type welcome:RegistrationOffice .
						?office locn:address ?address .
						?office actor:physicalAddress ?value .
						?office welcome:lat ?latval .
						?office welcome:long ?longval .				
					}"""^^xsd:string ;
	] .

:WriteDefaultOfficeinExecution
	a bt:Write ;
	rdfs:label "Write: Default Registration Office Coordinates in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			PREFIX locn: <http://www.w3.org/ns/locn#>
			PREFIX daml: <http://www.daml.org/services/owl-s/1.1/ActorDefault.owl#>
			CONSTRUCT  {
				?tcn welcome:hasClosestRegistrationOffice ?officeName .
				?officeName locn:address ?addressOffice .
				?officeName daml:physicalAddress ?physicalAddressValue .
			}
			WHERE {
				?tcn rdf:type welcome:DialogueUser .
				{
					SELECT ?officeName
					WHERE 
					{?officeName rdf:type welcome:RegistrationOffice .}
					LIMIT 1
				}
				?officeName locn:address ?addressOffice .
				?addressOffice daml:physicalAddress ?physicalAddressValue .
			}"""^^xsd:string ;
	] .
	
:UpdateInformRegistrationServiceDIP
	a bt:Update ;
	rdfs:label "Update: Closest Office in Inform Registration Service DIP" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX daml: <http://www.daml.org/services/owl-s/1.1/ActorDefault.owl#>
					PREFIX locn: <http://www.w3.org/ns/locn#>
					DELETE {
						welcomeServices:informOfficeAddress welcome:hasInputRDFContents ?RDFContents .
						?RDFContents ?proRDFContents ?valRDFContents .
					}
					INSERT{
						welcomeServices:informOfficeAddress welcome:hasInputRDFContents welcome:rdfInformClosestOffice .
						welcome:rdfInformClosestOffice a rdf:Statement .
						welcome:rdfInformClosestOffice rdf:subject welcome:Address .
						welcome:rdfInformClosestOffice rdf:predicate mac:hasValue .
						welcome:rdfInformClosestOffice rdf:object ?value .
					}
					WHERE {	
						welcomeServices:InformRegistrationService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:InformRegistrationService welcome:hasSlot welcomeServices:informOfficeAddress .
						welcomeServices:informOfficeAddress welcome:hasInputRDFContents ?RDFContents .
						?tcnIRI welcome:hasClosestRegistrationOffice ?officeIRI .
						?officeIRI locn:address ?address .
						?officeIRI daml:physicalAddress ?value .
						OPTIONAL {
							?RDFContents ?proRDFContents ?valRDFContents .
						}
					}"""^^xsd:string ;
		]) .

:ConditionalInformRegistrationServiceComplete
	a bt:Condition ;
	rdfs:label "Condition: Inform Registration Service Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:InformRegistrationService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:InformRegistrationService welcome:DIPId ?id .	
					}"""^^xsd:string ;
		]) .
		
:EventProducerNormalClosingScenario
	a bt:EventProducer ;
	rdfs:label "EventProducer: Alternataive Normal Closing Scenario" ;
	ajan:event <http://localhost:8090/rdf4j/repositories/agents#AlternativeCloseScenarioEvent> ;
	bt:content [
					a bt:ConstructQuery ;
					bt:originBase ajan:AgentKnowledge;
					bt:sparql """
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						CONSTRUCT {
							welcome:DTASF welcome:hasAlternativeClosing "true" . 
						}
						WHERE {
							?s rdf:type ajan:Agent . 
						}"""^^xsd:string ;
				] .	

:ConditionalInformFirstReceptionServiceCompleteAndYesAnswer
	a bt:Condition ;
	rdfs:label "Condition: Inform First Reception DIP Complete? and Yes Answer" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>					
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:InformFirstReceptionService rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:InformFirstReceptionService welcome:DIPId ?id .
							welcomeServices:InformFirstReceptionService welcome:hasSlot welcomeServices:obtainInterestRegistration .
							welcomeServices:obtainInterestRegistration welcome:hasTCNAnswer ?reifiedAnswer . 
							?reifiedAnswer rdf:type rdf:Statement .
							?reifiedAnswer rdf:subject ?ReifiSub .
							?reifiedAnswer rdf:predicate ?ReifiPredi .
							?reifiedAnswer rdf:object ?answer .
							FILTER (STRENDS(str(?answer), "True") || STRENDS(str(?answer), "true") || STRENDS(str(?answer), "yes") || STRENDS(str(?answer), "Yes"))
					}"""^^xsd:string ;
	]) .

:WritePersonalInfoDIP2Execution
	a bt:Write ;
	rdfs:label "Write: Personal Info DIP in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:FillFormPersonalInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormPersonalInfo welcome:belongsTo ?service .
				welcomeServices:FillFormPersonalInfo welcome:hasDIPStatus ?status .
				welcomeServices:FillFormPersonalInfo welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormPersonalInfo welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:FillFormPersonalInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormPersonalInfo welcome:belongsTo ?service .
				welcomeServices:FillFormPersonalInfo welcome:hasDIPStatus ?status .
				welcomeServices:FillFormPersonalInfo welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormPersonalInfo welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:FillFormPersonalInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:FillFormPersonalInfo welcome:DIPId ?dipId .
						welcomeServices:FillFormPersonalInfo welcome:belongsTo ?service .
						welcomeServices:FillFormPersonalInfo welcome:hasDIPStatus ?status .
						welcomeServices:FillFormPersonalInfo welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:FillFormPersonalInfo welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .
	
:ConditionalPersonalInfoComplete
	a bt:Condition ;
	rdfs:label "Condition: Personal Info DIP Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>					
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:FillFormPersonalInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:FillFormPersonalInfo welcome:DIPId ?id .
					}"""^^xsd:string ;
	]) .
	
:WriteAddressInfoDIP2Execution
	a bt:Write ;
	rdfs:label "Write: Address Info DIP in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:FillFormAddressInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormAddressInfo welcome:belongsTo ?service .
				welcomeServices:FillFormAddressInfo welcome:hasDIPStatus ?status .
				welcomeServices:FillFormAddressInfo welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormAddressInfo welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:FillFormAddressInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormAddressInfo welcome:belongsTo ?service .
				welcomeServices:FillFormAddressInfo welcome:hasDIPStatus ?status .
				welcomeServices:FillFormAddressInfo welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormAddressInfo welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:FillFormAddressInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:FillFormAddressInfo welcome:DIPId ?dipId .
						welcomeServices:FillFormAddressInfo welcome:belongsTo ?service .
						welcomeServices:FillFormAddressInfo welcome:hasDIPStatus ?status .
						welcomeServices:FillFormAddressInfo welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:FillFormAddressInfo welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:ConditionalAddressInfoDIPComplete
	a bt:Condition ;
	rdfs:label "Condition: Address Info DIP Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>					
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:FillFormAddressInfo rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:FillFormAddressInfo welcome:DIPId ?id .
					}"""^^xsd:string ;
	]) .

:WriteFillFormOtherDIP2Execution
	a bt:Write ;
	rdfs:label "Write: Fill Form Other Info DIP in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>				
			CONSTRUCT  {
				welcomeServices:FillFormOther rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormOther welcome:belongsTo ?service .
				welcomeServices:FillFormOther welcome:hasDIPStatus ?status .
				welcomeServices:FillFormOther welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormOther welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:FillFormOther rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormOther welcome:belongsTo ?service .
				welcomeServices:FillFormOther welcome:hasDIPStatus ?status .
				welcomeServices:FillFormOther welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormOther welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:FillFormOther rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:FillFormOther welcome:DIPId ?dipId .
						welcomeServices:FillFormOther welcome:belongsTo ?service .
						welcomeServices:FillFormOther welcome:hasDIPStatus ?status .
						welcomeServices:FillFormOther welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:FillFormOther welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .

:ConditionalFillFormOtherDIPComplete
	a bt:Condition ;
	rdfs:label "Condition: Other Info DIP Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>					
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:FillFormOther rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:FillFormOther welcome:DIPId ?id .
					}"""^^xsd:string ;
	]) .
	
:WriteFillFormModulesDIP2Execution
	a bt:Write ;
	rdfs:label "Write: Fill Form Modules DIP in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:FillFormModules rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormModules welcome:belongsTo ?service .
				welcomeServices:FillFormModules welcome:hasDIPStatus ?status .
				welcomeServices:FillFormModules welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormModules welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:FillFormModules rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormModules welcome:belongsTo ?service .
				welcomeServices:FillFormModules welcome:hasDIPStatus ?status .
				welcomeServices:FillFormModules welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormModules welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:FillFormModules rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:FillFormModules welcome:DIPId ?dipId .
						welcomeServices:FillFormModules welcome:belongsTo ?service .
						welcomeServices:FillFormModules welcome:hasDIPStatus ?status .
						welcomeServices:FillFormModules welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:FillFormModules welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .
	
:ConditionalFillFormModulesDIPComplete
	a bt:Condition ;
	rdfs:label "Condition: Fill Form Modules DIP Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>					
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:FillFormModules rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:FillFormModules welcome:DIPId ?id .
					}"""^^xsd:string ;
	]) .
	
:WriteFillFormCourseDIP2Execution
	a bt:Write ;
	rdfs:label "Write: Fill Course Info DIP in Execution" ;
	bt:query [
		a bt:ConstructQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:targetBase ajan:ExecutionKnowledge ;
		bt:sparql """
			PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
			PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
			PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
			PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>	
			CONSTRUCT  {
				welcomeServices:FillFormCourse rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormCourse welcome:belongsTo ?service .
				welcomeServices:FillFormCourse welcome:hasDIPStatus ?status .
				welcomeServices:FillFormCourse welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormCourse welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .
				?slots welcome:hasTCNAnswer ?tcnAnswer .
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				?slots welcome:hasTemplateId ?templateID .
			}
			WHERE {
				welcomeServices:FillFormCourse rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
				welcomeServices:FillFormCourse welcome:belongsTo ?service .
				welcomeServices:FillFormCourse welcome:hasDIPStatus ?status .
				welcomeServices:FillFormCourse welcome:isCurrentDIP "true"^^xsd:boolean .
				welcomeServices:FillFormCourse welcome:hasSlot ?slots .
				?slots rdf:type ?slotType .
				?slots welcome:hasOntologyType ?ontoType .
				?slots welcome:hasInputRDFContents ?RDFContents .	
				?slots welcome:hasStatus ?slotsStatus .		
				?slots welcome:hasNumberAttempts ?NbAttempts .
				?slots welcome:confidenceScore ?confScore .
				?slots welcome:isOptional ?optional .	
				OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
				FILTER NOT EXISTS
				{	
					GRAPH ?g {
						welcomeServices:FillFormCourse rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
						welcomeServices:FillFormCourse welcome:DIPId ?dipId .
						welcomeServices:FillFormCourse welcome:belongsTo ?service .
						welcomeServices:FillFormCourse welcome:hasDIPStatus ?status .
						welcomeServices:FillFormCourse welcome:isCurrentDIP "true"^^xsd:boolean .
						welcomeServices:FillFormCourse welcome:hasSlot ?slots .
						?slots rdf:type ?slotType .
						?slots welcome:hasOntologyType ?ontoType .
						?slots welcome:hasInputRDFContents ?RDFContents .	
						?slots welcome:hasStatus ?slotsStatus .		
						?slots welcome:hasNumberAttempts ?NbAttempts .
						?slots welcome:confidenceScore ?confScore .
						?slots welcome:isOptional ?optional .	
						OPTIONAL {						
							{?slots welcome:hasTemplateId ?templateID .}
							UNION
							{?slots welcome:hasTCNAnswer ?tcnAnswer .}				
						}
					}
					FILTER regex(str(?g), "DIP") 
				}
			}"""^^xsd:string ;
	] .
	
:ConditionalFillFormCourseDIPComplete
	a bt:Condition ;
	rdfs:label "Condition: Fill Form Course DIP Complete?" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>					
					PREFIX welcomeServices: <http://localhost:8080/services/FirstReceptionService.owl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcomeServices:FillFormCourse rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcomeServices:FillFormCourse welcome:DIPId ?id .
					}"""^^xsd:string ;
	]) .

:UpdateCreateHeaderAppNotificationMessage
	a bt:Update ;
	rdfs:label "Update: Header App Notification Message" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					INSERT {
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?id .						
					} 
					WHERE { 
						?message welcome:hasCorrelationID ?correlationID .
						?du rdf:type welcome:DialogueUser .
						?du welcome:hasUserId ?id .
					}
					"""^^xsd:string ;
		]) .
		
:SendNotification2App
	a bt:Message ;
	rdfs:label "Message: Send Notification to App to Retrieve Content"^^xsd:string ;
	rdfs:comment "Message: Send Notification to App to Retrieve Content"^^xsd:string ;
	bt:targetBase ajan:AgentKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
		  a bt:SelectQuery;
		  a bt:QueryUri ;
		  bt:originBase ajan:AgentKnowledge ;
		  bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					SELECT ?hdrName ?fieldValue
					WHERE {
							?headerName welcome:hasHeaderName ?hdrName .
							?headerName welcome:hasHeaderValue ?fieldValue .
					}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle;charset=UTF-8"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:AgentKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						PREFIX ajan: <http://www.ajan.de/ajan-ns#>
						CONSTRUCT {
							welcome:app welcome:retrieveFormContent "true" .
						}
						WHERE {
							?s rdf:type ajan:Agent .
						}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
	a bt:SelectQuery ;
	a bt:QueryUri ;
	bt:originBase ajan:AgentKnowledge ;
	bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
				SELECT ?requestURI 
				WHERE
				{
				  welcome:dispatcher welcome:hasAddress ?partialAddress .
				  BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/agentNotification") AS ?requestURI )
				}"""^^xsd:string
	] . 
#	bt:queryUri [
#	a bt:SelectQuery ;
#	a bt:QueryUri ;
#	bt:originBase ajan:AgentKnowledge ;  
#	bt:sparql """
#				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#				SELECT ?requestURI 
#				WHERE
#				{
#				  welcome:dispatcher welcome:hasAddress ?partialAddress .
#				  BIND(CONCAT(STR(?partialAddress), "/dms/receiveDIP") AS ?requestURI )
#				}"""^^xsd:string
#	] .

:ConditionalNormalClosingComplete
	a bt:Condition ;
	rdfs:label "Condition: Normal Closing Complete" ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:ExecutionKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>					
					ASK
					WHERE {
							?bt welcome:hasActiveDIP ?id . 
							welcome:NormalClosing rdf:type "https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#DIP"^^xsd:anyURI .
							welcome:NormalClosing welcome:DIPId ?id .
					}"""^^xsd:string ;
		]) .
		
:SucessFinishScenario
	a bt:Success ;
	rdfs:label "Scenario Finished"^^xsd:string .
	
:SimpleSuccess
	a bt:Success ;
	rdfs:label "Just Success Node"^^xsd:string .
																															
:DeleteHeaderAppNotificationMessage
	a bt:Update ;
	rdfs:label "Update: Header App Notification Message" ;
	bt:query ([
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
					DELETE {
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?userID .	
						welcome:app welcome:retrieveFormContent "true" .
					} 
					WHERE { 
						welcome:headerCorrelation welcome:hasHeaderName "X-Correlation-ID" .
						welcome:headerCorrelation welcome:hasHeaderValue ?correlationID .
						welcome:headerUserID welcome:hasHeaderName "X-User-ID" .
						welcome:headerUserID welcome:hasHeaderValue ?userID .	
						OPTIONAL{ welcome:app welcome:retrieveFormContent "true" }
					}
					"""^^xsd:string ;
		]) .
		
#=============================================================================================
# ShutdownBTBehavior

:EventHandlerShutdown
	a bt:HandleEvent ;
	rdfs:label "EventHandler: Shutdown Request" ;
	bt:event <http://localhost:8090/rdf4j/repositories/agents#AgentShutdownEvent> ;
	bt:validate [
					a bt:ConstructQuery ;
					bt:targetBase ajan:AgentKnowledge ;
					bt:sparql """
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							?s ?p ?o .
						}
						WHERE { 
							?s ?p ?o . 			
						} 
					"""^^xsd:string ;
				] .

:ConditionAgentRunningBT
	a bt:Condition ;
	rdfs:label "Condition: Agent Runs a BT? " ;
	bt:query ([
		a bt:AskQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					ASK
					WHERE {
						?agent welcome:hasBTRunning "true"^^xsd:boolean .
						?agent rdf:type ajan:Agent .							
					}"""^^xsd:string ;
		]) .
		
:UpdateAgentRunningYes
	a bt:Update ;
	rdfs:label "Update: Not Kill the Agent" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					DELETE {
						?agent welcome:canBeKilled ?previousVal .
					}
					INSERT {
						?agent welcome:canBeKilled "false"^^xsd:boolean .
					}
					WHERE {
						?agent rdf:type ajan:Agent .
						OPTIONAL {
							?agent welcome:canBeKilled ?previousVal .
						}
					}					
					"""^^xsd:string ;
		]) .

:UpdateAgentRunningNot
	a bt:Update ;
	rdfs:label "Update: Kill the Agent" ;
	bt:query ( [
		a bt:UpdateQuery ;
		bt:originBase ajan:AgentKnowledge ;
		bt:sparql """
					PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
					PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#>
					PREFIX ajan: <http://www.ajan.de/ajan-ns#>
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
					DELETE {
						?agent welcome:canBeKilled ?previousVal .
					}
					INSERT {
						?agent welcome:canBeKilled "true"^^xsd:boolean .
					}
					WHERE {
						?agent rdf:type ajan:Agent .
						OPTIONAL {
							?agent welcome:canBeKilled ?previousVal .
						}
					}					
					"""^^xsd:string ;
		]) .

:MessageSendShutdownNotification
	a bt:Message ;
	rdfs:label "Message: Send Shutdown Notification to WPM"^^xsd:string ;
	rdfs:comment "Message: Send Shutdown Notification to WPM"^^xsd:string ;
	bt:targetBase ajan:AgentKnowledge ;  
	bt:binding [
		a http-core:Request ;
		http-core:httpVersion "1.1"^^xsd:string ;
		http-core:mthd http-methods:POST ;
		bt:headers [
			a bt:SelectQuery;
			a bt:QueryUri ;
			bt:originBase ajan:AgentKnowledge ;
			bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				SELECT ?hdrName ?userID
				WHERE {
					   VALUES ?hdrName {"X-User-ID"}
					   ?du rdf:type welcome:DialogueUser .
					   ?du welcome:hasUserId ?userID .
				}"""^^xsd:string
		] ;
		http-core:headers ([
					a http-core:Header ;						
					http-core:hdrName http-headers:accept ;
					http-core:fieldValue "text/turtle;charset=UTF-8"^^xsd:string 
				][
					a http-core:Header ;
					http-core:hdrName http-headers:content-type ;
					http-core:fieldValue "application/ld+json"
				]
		) ;	
		http-core:body [
			a actn:Payload ;
			bt:query [
				rdf:type bt:ConstructQuery ;
				bt:originBase ajan:AgentKnowledge ;
				bt:sparql """
						PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
						PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
						CONSTRUCT {
							?agent welcome:canBeKilled ?val .
						}
						WHERE {
							?agent welcome:canBeKilled ?val .
						}"""^^xsd:string
			]
		] ;    
	] ;
	bt:queryUri [
	a bt:SelectQuery ;
	a bt:QueryUri ;
	bt:originBase ajan:AgentKnowledge ;
	bt:sparql """
				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
				SELECT ?requestURI 
				WHERE
				{
				  welcome:dispatcher welcome:hasAddress ?partialAddress .
				  BIND(CONCAT(STR(?partialAddress), "/welcome/integration/workflow/dispatcher/agentShutdownAcknowledgement") AS ?requestURI )
				}"""^^xsd:string
	] . 
#	bt:queryUri [
#	a bt:SelectQuery ;
#	a bt:QueryUri ;
#	bt:originBase ajan:AgentKnowledge ;  
#	bt:sparql """
#				PREFIX welcome: <https://raw.githubusercontent.com/gtzionis/WelcomeOntology/main/welcome.ttl#> 
#				PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#				SELECT ?requestURI 
#				WHERE
#				{
#				  welcome:dispatcher welcome:hasAddress ?partialAddress .
#				  BIND(CONCAT(STR(?partialAddress), "/dms/receiveDIP") AS ?requestURI )
#				}"""^^xsd:string
#	] .
